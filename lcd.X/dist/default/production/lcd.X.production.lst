

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Aug 06 16:50:02 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001D                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  0081                     	;# 
    55  0085                     	;# 
    56  0086                     	;# 
    57  0087                     	;# 
    58  0088                     	;# 
    59  0089                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  010F                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79  0040                     _RD0	set	64
    80  0041                     _RD1	set	65
    81  0044                     _RD4	set	68
    82  0045                     _RD5	set	69
    83  0046                     _RD6	set	70
    84  0047                     _RD7	set	71
    85  0085                     _TRISAbits	set	133
    86  0088                     _TRISD	set	136
    87                           
    88                           	psect	strings
    89  0003                     __pstrings:	
    90  0003                     stringtab:	
    91  0003                     __stringtab:	
    92  0003                     stringcode:	
    93                           ;	String table - string pointers are 1 byte each
    94                           
    95  0003                     stringdir:	
    96  0003  3000               	movlw	high stringdir
    97  0004  008A               	movwf	10
    98  0005  0804               	movf	4,w
    99  0006  0A84               	incf	4,f
   100  0007  0782               	addwf	2,f
   101  0008                     __stringbase:	
   102  0008  3400               	retlw	0
   103  0009                     __end_of__stringtab:	
   104  0009                     __stringdata:	
   105  0009                     STR_1:	
   106  0009  3450               	retlw	80	;'P'
   107  000A  3472               	retlw	114	;'r'
   108  000B  346F               	retlw	111	;'o'
   109  000C  3479               	retlw	121	;'y'
   110  000D  3465               	retlw	101	;'e'
   111  000E  3463               	retlw	99	;'c'
   112  000F  3474               	retlw	116	;'t'
   113  0010  346F               	retlw	111	;'o'
   114  0011  3420               	retlw	32	;' '
   115  0012  3441               	retlw	65	;'A'
   116  0013  346E               	retlw	110	;'n'
   117  0014  3474               	retlw	116	;'t'
   118  0015  3469               	retlw	105	;'i'
   119  0016  3472               	retlw	114	;'r'
   120  0017  346F               	retlw	111	;'o'
   121  0018  3462               	retlw	98	;'b'
   122  0019  346F               	retlw	111	;'o'
   123  001A  3400               	retlw	0
   124  001B                     STR_3:	
   125  001B  346D               	retlw	109	;'m'
   126  001C  3469               	retlw	105	;'i'
   127  001D  3464               	retlw	100	;'d'
   128  001E  3469               	retlw	105	;'i'
   129  001F  3465               	retlw	101	;'e'
   130  0020  346E               	retlw	110	;'n'
   131  0021  3464               	retlw	100	;'d'
   132  0022  346F               	retlw	111	;'o'
   133  0023  3420               	retlw	32	;' '
   134  0024  346C               	retlw	108	;'l'
   135  0025  3469               	retlw	105	;'i'
   136  0026  3474               	retlw	116	;'t'
   137  0027  3472               	retlw	114	;'r'
   138  0028  346F               	retlw	111	;'o'
   139  0029  3473               	retlw	115	;'s'
   140  002A  343A               	retlw	58	;':'
   141  002B  3400               	retlw	0
   142  002C                     STR_2:	
   143  002C  3464               	retlw	100	;'d'
   144  002D  3465               	retlw	101	;'e'
   145  002E  3420               	retlw	32	;' '
   146  002F  3467               	retlw	103	;'g'
   147  0030  3461               	retlw	97	;'a'
   148  0031  3473               	retlw	115	;'s'
   149  0032  346F               	retlw	111	;'o'
   150  0033  346C               	retlw	108	;'l'
   151  0034  3469               	retlw	105	;'i'
   152  0035  346E               	retlw	110	;'n'
   153  0036  3465               	retlw	101	;'e'
   154  0037  3472               	retlw	114	;'r'
   155  0038  3461               	retlw	97	;'a'
   156  0039  3473               	retlw	115	;'s'
   157  003A  3400               	retlw	0
   158  003B                     STR_4:	
   159  003B  3448               	retlw	72	;'H'
   160  003C  3465               	retlw	101	;'e'
   161  003D  3463               	retlw	99	;'c'
   162  003E  3468               	retlw	104	;'h'
   163  003F  346F               	retlw	111	;'o'
   164  0040  3420               	retlw	32	;' '
   165  0041  3470               	retlw	112	;'p'
   166  0042  346F               	retlw	111	;'o'
   167  0043  3472               	retlw	114	;'r'
   168  0044  3400               	retlw	0
   169  0045                     STR_5:	
   170  0045  3452               	retlw	82	;'R'
   171  0046  342E               	retlw	46	;'.'
   172  0047  3420               	retlw	32	;' '
   173  0048  3443               	retlw	67	;'C'
   174  0049  3465               	retlw	101	;'e'
   175  004A  346C               	retlw	108	;'l'
   176  004B  3469               	retlw	105	;'i'
   177  004C  3473               	retlw	115	;'s'
   178  004D  3400               	retlw	0
   179  004E                     __end_of__stringdata:	
   180                           
   181                           ; #config settings
   182  0000                     
   183                           	psect	cinit
   184  07F8                     start_initialization:	
   185  07F8                     __initialization:	
   186                           
   187                           ; Clear objects allocated to BANK0
   188  07F8  01A7               	clrf	__pbssBANK0& (0+127)
   189  07F9  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   190  07FA  01A9               	clrf	(__pbssBANK0+2)& (0+127)
   191  07FB  01AA               	clrf	(__pbssBANK0+3)& (0+127)
   192  07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  07FC                     __end_of__initialization:	
   196  07FC  0183               	clrf	3
   197  07FD  120A  118A  2F27   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	bssBANK0
   200  0027                     __pbssBANK0:	
   201  0027                     _TiempoPulso:	
   202  0027                     	ds	2
   203  0029                     _estado:	
   204  0029                     	ds	2
   205                           
   206                           	psect	cstackCOMMON
   207  0070                     __pcstackCOMMON:	
   208  0070                     ?_pic_init:	
   209  0070                     ??_pic_init:	
   210                           ; 0 bytes @ 0x0
   211                           
   212  0070                     ?_Lcd_Port:	
   213                           ; 0 bytes @ 0x0
   214                           
   215  0070                     ??_Lcd_Port:	
   216                           ; 0 bytes @ 0x0
   217                           
   218  0070                     ?_Lcd_Cmd:	
   219                           ; 0 bytes @ 0x0
   220                           
   221  0070                     ?_Lcd_Init:	
   222                           ; 0 bytes @ 0x0
   223                           
   224  0070                     ?_Lcd_Write_Char:	
   225                           ; 0 bytes @ 0x0
   226                           
   227  0070                     ?_Lcd_Write_String:	
   228                           ; 0 bytes @ 0x0
   229                           
   230  0070                     ?_Lcd_Clear:	
   231                           ; 0 bytes @ 0x0
   232                           
   233  0070                     ?_main:	
   234                           ; 2 bytes @ 0x0
   235                           
   236  0070                     Lcd_Port@a:	
   237                           ; 2 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241  0070                     	ds	1
   242  0071                     ??_Lcd_Cmd:	
   243  0071                     ??_Lcd_Write_Char:	
   244                           ; 0 bytes @ 0x1
   245                           
   246                           
   247                           ; 0 bytes @ 0x1
   248  0071                     	ds	1
   249  0072                     Lcd_Write_Char@temp:	
   250                           
   251                           ; 1 bytes @ 0x2
   252  0072                     	ds	1
   253  0073                     Lcd_Cmd@a:	
   254  0073                     Lcd_Write_Char@y:	
   255                           ; 1 bytes @ 0x3
   256                           
   257                           
   258                           ; 1 bytes @ 0x3
   259  0073                     	ds	1
   260  0074                     ??_Lcd_Clear:	
   261  0074                     ?_Lcd_Set_Cursor:	
   262                           ; 0 bytes @ 0x4
   263                           
   264  0074                     ??_Lcd_Init:	
   265                           ; 0 bytes @ 0x4
   266                           
   267  0074                     Lcd_Set_Cursor@b:	
   268                           ; 0 bytes @ 0x4
   269                           
   270  0074                     Lcd_Write_Char@a:	
   271                           ; 1 bytes @ 0x4
   272                           
   273                           
   274                           ; 1 bytes @ 0x4
   275  0074                     	ds	1
   276  0075                     ??_Lcd_Set_Cursor:	
   277  0075                     ??_Lcd_Write_String:	
   278                           ; 0 bytes @ 0x5
   279                           
   280  0075                     Lcd_Write_String@i:	
   281                           ; 0 bytes @ 0x5
   282                           
   283                           
   284                           ; 2 bytes @ 0x5
   285  0075                     	ds	2
   286  0077                     Lcd_Set_Cursor@a:	
   287  0077                     Lcd_Write_String@a:	
   288                           ; 1 bytes @ 0x7
   289                           
   290                           
   291                           ; 1 bytes @ 0x7
   292  0077                     	ds	1
   293  0078                     Lcd_Set_Cursor@z:	
   294                           
   295                           ; 2 bytes @ 0x8
   296  0078                     	ds	2
   297  007A                     Lcd_Set_Cursor@y:	
   298                           
   299                           ; 2 bytes @ 0xA
   300  007A                     	ds	2
   301  007C                     Lcd_Set_Cursor@temp:	
   302                           
   303                           ; 2 bytes @ 0xC
   304  007C                     	ds	2
   305                           
   306                           	psect	cstackBANK0
   307  0020                     __pcstackBANK0:	
   308  0020                     ??_main:	
   309                           
   310                           ; 0 bytes @ 0x0
   311  0020                     	ds	3
   312  0023                     main@NuevaVar:	
   313                           
   314                           ; 2 bytes @ 0x3
   315  0023                     	ds	2
   316  0025                     main@numero:	
   317                           
   318                           ; 2 bytes @ 0x5
   319  0025                     	ds	2
   320                           
   321                           	psect	maintext
   322  0727                     __pmaintext:	
   323 ;;
   324 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   325 ;;
   326 ;; *************** function _main *****************
   327 ;; Defined at:
   328 ;;		line 23 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  NuevaVar        2    3[BANK0 ] int 
   333 ;;  numero          2    5[BANK0 ] int 
   334 ;;  a               2    0        unsigned int 
   335 ;; Return value:  Size  Location     Type
   336 ;;                  2   68[COMMON] int 
   337 ;; Registers used:
   338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 17F/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       4       0       0       0
   346 ;;      Temps:          0       3       0       0       0
   347 ;;      Totals:         0       7       0       0       0
   348 ;;Total ram usage:        7 bytes
   349 ;; Hardware stack levels required when called:    3
   350 ;; This function calls:
   351 ;;		_Lcd_Clear
   352 ;;		_Lcd_Init
   353 ;;		_Lcd_Set_Cursor
   354 ;;		_Lcd_Write_Char
   355 ;;		_Lcd_Write_String
   356 ;;		_pic_init
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           
   363                           ;psect for function _main
   364  0727                     _main:	
   365                           
   366                           ;main.c: 25: unsigned int a;
   367                           ;main.c: 26: pic_init();
   368                           
   369                           ;incstack = 0
   370                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   371  0727  120A  118A  25D4  120A  118A  	fcall	_pic_init
   372                           
   373                           ;main.c: 27: Lcd_Init();
   374  072C  120A  118A  26CC  120A  118A  	fcall	_Lcd_Init
   375  0731                     l781:	
   376                           ;main.c: 32: while(1)
   377                           
   378                           
   379                           ;main.c: 33: {
   380                           ;main.c: 34: Lcd_Clear();
   381  0731  120A  118A  25DB  120A  118A  	fcall	_Lcd_Clear
   382                           
   383                           ;main.c: 35: Lcd_Set_Cursor(1,1);
   384  0736  01F4               	clrf	Lcd_Set_Cursor@b
   385  0737  0AF4               	incf	Lcd_Set_Cursor@b,f
   386  0738  3001               	movlw	1
   387  0739  120A  118A  2675  120A  118A  	fcall	_Lcd_Set_Cursor
   388                           
   389                           ;main.c: 36: Lcd_Write_String("Proyecto Antirobo");
   390  073E  3001               	movlw	(STR_1-__stringbase)& (0+255)
   391  073F  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_String
   392                           
   393                           ;main.c: 37: Lcd_Set_Cursor(2,1);
   394  0744  01F4               	clrf	Lcd_Set_Cursor@b
   395  0745  0AF4               	incf	Lcd_Set_Cursor@b,f
   396  0746  3002               	movlw	2
   397  0747  120A  118A  2675  120A  118A  	fcall	_Lcd_Set_Cursor
   398                           
   399                           ;main.c: 38: Lcd_Write_String("de gasolineras");
   400  074C  3024               	movlw	(STR_2-__stringbase)& (0+255)
   401  074D  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_String
   402                           
   403                           ;main.c: 39: _delay((unsigned long)((1000)*(8000000/4000.0)));
   404  0752  300B               	movlw	11
   405  0753  1283               	bcf	3,5	;RP0=0, select bank0
   406  0754  1303               	bcf	3,6	;RP1=0, select bank0
   407  0755  00A2               	movwf	??_main+2
   408  0756  3026               	movlw	38
   409  0757  00A1               	movwf	??_main+1
   410  0758  3066               	movlw	102
   411  0759  00A0               	movwf	??_main
   412  075A                     u257:	
   413  075A  0BA0               	decfsz	??_main,f
   414  075B  2F5A               	goto	u257
   415  075C  0BA1               	decfsz	??_main+1,f
   416  075D  2F5A               	goto	u257
   417  075E  0BA2               	decfsz	??_main+2,f
   418  075F  2F5A               	goto	u257
   419  0760  2F61               	nop2
   420                           
   421                           ;main.c: 40: Lcd_Clear();
   422  0761  120A  118A  25DB  120A  118A  	fcall	_Lcd_Clear
   423                           
   424                           ;main.c: 42: int numero;
   425                           ;main.c: 43: for(numero = 0; numero<= 10; numero++)
   426  0766  1283               	bcf	3,5	;RP0=0, select bank0
   427  0767  1303               	bcf	3,6	;RP1=0, select bank0
   428  0768  01A5               	clrf	main@numero
   429  0769  01A6               	clrf	main@numero+1
   430  076A  0826               	movf	main@numero+1,w
   431  076B  3A80               	xorlw	128
   432  076C  00FF               	movwf	127
   433  076D  3080               	movlw	128
   434  076E  027F               	subwf	127,w
   435  076F  1D03               	skipz
   436  0770  2F73               	goto	u235
   437  0771  300B               	movlw	11
   438  0772  0225               	subwf	main@numero,w
   439  0773                     u235:	
   440  0773  1803               	btfsc	3,0
   441  0774  2FC2               	goto	l817
   442  0775                     l799:	
   443                           
   444                           ;main.c: 44: {
   445                           ;main.c: 45: Lcd_Set_Cursor(1,1);
   446  0775  01F4               	clrf	Lcd_Set_Cursor@b
   447  0776  0AF4               	incf	Lcd_Set_Cursor@b,f
   448  0777  3001               	movlw	1
   449  0778  120A  118A  2675  120A  118A  	fcall	_Lcd_Set_Cursor
   450                           
   451                           ;main.c: 46: Lcd_Write_String("midiendo litros:");
   452  077D  3013               	movlw	(STR_3-__stringbase)& (0+255)
   453  077E  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_String
   454                           
   455                           ;main.c: 47: Lcd_Set_Cursor(2,1);
   456  0783  01F4               	clrf	Lcd_Set_Cursor@b
   457  0784  0AF4               	incf	Lcd_Set_Cursor@b,f
   458  0785  3002               	movlw	2
   459  0786  120A  118A  2675  120A  118A  	fcall	_Lcd_Set_Cursor
   460                           
   461                           ;main.c: 48: int NuevaVar = numero+48;
   462  078B  1283               	bcf	3,5	;RP0=0, select bank0
   463  078C  1303               	bcf	3,6	;RP1=0, select bank0
   464  078D  0825               	movf	main@numero,w
   465  078E  3E30               	addlw	48
   466  078F  00A3               	movwf	main@NuevaVar
   467  0790  0826               	movf	main@numero+1,w
   468  0791  1803               	skipnc
   469  0792  3E01               	addlw	1
   470  0793  3E00               	addlw	0
   471  0794  00A4               	movwf	main@NuevaVar+1
   472                           
   473                           ;main.c: 49: Lcd_Write_Char(NuevaVar);
   474  0795  0823               	movf	main@NuevaVar,w
   475  0796  120A  118A  263C  120A  118A  	fcall	_Lcd_Write_Char
   476                           
   477                           ;main.c: 50: _delay((unsigned long)((1000)*(8000000/4000.0)));
   478  079B  300B               	movlw	11
   479  079C  1283               	bcf	3,5	;RP0=0, select bank0
   480  079D  1303               	bcf	3,6	;RP1=0, select bank0
   481  079E  00A2               	movwf	??_main+2
   482  079F  3026               	movlw	38
   483  07A0  00A1               	movwf	??_main+1
   484  07A1  3066               	movlw	102
   485  07A2  00A0               	movwf	??_main
   486  07A3                     u267:	
   487  07A3  0BA0               	decfsz	??_main,f
   488  07A4  2FA3               	goto	u267
   489  07A5  0BA1               	decfsz	??_main+1,f
   490  07A6  2FA3               	goto	u267
   491  07A7  0BA2               	decfsz	??_main+2,f
   492  07A8  2FA3               	goto	u267
   493  07A9  2FAA               	nop2
   494                           
   495                           ;main.c: 51: Lcd_Clear();
   496  07AA  120A  118A  25DB  120A  118A  	fcall	_Lcd_Clear
   497  07AF  3001               	movlw	1
   498  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   499  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   500  07B2  07A5               	addwf	main@numero,f
   501  07B3  1803               	skipnc
   502  07B4  0AA6               	incf	main@numero+1,f
   503  07B5  3000               	movlw	0
   504  07B6  07A6               	addwf	main@numero+1,f
   505  07B7  0826               	movf	main@numero+1,w
   506  07B8  3A80               	xorlw	128
   507  07B9  00FF               	movwf	127
   508  07BA  3080               	movlw	128
   509  07BB  027F               	subwf	127,w
   510  07BC  1D03               	skipz
   511  07BD  2FC0               	goto	u245
   512  07BE  300B               	movlw	11
   513  07BF  0225               	subwf	main@numero,w
   514  07C0                     u245:	
   515  07C0  1C03               	skipc
   516  07C1  2F75               	goto	l799
   517  07C2                     l817:	
   518                           
   519                           ;main.c: 52: }
   520                           ;main.c: 53: Lcd_Clear();
   521  07C2  120A  118A  25DB  120A  118A  	fcall	_Lcd_Clear
   522                           
   523                           ;main.c: 55: Lcd_Set_Cursor(1,1);
   524  07C7  01F4               	clrf	Lcd_Set_Cursor@b
   525  07C8  0AF4               	incf	Lcd_Set_Cursor@b,f
   526  07C9  3001               	movlw	1
   527  07CA  120A  118A  2675  120A  118A  	fcall	_Lcd_Set_Cursor
   528                           
   529                           ;main.c: 56: Lcd_Write_String("Hecho por");
   530  07CF  3033               	movlw	(STR_4-__stringbase)& (0+255)
   531  07D0  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_String
   532                           
   533                           ;main.c: 57: Lcd_Set_Cursor(2,1);
   534  07D5  01F4               	clrf	Lcd_Set_Cursor@b
   535  07D6  0AF4               	incf	Lcd_Set_Cursor@b,f
   536  07D7  3002               	movlw	2
   537  07D8  120A  118A  2675  120A  118A  	fcall	_Lcd_Set_Cursor
   538                           
   539                           ;main.c: 58: Lcd_Write_String("R. Celis");
   540  07DD  303D               	movlw	(STR_5-__stringbase)& (0+255)
   541  07DE  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_String
   542                           
   543                           ;main.c: 59: _delay((unsigned long)((1000)*(8000000/4000.0)));
   544  07E3  300B               	movlw	11
   545  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   546  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   547  07E6  00A2               	movwf	??_main+2
   548  07E7  3026               	movlw	38
   549  07E8  00A1               	movwf	??_main+1
   550  07E9  3066               	movlw	102
   551  07EA  00A0               	movwf	??_main
   552  07EB                     u277:	
   553  07EB  0BA0               	decfsz	??_main,f
   554  07EC  2FEB               	goto	u277
   555  07ED  0BA1               	decfsz	??_main+1,f
   556  07EE  2FEB               	goto	u277
   557  07EF  0BA2               	decfsz	??_main+2,f
   558  07F0  2FEB               	goto	u277
   559  07F1  2FF2               	nop2
   560                           
   561                           ;main.c: 60: Lcd_Clear();
   562  07F2  120A  118A  25DB  120A  118A  	fcall	_Lcd_Clear
   563  07F7  2F31               	goto	l781
   564  07F8                     __end_of_main:	
   565                           ;main.c: 62: }
   566                           ;main.c: 64: return 0;
   567                           ;	Return value of _main is never used
   568                           
   569                           
   570                           	psect	text1
   571  05D4                     __ptext1:	
   572 ;; *************** function _pic_init *****************
   573 ;; Defined at:
   574 ;;		line 10 in file "lcd.h"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;		None               void
   581 ;; Registers used:
   582 ;;		status,2
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           
   602                           ;psect for function _pic_init
   603  05D4                     _pic_init:	
   604                           
   605                           ;lcd.h: 12: TRISD = 0x00;
   606                           
   607                           ;incstack = 0
   608                           ; Regs used in _pic_init: [status,2]
   609  05D4  1683               	bsf	3,5	;RP0=1, select bank1
   610  05D5  1303               	bcf	3,6	;RP1=0, select bank1
   611  05D6  0188               	clrf	8	;volatile
   612                           
   613                           ;lcd.h: 14: TRISAbits.TRISA0 = 1;
   614  05D7  1405               	bsf	5,0	;volatile
   615                           
   616                           ;lcd.h: 16: TRISAbits.TRISA1 = 1;
   617  05D8  1485               	bsf	5,1	;volatile
   618                           
   619                           ;lcd.h: 18: TRISAbits.TRISA2 = 1;
   620  05D9  1505               	bsf	5,2	;volatile
   621  05DA  0008               	return
   622  05DB                     __end_of_pic_init:	
   623                           
   624                           	psect	text2
   625  061A                     __ptext2:	
   626 ;; *************** function _Lcd_Write_String *****************
   627 ;; Defined at:
   628 ;;		line 116 in file "lcd.h"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  a               1    wreg     PTR unsigned char 
   631 ;;		 -> STR_5(9), STR_4(10), STR_3(17), STR_2(15), 
   632 ;;		 -> STR_1(18), 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  a               1    7[COMMON] PTR unsigned char 
   635 ;;		 -> STR_5(9), STR_4(10), STR_3(17), STR_2(15), 
   636 ;;		 -> STR_1(18), 
   637 ;;  i               2    5[COMMON] int 
   638 ;; Return value:  Size  Location     Type
   639 ;;		None               void
   640 ;; Registers used:
   641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         3       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0
   650 ;;      Totals:         3       0       0       0       0
   651 ;;Total ram usage:        3 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    2
   654 ;; This function calls:
   655 ;;		_Lcd_Write_Char
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function _Lcd_Write_String
   663  061A                     _Lcd_Write_String:	
   664                           
   665                           ;incstack = 0
   666                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   667                           ;Lcd_Write_String@a stored from wreg
   668  061A  00F7               	movwf	Lcd_Write_String@a
   669                           
   670                           ;lcd.h: 119: int i;
   671                           ;lcd.h: 120: for(i=0;a[i]!='\0';i++)
   672  061B  01F5               	clrf	Lcd_Write_String@i
   673  061C  01F6               	clrf	Lcd_Write_String@i+1
   674  061D                     l771:	
   675  061D  0875               	movf	Lcd_Write_String@i,w
   676  061E  0777               	addwf	Lcd_Write_String@a,w
   677  061F  0084               	movwf	4
   678  0620  120A  118A  2003  120A  118A  	fcall	stringdir
   679  0625  3800               	iorlw	0
   680  0626  1903               	btfsc	3,2
   681  0627  0008               	return
   682                           
   683                           ;lcd.h: 121: Lcd_Write_Char(a[i]);
   684  0628  0875               	movf	Lcd_Write_String@i,w
   685  0629  0777               	addwf	Lcd_Write_String@a,w
   686  062A  0084               	movwf	4
   687  062B  120A  118A  2003  120A  118A  	fcall	stringdir
   688  0630  120A  118A  263C  120A  118A  	fcall	_Lcd_Write_Char
   689  0635  3001               	movlw	1
   690  0636  07F5               	addwf	Lcd_Write_String@i,f
   691  0637  1803               	skipnc
   692  0638  0AF6               	incf	Lcd_Write_String@i+1,f
   693  0639  3000               	movlw	0
   694  063A  07F6               	addwf	Lcd_Write_String@i+1,f
   695  063B  2E1D               	goto	l771
   696  063C                     __end_of_Lcd_Write_String:	
   697                           
   698                           	psect	text3
   699  063C                     __ptext3:	
   700 ;; *************** function _Lcd_Write_Char *****************
   701 ;; Defined at:
   702 ;;		line 99 in file "lcd.h"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  a               1    wreg     unsigned char 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  a               1    4[COMMON] unsigned char 
   707 ;;  y               1    3[COMMON] unsigned char 
   708 ;;  temp            1    2[COMMON] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;		None               void
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   718 ;;      Params:         0       0       0       0       0
   719 ;;      Locals:         3       0       0       0       0
   720 ;;      Temps:          1       0       0       0       0
   721 ;;      Totals:         4       0       0       0       0
   722 ;;Total ram usage:        4 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    1
   725 ;; This function calls:
   726 ;;		_Lcd_Port
   727 ;; This function is called by:
   728 ;;		_Lcd_Write_String
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _Lcd_Write_Char
   735  063C                     _Lcd_Write_Char:	
   736                           
   737                           ;incstack = 0
   738                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   739                           ;Lcd_Write_Char@a stored from wreg
   740  063C  00F4               	movwf	Lcd_Write_Char@a
   741                           
   742                           ;lcd.h: 102: char temp,y;
   743                           ;lcd.h: 103: temp = a&0x0F;
   744  063D  0874               	movf	Lcd_Write_Char@a,w
   745  063E  390F               	andlw	15
   746  063F  00F1               	movwf	??_Lcd_Write_Char
   747  0640  0871               	movf	??_Lcd_Write_Char,w
   748  0641  00F2               	movwf	Lcd_Write_Char@temp
   749                           
   750                           ;lcd.h: 104: y = a&0xF0;
   751  0642  0874               	movf	Lcd_Write_Char@a,w
   752  0643  39F0               	andlw	240
   753  0644  00F1               	movwf	??_Lcd_Write_Char
   754  0645  0871               	movf	??_Lcd_Write_Char,w
   755  0646  00F3               	movwf	Lcd_Write_Char@y
   756                           
   757                           ;lcd.h: 105: RD1 = 1;
   758  0647  1283               	bcf	3,5	;RP0=0, select bank0
   759  0648  1303               	bcf	3,6	;RP1=0, select bank0
   760  0649  1488               	bsf	8,1	;volatile
   761                           
   762                           ;lcd.h: 106: Lcd_Port(y>>4);
   763  064A  0873               	movf	Lcd_Write_Char@y,w
   764  064B  00F1               	movwf	??_Lcd_Write_Char
   765  064C  3004               	movlw	4
   766  064D                     u175:	
   767  064D  1003               	clrc
   768  064E  0CF1               	rrf	??_Lcd_Write_Char,f
   769  064F  3EFF               	addlw	-1
   770  0650  1D03               	skipz
   771  0651  2E4D               	goto	u175
   772  0652  0871               	movf	??_Lcd_Write_Char,w
   773  0653  120A  118A  25E6  120A  118A  	fcall	_Lcd_Port
   774                           
   775                           ;lcd.h: 107: RD0 = 1;
   776  0658  1283               	bcf	3,5	;RP0=0, select bank0
   777  0659  1303               	bcf	3,6	;RP1=0, select bank0
   778  065A  1408               	bsf	8,0	;volatile
   779                           
   780                           ;lcd.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
   781  065B  301A               	movlw	26
   782  065C  00F1               	movwf	??_Lcd_Write_Char
   783  065D                     u287:	
   784  065D  0BF1               	decfsz	??_Lcd_Write_Char,f
   785  065E  2E5D               	goto	u287
   786  065F  0000               	nop
   787                           
   788                           ;lcd.h: 109: RD0 = 0;
   789  0660  1283               	bcf	3,5	;RP0=0, select bank0
   790  0661  1303               	bcf	3,6	;RP1=0, select bank0
   791  0662  1008               	bcf	8,0	;volatile
   792                           
   793                           ;lcd.h: 110: Lcd_Port(temp);
   794  0663  0872               	movf	Lcd_Write_Char@temp,w
   795  0664  120A  118A  25E6  120A  118A  	fcall	_Lcd_Port
   796                           
   797                           ;lcd.h: 111: RD0 = 1;
   798  0669  1283               	bcf	3,5	;RP0=0, select bank0
   799  066A  1303               	bcf	3,6	;RP1=0, select bank0
   800  066B  1408               	bsf	8,0	;volatile
   801                           
   802                           ;lcd.h: 112: _delay((unsigned long)((40)*(8000000/4000000.0)));
   803  066C  301A               	movlw	26
   804  066D  00F1               	movwf	??_Lcd_Write_Char
   805  066E                     u297:	
   806  066E  0BF1               	decfsz	??_Lcd_Write_Char,f
   807  066F  2E6E               	goto	u297
   808  0670  0000               	nop
   809                           
   810                           ;lcd.h: 113: RD0 = 0;
   811  0671  1283               	bcf	3,5	;RP0=0, select bank0
   812  0672  1303               	bcf	3,6	;RP1=0, select bank0
   813  0673  1008               	bcf	8,0	;volatile
   814  0674  0008               	return
   815  0675                     __end_of_Lcd_Write_Char:	
   816                           
   817                           	psect	text4
   818  0675                     __ptext4:	
   819 ;; *************** function _Lcd_Set_Cursor *****************
   820 ;; Defined at:
   821 ;;		line 58 in file "lcd.h"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  a               1    wreg     unsigned char 
   824 ;;  b               1    4[COMMON] unsigned char 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  a               1    7[COMMON] unsigned char 
   827 ;;  temp            2   12[COMMON] int 
   828 ;;  y               2   10[COMMON] int 
   829 ;;  z               2    8[COMMON] int 
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         1       0       0       0       0
   840 ;;      Locals:         7       0       0       0       0
   841 ;;      Temps:          2       0       0       0       0
   842 ;;      Totals:        10       0       0       0       0
   843 ;;Total ram usage:       10 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    2
   846 ;; This function calls:
   847 ;;		_Lcd_Cmd
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           
   854                           ;psect for function _Lcd_Set_Cursor
   855  0675                     _Lcd_Set_Cursor:	
   856                           
   857                           ;incstack = 0
   858                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   859                           ;Lcd_Set_Cursor@a stored from wreg
   860  0675  00F7               	movwf	Lcd_Set_Cursor@a
   861                           
   862                           ;lcd.h: 60: int temp,z,y;
   863                           ;lcd.h: 61: if(a == 1)
   864  0676  0877               	movf	Lcd_Set_Cursor@a,w
   865  0677  3A01               	xorlw	1
   866  0678  1D03               	skipz
   867  0679  2EA1               	goto	l743
   868                           
   869                           ;lcd.h: 62: {
   870                           ;lcd.h: 63: temp = 0x80 + b - 1;
   871  067A  0874               	movf	Lcd_Set_Cursor@b,w
   872  067B  3E7F               	addlw	127
   873  067C  00FC               	movwf	Lcd_Set_Cursor@temp
   874  067D  3000               	movlw	0
   875  067E  1803               	skipnc
   876  067F  3001               	movlw	1
   877  0680  00FD               	movwf	Lcd_Set_Cursor@temp+1
   878                           
   879                           ;lcd.h: 64: z = temp>>4;
   880  0681  087D               	movf	Lcd_Set_Cursor@temp+1,w
   881  0682  00F6               	movwf	??_Lcd_Set_Cursor+1
   882  0683  087C               	movf	Lcd_Set_Cursor@temp,w
   883  0684  00F5               	movwf	??_Lcd_Set_Cursor
   884  0685  3004               	movlw	4
   885  0686  00FF               	movwf	127
   886  0687                     u195:	
   887  0687  0D76               	rlf	??_Lcd_Set_Cursor+1,w
   888  0688  0CF6               	rrf	??_Lcd_Set_Cursor+1,f
   889  0689  0CF5               	rrf	??_Lcd_Set_Cursor,f
   890  068A  0BFF               	decfsz	127,f
   891  068B  2E87               	goto	u195
   892  068C  0875               	movf	??_Lcd_Set_Cursor,w
   893  068D  00F8               	movwf	Lcd_Set_Cursor@z
   894  068E  0876               	movf	??_Lcd_Set_Cursor+1,w
   895  068F  00F9               	movwf	Lcd_Set_Cursor@z+1
   896                           
   897                           ;lcd.h: 65: y = temp & 0x0F;
   898  0690  300F               	movlw	15
   899  0691  057C               	andwf	Lcd_Set_Cursor@temp,w
   900  0692  00FA               	movwf	Lcd_Set_Cursor@y
   901  0693  3000               	movlw	0
   902  0694  057D               	andwf	Lcd_Set_Cursor@temp+1,w
   903  0695  00FB               	movwf	Lcd_Set_Cursor@y+1
   904                           
   905                           ;lcd.h: 66: Lcd_Cmd(z);
   906  0696  0878               	movf	Lcd_Set_Cursor@z,w
   907  0697  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
   908                           
   909                           ;lcd.h: 67: Lcd_Cmd(y);
   910  069C  087A               	movf	Lcd_Set_Cursor@y,w
   911  069D  120A  118A  2600   	fcall	_Lcd_Cmd
   912                           
   913                           ;lcd.h: 68: }
   914  06A0  0008               	return
   915  06A1                     l743:	
   916                           
   917                           ;lcd.h: 69: else if(a == 2)
   918  06A1  0877               	movf	Lcd_Set_Cursor@a,w
   919  06A2  3A02               	xorlw	2
   920  06A3  1D03               	skipz
   921  06A4  0008               	return
   922                           
   923                           ;lcd.h: 70: {
   924                           ;lcd.h: 71: temp = 0xC0 + b - 1;
   925  06A5  0874               	movf	Lcd_Set_Cursor@b,w
   926  06A6  3EBF               	addlw	191
   927  06A7  00FC               	movwf	Lcd_Set_Cursor@temp
   928  06A8  3000               	movlw	0
   929  06A9  1803               	skipnc
   930  06AA  3001               	movlw	1
   931  06AB  00FD               	movwf	Lcd_Set_Cursor@temp+1
   932                           
   933                           ;lcd.h: 72: z = temp>>4;
   934  06AC  087D               	movf	Lcd_Set_Cursor@temp+1,w
   935  06AD  00F6               	movwf	??_Lcd_Set_Cursor+1
   936  06AE  087C               	movf	Lcd_Set_Cursor@temp,w
   937  06AF  00F5               	movwf	??_Lcd_Set_Cursor
   938  06B0  3004               	movlw	4
   939  06B1  00FF               	movwf	127
   940  06B2                     u215:	
   941  06B2  0D76               	rlf	??_Lcd_Set_Cursor+1,w
   942  06B3  0CF6               	rrf	??_Lcd_Set_Cursor+1,f
   943  06B4  0CF5               	rrf	??_Lcd_Set_Cursor,f
   944  06B5  0BFF               	decfsz	127,f
   945  06B6  2EB2               	goto	u215
   946  06B7  0875               	movf	??_Lcd_Set_Cursor,w
   947  06B8  00F8               	movwf	Lcd_Set_Cursor@z
   948  06B9  0876               	movf	??_Lcd_Set_Cursor+1,w
   949  06BA  00F9               	movwf	Lcd_Set_Cursor@z+1
   950                           
   951                           ;lcd.h: 73: y = temp & 0x0F;
   952  06BB  300F               	movlw	15
   953  06BC  057C               	andwf	Lcd_Set_Cursor@temp,w
   954  06BD  00FA               	movwf	Lcd_Set_Cursor@y
   955  06BE  3000               	movlw	0
   956  06BF  057D               	andwf	Lcd_Set_Cursor@temp+1,w
   957  06C0  00FB               	movwf	Lcd_Set_Cursor@y+1
   958                           
   959                           ;lcd.h: 74: Lcd_Cmd(z);
   960  06C1  0878               	movf	Lcd_Set_Cursor@z,w
   961  06C2  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
   962                           
   963                           ;lcd.h: 75: Lcd_Cmd(y);
   964  06C7  087A               	movf	Lcd_Set_Cursor@y,w
   965  06C8  120A  118A  2600   	fcall	_Lcd_Cmd
   966  06CB  0008               	return
   967  06CC                     __end_of_Lcd_Set_Cursor:	
   968                           
   969                           	psect	text5
   970  06CC                     __ptext5:	
   971 ;; *************** function _Lcd_Init *****************
   972 ;; Defined at:
   973 ;;		line 79 in file "lcd.h"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;		None               void
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   987 ;;      Params:         0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0
   989 ;;      Temps:          2       0       0       0       0
   990 ;;      Totals:         2       0       0       0       0
   991 ;;Total ram usage:        2 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    2
   994 ;; This function calls:
   995 ;;		_Lcd_Cmd
   996 ;;		_Lcd_Port
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function _Lcd_Init
  1004  06CC                     _Lcd_Init:	
  1005                           
  1006                           ;lcd.h: 82: Lcd_Port(0x00);
  1007                           
  1008                           ;incstack = 0
  1009                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1010  06CC  3000               	movlw	0
  1011  06CD  120A  118A  25E6  120A  118A  	fcall	_Lcd_Port
  1012                           
  1013                           ;lcd.h: 83: _delay((unsigned long)((20)*(8000000/4000.0)));
  1014  06D2  3034               	movlw	52
  1015  06D3  00F5               	movwf	??_Lcd_Init+1
  1016  06D4  30F1               	movlw	241
  1017  06D5  00F4               	movwf	??_Lcd_Init
  1018  06D6                     u307:	
  1019  06D6  0BF4               	decfsz	??_Lcd_Init,f
  1020  06D7  2ED6               	goto	u307
  1021  06D8  0BF5               	decfsz	??_Lcd_Init+1,f
  1022  06D9  2ED6               	goto	u307
  1023  06DA  2EDB               	nop2
  1024                           
  1025                           ;lcd.h: 84: Lcd_Cmd(0x03);
  1026  06DB  3003               	movlw	3
  1027  06DC  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1028                           
  1029                           ;lcd.h: 85: _delay((unsigned long)((5)*(8000000/4000.0)));
  1030  06E1  300D               	movlw	13
  1031  06E2  00F5               	movwf	??_Lcd_Init+1
  1032  06E3  30FB               	movlw	251
  1033  06E4  00F4               	movwf	??_Lcd_Init
  1034  06E5                     u317:	
  1035  06E5  0BF4               	decfsz	??_Lcd_Init,f
  1036  06E6  2EE5               	goto	u317
  1037  06E7  0BF5               	decfsz	??_Lcd_Init+1,f
  1038  06E8  2EE5               	goto	u317
  1039  06E9  2EEA               	nop2
  1040                           
  1041                           ;lcd.h: 86: Lcd_Cmd(0x03);
  1042  06EA  3003               	movlw	3
  1043  06EB  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1044                           
  1045                           ;lcd.h: 87: _delay((unsigned long)((11)*(8000000/4000.0)));
  1046  06F0  301D               	movlw	29
  1047  06F1  00F5               	movwf	??_Lcd_Init+1
  1048  06F2  3091               	movlw	145
  1049  06F3  00F4               	movwf	??_Lcd_Init
  1050  06F4                     u327:	
  1051  06F4  0BF4               	decfsz	??_Lcd_Init,f
  1052  06F5  2EF4               	goto	u327
  1053  06F6  0BF5               	decfsz	??_Lcd_Init+1,f
  1054  06F7  2EF4               	goto	u327
  1055                           
  1056                           ;lcd.h: 88: Lcd_Cmd(0x03);
  1057  06F8  3003               	movlw	3
  1058  06F9  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1059                           
  1060                           ;lcd.h: 90: Lcd_Cmd(0x02);
  1061  06FE  3002               	movlw	2
  1062  06FF  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1063                           
  1064                           ;lcd.h: 91: Lcd_Cmd(0x02);
  1065  0704  3002               	movlw	2
  1066  0705  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1067                           
  1068                           ;lcd.h: 92: Lcd_Cmd(0x08);
  1069  070A  3008               	movlw	8
  1070  070B  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1071                           
  1072                           ;lcd.h: 93: Lcd_Cmd(0x00);
  1073  0710  3000               	movlw	0
  1074  0711  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1075                           
  1076                           ;lcd.h: 94: Lcd_Cmd(0x0C);
  1077  0716  300C               	movlw	12
  1078  0717  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1079                           
  1080                           ;lcd.h: 95: Lcd_Cmd(0x00);
  1081  071C  3000               	movlw	0
  1082  071D  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1083                           
  1084                           ;lcd.h: 96: Lcd_Cmd(0x06);
  1085  0722  3006               	movlw	6
  1086  0723  120A  118A  2600   	fcall	_Lcd_Cmd
  1087  0726  0008               	return
  1088  0727                     __end_of_Lcd_Init:	
  1089                           
  1090                           	psect	text6
  1091  05DB                     __ptext6:	
  1092 ;; *************** function _Lcd_Clear *****************
  1093 ;; Defined at:
  1094 ;;		line 52 in file "lcd.h"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  2   37[COMMON] int 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0
  1111 ;;      Totals:         0       0       0       0       0
  1112 ;;Total ram usage:        0 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    2
  1115 ;; This function calls:
  1116 ;;		_Lcd_Cmd
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function _Lcd_Clear
  1124  05DB                     _Lcd_Clear:	
  1125                           
  1126                           ;lcd.h: 54: Lcd_Cmd(0);
  1127                           
  1128                           ;incstack = 0
  1129                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1130  05DB  3000               	movlw	0
  1131  05DC  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1132                           
  1133                           ;lcd.h: 55: Lcd_Cmd(1);
  1134  05E1  3001               	movlw	1
  1135  05E2  120A  118A  2600   	fcall	_Lcd_Cmd
  1136  05E5  0008               	return
  1137  05E6                     __end_of_Lcd_Clear:	
  1138                           
  1139                           	psect	text7
  1140  0600                     __ptext7:	
  1141 ;; *************** function _Lcd_Cmd *****************
  1142 ;; Defined at:
  1143 ;;		line 43 in file "lcd.h"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  a               1    wreg     unsigned char 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  a               1    3[COMMON] unsigned char 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;		None               void
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0, pclath, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         1       0       0       0       0
  1159 ;;      Temps:          2       0       0       0       0
  1160 ;;      Totals:         3       0       0       0       0
  1161 ;;Total ram usage:        3 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    1
  1164 ;; This function calls:
  1165 ;;		_Lcd_Port
  1166 ;; This function is called by:
  1167 ;;		_Lcd_Clear
  1168 ;;		_Lcd_Set_Cursor
  1169 ;;		_Lcd_Init
  1170 ;;		_Lcd_Shift_Right
  1171 ;;		_Lcd_Shift_Left
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _Lcd_Cmd
  1177  0600                     _Lcd_Cmd:	
  1178                           
  1179                           ;incstack = 0
  1180                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1181                           ;Lcd_Cmd@a stored from wreg
  1182  0600  00F3               	movwf	Lcd_Cmd@a
  1183                           
  1184                           ;lcd.h: 45: RD1 = 0;
  1185  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0603  1088               	bcf	8,1	;volatile
  1188                           
  1189                           ;lcd.h: 46: Lcd_Port(a);
  1190  0604  0873               	movf	Lcd_Cmd@a,w
  1191  0605  120A  118A  25E6  120A  118A  	fcall	_Lcd_Port
  1192                           
  1193                           ;lcd.h: 47: RD0 = 1;
  1194  060A  1283               	bcf	3,5	;RP0=0, select bank0
  1195  060B  1303               	bcf	3,6	;RP1=0, select bank0
  1196  060C  1408               	bsf	8,0	;volatile
  1197                           
  1198                           ;lcd.h: 48: _delay((unsigned long)((4)*(8000000/4000.0)));
  1199  060D  300B               	movlw	11
  1200  060E  00F2               	movwf	??_Lcd_Cmd+1
  1201  060F  3062               	movlw	98
  1202  0610  00F1               	movwf	??_Lcd_Cmd
  1203  0611                     u337:	
  1204  0611  0BF1               	decfsz	??_Lcd_Cmd,f
  1205  0612  2E11               	goto	u337
  1206  0613  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1207  0614  2E11               	goto	u337
  1208  0615  0000               	nop
  1209                           
  1210                           ;lcd.h: 49: RD0 = 0;
  1211  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0618  1008               	bcf	8,0	;volatile
  1214  0619  0008               	return
  1215  061A                     __end_of_Lcd_Cmd:	
  1216                           
  1217                           	psect	text8
  1218  05E6                     __ptext8:	
  1219 ;; *************** function _Lcd_Port *****************
  1220 ;; Defined at:
  1221 ;;		line 21 in file "lcd.h"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  a               1    wreg     unsigned char 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  a               1    0[COMMON] unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;		None               void
  1228 ;; Registers used:
  1229 ;;		wreg
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       0       0       0
  1236 ;;      Locals:         1       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0
  1238 ;;      Totals:         1       0       0       0       0
  1239 ;;Total ram usage:        1 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_Lcd_Cmd
  1245 ;;		_Lcd_Init
  1246 ;;		_Lcd_Write_Char
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _Lcd_Port
  1252  05E6                     _Lcd_Port:	
  1253                           
  1254                           ;incstack = 0
  1255                           ; Regs used in _Lcd_Port: [wreg]
  1256                           ;Lcd_Port@a stored from wreg
  1257  05E6  00F0               	movwf	Lcd_Port@a
  1258                           
  1259                           ;lcd.h: 23: if(a & 1)
  1260  05E7  1C70               	btfss	Lcd_Port@a,0
  1261  05E8  2DED               	goto	l24
  1262                           
  1263                           ;lcd.h: 24: RD4 = 1;
  1264  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1265  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1266  05EB  1608               	bsf	8,4	;volatile
  1267  05EC  2DF0               	goto	l25
  1268  05ED                     l24:	
  1269                           
  1270                           ;lcd.h: 25: else
  1271                           ;lcd.h: 26: RD4 = 0;
  1272  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1273  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1274  05EF  1208               	bcf	8,4	;volatile
  1275  05F0                     l25:	
  1276                           
  1277                           ;lcd.h: 28: if(a & 2)
  1278  05F0  1CF0               	btfss	Lcd_Port@a,1
  1279  05F1  2DF4               	goto	l26
  1280                           
  1281                           ;lcd.h: 29: RD5 = 1;
  1282  05F2  1688               	bsf	8,5	;volatile
  1283  05F3  2DF5               	goto	l27
  1284  05F4                     l26:	
  1285                           
  1286                           ;lcd.h: 30: else
  1287                           ;lcd.h: 31: RD5 = 0;
  1288  05F4  1288               	bcf	8,5	;volatile
  1289  05F5                     l27:	
  1290                           
  1291                           ;lcd.h: 33: if(a & 4)
  1292  05F5  1D70               	btfss	Lcd_Port@a,2
  1293  05F6  2DF9               	goto	l28
  1294                           
  1295                           ;lcd.h: 34: RD6 = 1;
  1296  05F7  1708               	bsf	8,6	;volatile
  1297  05F8  2DFA               	goto	l29
  1298  05F9                     l28:	
  1299                           
  1300                           ;lcd.h: 35: else
  1301                           ;lcd.h: 36: RD6 = 0;
  1302  05F9  1308               	bcf	8,6	;volatile
  1303  05FA                     l29:	
  1304                           
  1305                           ;lcd.h: 38: if(a & 8)
  1306  05FA  1DF0               	btfss	Lcd_Port@a,3
  1307  05FB  2DFE               	goto	l30
  1308                           
  1309                           ;lcd.h: 39: RD7 = 1;
  1310  05FC  1788               	bsf	8,7	;volatile
  1311  05FD  0008               	return
  1312  05FE                     l30:	
  1313                           
  1314                           ;lcd.h: 40: else
  1315                           ;lcd.h: 41: RD7 = 0;
  1316  05FE  1388               	bcf	8,7	;volatile
  1317  05FF  0008               	return
  1318  0600                     __end_of_Lcd_Port:	
  1319  007E                     btemp	set	126	;btemp
  1320  007E                     wtemp	set	126
  1321  007E                     wtemp0	set	126
  1322  0080                     wtemp1	set	128
  1323  0082                     wtemp2	set	130
  1324  0084                     wtemp3	set	132
  1325  0086                     wtemp4	set	134
  1326  0088                     wtemp5	set	136
  1327  007F                     wtemp6	set	127
  1328  007E                     ttemp	set	126
  1329  007E                     ttemp0	set	126
  1330  0081                     ttemp1	set	129
  1331  0084                     ttemp2	set	132
  1332  0087                     ttemp3	set	135
  1333  007F                     ttemp4	set	127
  1334  007E                     ltemp	set	126
  1335  007E                     ltemp0	set	126
  1336  0082                     ltemp1	set	130
  1337  0086                     ltemp2	set	134
  1338  0080                     ltemp3	set	128


Data Sizes:
    Strings     69
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1678
                                              0 BANK0      7     7      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _pic_init
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     403
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                      10     9      1     698
                                              4 COMMON    10     9      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _pic_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Aug 06 16:50:02 2015

                        pc 0002                __CFG_CP$OFF 0000                         l30 05FE  
                       l24 05ED                         l25 05F0                         l26 05F4  
                       l27 05F5                         l28 05F9                         l29 05FA  
                       fsr 0004                        l743 06A1                        l817 07C2  
                      l771 061D                        l781 0731                        l799 0775  
                      _RD0 0040                        _RD1 0041                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u215 06B2                        u307 06D6                        u235 0773  
                      u317 06E5                        u245 07C0                        u327 06F4  
                      u175 064D                        u337 0611                        u257 075A  
             __CFG_CPD$OFF 0000                        u195 0687                        u267 07A3  
                      u277 07EB                        u287 065D                        u297 066E  
                      fsr0 0004               __CFG_FOSC$HS 0000               main@NuevaVar 0023  
                     STR_1 0009                       STR_2 002C                       STR_3 001B  
                     STR_4 003B                       STR_5 0045               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0070                       _main 0727                       btemp 007E  
            __CFG_BOREN$ON 0000                       ltemp 007E                       start 0000  
                     ttemp 007E         ??_Lcd_Write_String 0075                       wtemp 007E  
          __end_of_Lcd_Cmd 061A                      ?_main 0070              __CFG_WDTE$OFF 0000  
  __size_of_Lcd_Set_Cursor 0057                      _TRISD 0088                      pclath 000A  
                    ltemp0 007E                      ltemp1 0082                      ltemp2 0086  
                    ltemp3 0080                      ttemp0 007E                      ttemp1 0081  
                    ttemp2 0084                      ttemp3 0087                      ttemp4 007F  
                    status 0003                      wtemp0 007E                      wtemp1 0080  
                    wtemp2 0082                      wtemp3 0084                      wtemp4 0086  
                    wtemp5 0088                      wtemp6 007F           __end_of_Lcd_Init 0727  
         __end_of_Lcd_Port 0600            __initialization 07F8               __end_of_main 07F8  
                   ??_main 0020         __size_of_Lcd_Clear 000B                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0039             __CFG_PWRTE$OFF 0000                     _estado 0029  
         __end_of_pic_init 05DB            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 007A            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 05E6             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0675  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0027  
               __pmaintext 0727  __size_of_Lcd_Write_String 0022     __end_of_Lcd_Set_Cursor 06CC  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 063C                    _Lcd_Cmd 0600                  ?_pic_init 0070  
              _TiempoPulso 0027            ?_Lcd_Set_Cursor 0074                    __ptext1 05D4  
                  __ptext2 061A                    __ptext3 063C                    __ptext4 0675  
                  __ptext5 06CC                    __ptext6 05DB                    __ptext7 0600  
                  __ptext8 05E6     __end_of_Lcd_Write_Char 0675       end_of_initialization 07FC  
               ??_pic_init 0070                  Lcd_Port@a 0070                  _TRISAbits 0085  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
               main@numero 0025                  _Lcd_Clear 05DB           _Lcd_Write_String 061A  
      start_initialization 07F8          __size_of_Lcd_Init 005B          __size_of_Lcd_Port 001A  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002              __pcstackBANK0 0020        __end_of__stringdata 004E  
                 ?_Lcd_Cmd 0070          __size_of_pic_init 0007           ??_Lcd_Set_Cursor 0075  
                __pstrings 0003                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              __stringbase 0008                __stringdata 0009           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 06CC                   _Lcd_Port 05E6   __end_of_Lcd_Write_String 063C  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009              __size_of_main 00D1  
                 _pic_init 05D4         Lcd_Write_Char@temp 0072                  stringcode 0003  
       Lcd_Set_Cursor@temp 007C                   stringdir 0003                   stringtab 0003  
