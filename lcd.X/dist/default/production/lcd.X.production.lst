

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Aug 07 11:22:36 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  0086                     	;# 
    68  0087                     	;# 
    69  0088                     	;# 
    70  0089                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0094                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90                           
    91                           	psect	nvBANK0
    92  0060                     __pnvBANK0:	
    93  0060                     _randx:	
    94  0060                     	ds	4
    95  0064                     _randf:	
    96  0064                     	ds	1
    97  0040                     _RD0	set	64
    98  0041                     _RD1	set	65
    99  0044                     _RD4	set	68
   100  0045                     _RD5	set	69
   101  0046                     _RD6	set	70
   102  0047                     _RD7	set	71
   103  0085                     _TRISAbits	set	133
   104  0088                     _TRISD	set	136
   105                           
   106                           	psect	strings
   107  0800                     __pstrings:	
   108  0800                     stringtab:	
   109  0800                     __stringtab:	
   110  0800                     stringcode:	
   111                           ;	String table - string pointers are 1 byte each
   112                           
   113  0800                     stringdir:	
   114  0800  3008               	movlw	high stringdir
   115  0801  008A               	movwf	10
   116  0802  0804               	movf	4,w
   117  0803  0A84               	incf	4,f
   118  0804  0782               	addwf	2,f
   119  0805                     __stringbase:	
   120  0805  3400               	retlw	0
   121  0806                     __end_of__stringtab:	
   122  0806                     __stringdata:	
   123  0806                     STR_1:	
   124  0806  3450               	retlw	80	;'P'
   125  0807  3472               	retlw	114	;'r'
   126  0808  346F               	retlw	111	;'o'
   127  0809  3479               	retlw	121	;'y'
   128  080A  3465               	retlw	101	;'e'
   129  080B  3463               	retlw	99	;'c'
   130  080C  3474               	retlw	116	;'t'
   131  080D  346F               	retlw	111	;'o'
   132  080E  3420               	retlw	32	;' '
   133  080F  3441               	retlw	65	;'A'
   134  0810  346E               	retlw	110	;'n'
   135  0811  3474               	retlw	116	;'t'
   136  0812  3469               	retlw	105	;'i'
   137  0813  3472               	retlw	114	;'r'
   138  0814  346F               	retlw	111	;'o'
   139  0815  3462               	retlw	98	;'b'
   140  0816  346F               	retlw	111	;'o'
   141  0817  3400               	retlw	0
   142  0818                     STR_2:	
   143  0818  3464               	retlw	100	;'d'
   144  0819  3465               	retlw	101	;'e'
   145  081A  3420               	retlw	32	;' '
   146  081B  3467               	retlw	103	;'g'
   147  081C  3461               	retlw	97	;'a'
   148  081D  3473               	retlw	115	;'s'
   149  081E  346F               	retlw	111	;'o'
   150  081F  346C               	retlw	108	;'l'
   151  0820  3469               	retlw	105	;'i'
   152  0821  346E               	retlw	110	;'n'
   153  0822  3465               	retlw	101	;'e'
   154  0823  3472               	retlw	114	;'r'
   155  0824  3461               	retlw	97	;'a'
   156  0825  3473               	retlw	115	;'s'
   157  0826  3400               	retlw	0
   158  0827                     STR_6:	
   159  0827  344D               	retlw	77	;'M'
   160  0828  3469               	retlw	105	;'i'
   161  0829  3464               	retlw	100	;'d'
   162  082A  3469               	retlw	105	;'i'
   163  082B  3465               	retlw	101	;'e'
   164  082C  346E               	retlw	110	;'n'
   165  082D  3464               	retlw	100	;'d'
   166  082E  346F               	retlw	111	;'o'
   167  082F  342E               	retlw	46	;'.'
   168  0830  342E               	retlw	46	;'.'
   169  0831  3400               	retlw	0
   170  0832                     STR_3:	
   171  0832  3454               	retlw	84	;'T'
   172  0833  346F               	retlw	111	;'o'
   173  0834  3474               	retlw	116	;'t'
   174  0835  3461               	retlw	97	;'a'
   175  0836  346C               	retlw	108	;'l'
   176  0837  343D               	retlw	61	;'='
   177  0838  3400               	retlw	0
   178  0839                     STR_5:	
   179  0839  3420               	retlw	32	;' '
   180  083A  344C               	retlw	76	;'L'
   181  083B  3474               	retlw	116	;'t'
   182  083C  3473               	retlw	115	;'s'
   183  083D  342E               	retlw	46	;'.'
   184  083E  3400               	retlw	0
   185  083F                     __end_of__stringdata:	
   186                           
   187                           ; #config settings
   188  0000                     
   189                           	psect	cinit
   190  07F5                     start_initialization:	
   191  07F5                     __initialization:	
   192                           
   193                           ; Clear objects allocated to BANK0
   194  07F5  1383               	bcf	3,7	;select IRP bank0
   195  07F6  3041               	movlw	low __pbssBANK0
   196  07F7  0084               	movwf	4
   197  07F8  3060               	movlw	low (__pbssBANK0+31)
   198  07F9  120A  158A  26DA   	fcall	clear_ram0
   199  07FC                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202  07FC                     __end_of__initialization:	
   203  07FC  0183               	clrf	3
   204  07FD  120A  118A  2C3A   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssBANK0
   207  0041                     __pbssBANK0:	
   208  0041                     _Litros:	
   209  0041                     	ds	3
   210  0044                     _decimal:	
   211  0044                     	ds	3
   212  0047                     _decimales:	
   213  0047                     	ds	3
   214  004A                     _enteros:	
   215  004A                     	ds	3
   216  004D                     _valor2:	
   217  004D                     	ds	3
   218  0050                     _valor4:	
   219  0050                     	ds	3
   220  0053                     _TiempoPulso:	
   221  0053                     	ds	2
   222  0055                     _estado:	
   223  0055                     	ds	2
   224  0057                     _entero:	
   225  0057                     	ds	3
   226  005A                     _valor1:	
   227  005A                     	ds	3
   228  005D                     _valor3:	
   229  005D                     	ds	3
   230                           
   231                           	psect	clrtext
   232  0EDA                     clear_ram0:	
   233                           ;	Called with FSR containing the base address, and
   234                           ;	W with the last address+1
   235                           
   236  0EDA  0064               	clrwdt	;clear the watchdog before getting into this loop
   237  0EDB                     clrloop0:	
   238  0EDB  0180               	clrf	0	;clear RAM location pointed to by FSR
   239  0EDC  0A84               	incf	4,f	;increment pointer
   240  0EDD  0604               	xorwf	4,w	;XOR with final address
   241  0EDE  1903               	btfsc	3,2	;have we reached the end yet?
   242  0EDF  3400               	retlw	0	;all done for this memory range, return
   243  0EE0  0604               	xorwf	4,w	;XOR again to restore value
   244  0EE1  2EDB               	goto	clrloop0	;do the next byte
   245                           
   246                           	psect	cstackCOMMON
   247  0070                     __pcstackCOMMON:	
   248  0070                     ?_srand:	
   249  0070                     ?_pic_init:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ??_pic_init:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_Lcd_Port:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ??_Lcd_Port:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_Lcd_Cmd:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_Lcd_Init:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_Lcd_Write_Char:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_Lcd_Write_String:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_Lcd_Clear:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_main:	
   277                           ; 2 bytes @ 0x0
   278                           
   279  0070                     ?___ftpack:	
   280                           ; 2 bytes @ 0x0
   281                           
   282  0070                     ?___ftneg:	
   283                           ; 3 bytes @ 0x0
   284                           
   285  0070                     ?___fttol:	
   286                           ; 3 bytes @ 0x0
   287                           
   288  0070                     Lcd_Port@a:	
   289                           ; 4 bytes @ 0x0
   290                           
   291  0070                     srand@x:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ___ftpack@arg:	
   295                           ; 2 bytes @ 0x0
   296                           
   297  0070                     ___ftneg@f1:	
   298                           ; 3 bytes @ 0x0
   299                           
   300  0070                     ___fttol@f1:	
   301                           ; 3 bytes @ 0x0
   302                           
   303                           
   304                           ; 3 bytes @ 0x0
   305  0070                     	ds	1
   306  0071                     ??_Lcd_Cmd:	
   307  0071                     ??_Lcd_Write_Char:	
   308                           ; 0 bytes @ 0x1
   309                           
   310                           
   311                           ; 0 bytes @ 0x1
   312  0071                     	ds	1
   313  0072                     ??_srand:	
   314  0072                     Lcd_Write_Char@temp:	
   315                           ; 0 bytes @ 0x2
   316                           
   317                           
   318                           ; 1 bytes @ 0x2
   319  0072                     	ds	1
   320  0073                     ??___ftneg:	
   321  0073                     Lcd_Cmd@a:	
   322                           ; 0 bytes @ 0x3
   323                           
   324  0073                     Lcd_Write_Char@y:	
   325                           ; 1 bytes @ 0x3
   326                           
   327  0073                     ___ftpack@exp:	
   328                           ; 1 bytes @ 0x3
   329                           
   330                           
   331                           ; 1 bytes @ 0x3
   332  0073                     	ds	1
   333  0074                     ??_Lcd_Clear:	
   334  0074                     ?_Lcd_Set_Cursor:	
   335                           ; 0 bytes @ 0x4
   336                           
   337  0074                     ??_Lcd_Init:	
   338                           ; 0 bytes @ 0x4
   339                           
   340  0074                     ??___fttol:	
   341                           ; 0 bytes @ 0x4
   342                           
   343  0074                     Lcd_Set_Cursor@b:	
   344                           ; 0 bytes @ 0x4
   345                           
   346  0074                     Lcd_Write_Char@a:	
   347                           ; 1 bytes @ 0x4
   348                           
   349  0074                     ___ftpack@sign:	
   350                           ; 1 bytes @ 0x4
   351                           
   352                           
   353                           ; 1 bytes @ 0x4
   354  0074                     	ds	1
   355  0075                     ??___ftpack:	
   356  0075                     ??_Lcd_Set_Cursor:	
   357                           ; 0 bytes @ 0x5
   358                           
   359  0075                     ??_Lcd_Write_String:	
   360                           ; 0 bytes @ 0x5
   361                           
   362  0075                     Lcd_Write_String@i:	
   363                           ; 0 bytes @ 0x5
   364                           
   365                           
   366                           ; 2 bytes @ 0x5
   367  0075                     	ds	2
   368  0077                     Lcd_Set_Cursor@a:	
   369  0077                     Lcd_Write_String@a:	
   370                           ; 1 bytes @ 0x7
   371                           
   372                           
   373                           ; 1 bytes @ 0x7
   374  0077                     	ds	1
   375  0078                     ?___ftdiv:	
   376  0078                     ?___ftmul:	
   377                           ; 3 bytes @ 0x8
   378                           
   379  0078                     ___fttol@sign1:	
   380                           ; 3 bytes @ 0x8
   381                           
   382  0078                     Lcd_Set_Cursor@z:	
   383                           ; 1 bytes @ 0x8
   384                           
   385  0078                     ___ftdiv@f2:	
   386                           ; 2 bytes @ 0x8
   387                           
   388  0078                     ___ftmul@f1:	
   389                           ; 3 bytes @ 0x8
   390                           
   391                           
   392                           ; 3 bytes @ 0x8
   393  0078                     	ds	1
   394  0079                     ___fttol@lval:	
   395                           
   396                           ; 4 bytes @ 0x9
   397  0079                     	ds	1
   398  007A                     Lcd_Set_Cursor@y:	
   399                           
   400                           ; 2 bytes @ 0xA
   401  007A                     	ds	1
   402  007B                     ___ftdiv@f1:	
   403  007B                     ___ftmul@f2:	
   404                           ; 3 bytes @ 0xB
   405                           
   406                           
   407                           ; 3 bytes @ 0xB
   408  007B                     	ds	1
   409  007C                     Lcd_Set_Cursor@temp:	
   410                           
   411                           ; 2 bytes @ 0xC
   412  007C                     	ds	1
   413  007D                     ___fttol@exp1:	
   414                           
   415                           ; 1 bytes @ 0xD
   416  007D                     	ds	1
   417  007E                     ??_modf:	
   418                           
   419                           	psect	cstackBANK0
   420  0020                     __pcstackBANK0:	
   421                           ; 0 bytes @ 0xE
   422                           
   423  0020                     ??___ftdiv:	
   424  0020                     ??___ftmul:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0020                     ?___attoft:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0020                     ___attoft@c:	
   431                           ; 3 bytes @ 0x0
   432                           
   433                           
   434                           ; 3 bytes @ 0x0
   435  0020                     	ds	3
   436  0023                     ??___attoft:	
   437                           
   438                           ; 0 bytes @ 0x3
   439  0023                     	ds	1
   440  0024                     ___ftdiv@cntr:	
   441  0024                     ___ftmul@exp:	
   442                           ; 1 bytes @ 0x4
   443                           
   444                           
   445                           ; 1 bytes @ 0x4
   446  0024                     	ds	1
   447  0025                     ___attoft@sign:	
   448  0025                     ___ftdiv@f3:	
   449                           ; 1 bytes @ 0x5
   450                           
   451  0025                     ___ftmul@f3_as_product:	
   452                           ; 3 bytes @ 0x5
   453                           
   454                           
   455                           ; 3 bytes @ 0x5
   456  0025                     	ds	3
   457  0028                     ___ftdiv@exp:	
   458  0028                     ___ftmul@cntr:	
   459                           ; 1 bytes @ 0x8
   460                           
   461                           
   462                           ; 1 bytes @ 0x8
   463  0028                     	ds	1
   464  0029                     ___ftdiv@sign:	
   465  0029                     ___ftmul@sign:	
   466                           ; 1 bytes @ 0x9
   467                           
   468                           
   469                           ; 1 bytes @ 0x9
   470  0029                     	ds	1
   471  002A                     ?___ftadd:	
   472  002A                     ___ftadd@f1:	
   473                           ; 3 bytes @ 0xA
   474                           
   475                           
   476                           ; 3 bytes @ 0xA
   477  002A                     	ds	3
   478  002D                     ___ftadd@f2:	
   479                           
   480                           ; 3 bytes @ 0xD
   481  002D                     	ds	3
   482  0030                     ??___ftadd:	
   483                           
   484                           ; 0 bytes @ 0x10
   485  0030                     	ds	4
   486  0034                     ___ftadd@sign:	
   487                           
   488                           ; 1 bytes @ 0x14
   489  0034                     	ds	1
   490  0035                     ___ftadd@exp2:	
   491                           
   492                           ; 1 bytes @ 0x15
   493  0035                     	ds	1
   494  0036                     ___ftadd@exp1:	
   495                           
   496                           ; 1 bytes @ 0x16
   497  0036                     	ds	1
   498  0037                     ?_modf:	
   499  0037                     modf@value:	
   500                           ; 3 bytes @ 0x17
   501                           
   502                           
   503                           ; 3 bytes @ 0x17
   504  0037                     	ds	3
   505  003A                     modf@iptr:	
   506                           
   507                           ; 1 bytes @ 0x1A
   508  003A                     	ds	1
   509  003B                     ??_main:	
   510                           
   511                           ; 0 bytes @ 0x1B
   512  003B                     	ds	3
   513  003E                     main@a:	
   514                           
   515                           ; 3 bytes @ 0x1E
   516  003E                     	ds	3
   517                           
   518                           	psect	maintext
   519  043A                     __pmaintext:	
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 32 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  a               3   30[BANK0 ] float 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  2   93[COMMON] int 
   532 ;; Registers used:
   533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 17F/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       3       0       0       0
   541 ;;      Temps:          0       3       0       0       0
   542 ;;      Totals:         0       6       0       0       0
   543 ;;Total ram usage:        6 bytes
   544 ;; Hardware stack levels required when called:    3
   545 ;; This function calls:
   546 ;;		_Lcd_Clear
   547 ;;		_Lcd_Init
   548 ;;		_Lcd_Set_Cursor
   549 ;;		_Lcd_Write_Char
   550 ;;		_Lcd_Write_String
   551 ;;		___ftadd
   552 ;;		___ftdiv
   553 ;;		___ftmul
   554 ;;		___fttol
   555 ;;		_modf
   556 ;;		_pic_init
   557 ;;		_srand
   558 ;; This function is called by:
   559 ;;		Startup code after reset
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           
   564                           ;psect for function _main
   565  043A                     _main:	
   566                           
   567                           ;main.c: 34: srand(((0)));
   568                           
   569                           ;incstack = 0
   570                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   571  043A  3000               	movlw	0
   572  043B  00F0               	movwf	srand@x
   573  043C  3000               	movlw	0
   574  043D  00F1               	movwf	srand@x+1
   575  043E  120A  158A  26ED  120A  118A  	fcall	_srand
   576                           
   577                           ;main.c: 36: float a;
   578                           ;main.c: 37: pic_init();
   579  0443  120A  158A  26CB  120A  118A  	fcall	_pic_init
   580                           
   581                           ;main.c: 38: Lcd_Init();
   582  0448  120A  118A  205B  120A  118A  	fcall	_Lcd_Init
   583                           
   584                           ;main.c: 39: Lcd_Clear();
   585  044D  120A  158A  26E2  120A  118A  	fcall	_Lcd_Clear
   586                           
   587                           ;main.c: 40: _delay((unsigned long)((5)*(8000000/4000.0)));
   588  0452  300D               	movlw	13
   589  0453  1283               	bcf	3,5	;RP0=0, select bank0
   590  0454  1303               	bcf	3,6	;RP1=0, select bank0
   591  0455  00BC               	movwf	??_main+1
   592  0456  30FB               	movlw	251
   593  0457  00BB               	movwf	??_main
   594  0458                     u1597:	
   595  0458  0BBB               	decfsz	??_main,f
   596  0459  2C58               	goto	u1597
   597  045A  0BBC               	decfsz	??_main+1,f
   598  045B  2C58               	goto	u1597
   599  045C  2C5D               	nop2
   600                           
   601                           ;main.c: 41: Lcd_Set_Cursor(1,1);
   602  045D  01F4               	clrf	Lcd_Set_Cursor@b
   603  045E  0AF4               	incf	Lcd_Set_Cursor@b,f
   604  045F  3001               	movlw	1
   605  0460  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
   606                           
   607                           ;main.c: 42: _delay((unsigned long)((5)*(8000000/4000.0)));
   608  0465  300D               	movlw	13
   609  0466  1283               	bcf	3,5	;RP0=0, select bank0
   610  0467  1303               	bcf	3,6	;RP1=0, select bank0
   611  0468  00BC               	movwf	??_main+1
   612  0469  30FB               	movlw	251
   613  046A  00BB               	movwf	??_main
   614  046B                     u1607:	
   615  046B  0BBB               	decfsz	??_main,f
   616  046C  2C6B               	goto	u1607
   617  046D  0BBC               	decfsz	??_main+1,f
   618  046E  2C6B               	goto	u1607
   619  046F  2C70               	nop2
   620                           
   621                           ;main.c: 43: Lcd_Write_String("Proyecto Antirobo");
   622  0470  3001               	movlw	(STR_1-__stringbase)& (0+255)
   623  0471  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
   624                           
   625                           ;main.c: 44: _delay((unsigned long)((5)*(8000000/4000.0)));
   626  0476  300D               	movlw	13
   627  0477  1283               	bcf	3,5	;RP0=0, select bank0
   628  0478  1303               	bcf	3,6	;RP1=0, select bank0
   629  0479  00BC               	movwf	??_main+1
   630  047A  30FB               	movlw	251
   631  047B  00BB               	movwf	??_main
   632  047C                     u1617:	
   633  047C  0BBB               	decfsz	??_main,f
   634  047D  2C7C               	goto	u1617
   635  047E  0BBC               	decfsz	??_main+1,f
   636  047F  2C7C               	goto	u1617
   637  0480  2C81               	nop2
   638                           
   639                           ;main.c: 45: Lcd_Set_Cursor(2,1);
   640  0481  01F4               	clrf	Lcd_Set_Cursor@b
   641  0482  0AF4               	incf	Lcd_Set_Cursor@b,f
   642  0483  3002               	movlw	2
   643  0484  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
   644                           
   645                           ;main.c: 46: _delay((unsigned long)((5)*(8000000/4000.0)));
   646  0489  300D               	movlw	13
   647  048A  1283               	bcf	3,5	;RP0=0, select bank0
   648  048B  1303               	bcf	3,6	;RP1=0, select bank0
   649  048C  00BC               	movwf	??_main+1
   650  048D  30FB               	movlw	251
   651  048E  00BB               	movwf	??_main
   652  048F                     u1627:	
   653  048F  0BBB               	decfsz	??_main,f
   654  0490  2C8F               	goto	u1627
   655  0491  0BBC               	decfsz	??_main+1,f
   656  0492  2C8F               	goto	u1627
   657  0493  2C94               	nop2
   658                           
   659                           ;main.c: 47: Lcd_Write_String("de gasolineras");
   660  0494  3013               	movlw	(STR_2-__stringbase)& (0+255)
   661  0495  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
   662                           
   663                           ;main.c: 48: _delay((unsigned long)((2000)*(8000000/4000.0)));
   664  049A  3015               	movlw	21
   665  049B  1283               	bcf	3,5	;RP0=0, select bank0
   666  049C  1303               	bcf	3,6	;RP1=0, select bank0
   667  049D  00BD               	movwf	??_main+2
   668  049E  304B               	movlw	75
   669  049F  00BC               	movwf	??_main+1
   670  04A0  30D1               	movlw	209
   671  04A1  00BB               	movwf	??_main
   672  04A2                     u1637:	
   673  04A2  0BBB               	decfsz	??_main,f
   674  04A3  2CA2               	goto	u1637
   675  04A4  0BBC               	decfsz	??_main+1,f
   676  04A5  2CA2               	goto	u1637
   677  04A6  0BBD               	decfsz	??_main+2,f
   678  04A7  2CA2               	goto	u1637
   679  04A8  0000               	nop
   680                           
   681                           ;main.c: 49: Lcd_Clear();
   682  04A9  120A  158A  26E2  120A  118A  	fcall	_Lcd_Clear
   683                           
   684                           ;main.c: 50: _delay((unsigned long)((5)*(8000000/4000.0)));
   685  04AE  300D               	movlw	13
   686  04AF  1283               	bcf	3,5	;RP0=0, select bank0
   687  04B0  1303               	bcf	3,6	;RP1=0, select bank0
   688  04B1  00BC               	movwf	??_main+1
   689  04B2  30FB               	movlw	251
   690  04B3  00BB               	movwf	??_main
   691  04B4                     u1647:	
   692  04B4  0BBB               	decfsz	??_main,f
   693  04B5  2CB4               	goto	u1647
   694  04B6  0BBC               	decfsz	??_main+1,f
   695  04B7  2CB4               	goto	u1647
   696  04B8  2CB9               	nop2
   697  04B9                     l1458:	
   698                           ;main.c: 52: while(1)
   699                           
   700                           
   701                           ;main.c: 53: {
   702                           ;main.c: 54: a=0;
   703  04B9  3000               	movlw	0
   704  04BA  1283               	bcf	3,5	;RP0=0, select bank0
   705  04BB  1303               	bcf	3,6	;RP1=0, select bank0
   706  04BC  00BE               	movwf	main@a
   707  04BD  3000               	movlw	0
   708  04BE  00BF               	movwf	main@a+1
   709  04BF  3000               	movlw	0
   710  04C0  00C0               	movwf	main@a+2
   711                           
   712                           ;main.c: 55: Litros=05.09;
   713  04C1  30E1               	movlw	225
   714  04C2  00C1               	movwf	_Litros
   715  04C3  30A2               	movlw	162
   716  04C4  00C2               	movwf	_Litros+1
   717  04C5  3040               	movlw	64
   718  04C6  00C3               	movwf	_Litros+2
   719                           
   720                           ;main.c: 58: decimal = modf(Litros, &entero);
   721  04C7  0841               	movf	_Litros,w
   722  04C8  00B7               	movwf	modf@value
   723  04C9  0842               	movf	_Litros+1,w
   724  04CA  00B8               	movwf	modf@value+1
   725  04CB  0843               	movf	_Litros+2,w
   726  04CC  00B9               	movwf	modf@value+2
   727  04CD  3057               	movlw	_entero& (0+255)
   728  04CE  00BB               	movwf	??_main
   729  04CF  083B               	movf	??_main,w
   730  04D0  00BA               	movwf	modf@iptr
   731  04D1  120A  158A  27B0  120A  118A  	fcall	_modf
   732  04D6  1283               	bcf	3,5	;RP0=0, select bank0
   733  04D7  1303               	bcf	3,6	;RP1=0, select bank0
   734  04D8  0837               	movf	?_modf,w
   735  04D9  00C4               	movwf	_decimal
   736  04DA  0838               	movf	?_modf+1,w
   737  04DB  00C5               	movwf	_decimal+1
   738  04DC  0839               	movf	?_modf+2,w
   739  04DD  00C6               	movwf	_decimal+2
   740                           
   741                           ;main.c: 59: decimal = (decimal*10);
   742  04DE  3000               	movlw	0
   743  04DF  00F8               	movwf	___ftmul@f1
   744  04E0  3020               	movlw	32
   745  04E1  00F9               	movwf	___ftmul@f1+1
   746  04E2  3041               	movlw	65
   747  04E3  00FA               	movwf	___ftmul@f1+2
   748  04E4  0844               	movf	_decimal,w
   749  04E5  00FB               	movwf	___ftmul@f2
   750  04E6  0845               	movf	_decimal+1,w
   751  04E7  00FC               	movwf	___ftmul@f2+1
   752  04E8  0846               	movf	_decimal+2,w
   753  04E9  00FD               	movwf	___ftmul@f2+2
   754  04EA  120A  118A  2260  120A  118A  	fcall	___ftmul
   755  04EF  0878               	movf	?___ftmul,w
   756  04F0  1283               	bcf	3,5	;RP0=0, select bank0
   757  04F1  1303               	bcf	3,6	;RP1=0, select bank0
   758  04F2  00C4               	movwf	_decimal
   759  04F3  0879               	movf	?___ftmul+1,w
   760  04F4  00C5               	movwf	_decimal+1
   761  04F5  087A               	movf	?___ftmul+2,w
   762  04F6  00C6               	movwf	_decimal+2
   763                           
   764                           ;main.c: 60: entero = (entero/10);
   765  04F7  3000               	movlw	0
   766  04F8  00F8               	movwf	___ftdiv@f2
   767  04F9  3020               	movlw	32
   768  04FA  00F9               	movwf	___ftdiv@f2+1
   769  04FB  3041               	movlw	65
   770  04FC  00FA               	movwf	___ftdiv@f2+2
   771  04FD  0857               	movf	_entero,w
   772  04FE  00FB               	movwf	___ftdiv@f1
   773  04FF  0858               	movf	_entero+1,w
   774  0500  00FC               	movwf	___ftdiv@f1+1
   775  0501  0859               	movf	_entero+2,w
   776  0502  00FD               	movwf	___ftdiv@f1+2
   777  0503  120A  118A  21AA  120A  118A  	fcall	___ftdiv
   778  0508  0878               	movf	?___ftdiv,w
   779  0509  1283               	bcf	3,5	;RP0=0, select bank0
   780  050A  1303               	bcf	3,6	;RP1=0, select bank0
   781  050B  00D7               	movwf	_entero
   782  050C  0879               	movf	?___ftdiv+1,w
   783  050D  00D8               	movwf	_entero+1
   784  050E  087A               	movf	?___ftdiv+2,w
   785  050F  00D9               	movwf	_entero+2
   786                           
   787                           ;main.c: 61: valor2 = modf(entero, &valor1);
   788  0510  0857               	movf	_entero,w
   789  0511  00B7               	movwf	modf@value
   790  0512  0858               	movf	_entero+1,w
   791  0513  00B8               	movwf	modf@value+1
   792  0514  0859               	movf	_entero+2,w
   793  0515  00B9               	movwf	modf@value+2
   794  0516  305A               	movlw	_valor1& (0+255)
   795  0517  00BB               	movwf	??_main
   796  0518  083B               	movf	??_main,w
   797  0519  00BA               	movwf	modf@iptr
   798  051A  120A  158A  27B0  120A  118A  	fcall	_modf
   799  051F  1283               	bcf	3,5	;RP0=0, select bank0
   800  0520  1303               	bcf	3,6	;RP1=0, select bank0
   801  0521  0837               	movf	?_modf,w
   802  0522  00CD               	movwf	_valor2
   803  0523  0838               	movf	?_modf+1,w
   804  0524  00CE               	movwf	_valor2+1
   805  0525  0839               	movf	?_modf+2,w
   806  0526  00CF               	movwf	_valor2+2
   807                           
   808                           ;main.c: 62: valor2 = (valor2*10)+48;
   809  0527  3000               	movlw	0
   810  0528  00AA               	movwf	___ftadd@f1
   811  0529  3040               	movlw	64
   812  052A  00AB               	movwf	___ftadd@f1+1
   813  052B  3042               	movlw	66
   814  052C  00AC               	movwf	___ftadd@f1+2
   815  052D  3000               	movlw	0
   816  052E  00F8               	movwf	___ftmul@f1
   817  052F  3020               	movlw	32
   818  0530  00F9               	movwf	___ftmul@f1+1
   819  0531  3041               	movlw	65
   820  0532  00FA               	movwf	___ftmul@f1+2
   821  0533  084D               	movf	_valor2,w
   822  0534  00FB               	movwf	___ftmul@f2
   823  0535  084E               	movf	_valor2+1,w
   824  0536  00FC               	movwf	___ftmul@f2+1
   825  0537  084F               	movf	_valor2+2,w
   826  0538  00FD               	movwf	___ftmul@f2+2
   827  0539  120A  118A  2260  120A  118A  	fcall	___ftmul
   828  053E  0878               	movf	?___ftmul,w
   829  053F  1283               	bcf	3,5	;RP0=0, select bank0
   830  0540  1303               	bcf	3,6	;RP1=0, select bank0
   831  0541  00AD               	movwf	___ftadd@f2
   832  0542  0879               	movf	?___ftmul+1,w
   833  0543  00AE               	movwf	___ftadd@f2+1
   834  0544  087A               	movf	?___ftmul+2,w
   835  0545  00AF               	movwf	___ftadd@f2+2
   836  0546  120A  118A  2331  120A  118A  	fcall	___ftadd
   837  054B  1283               	bcf	3,5	;RP0=0, select bank0
   838  054C  1303               	bcf	3,6	;RP1=0, select bank0
   839  054D  082A               	movf	?___ftadd,w
   840  054E  00CD               	movwf	_valor2
   841  054F  082B               	movf	?___ftadd+1,w
   842  0550  00CE               	movwf	_valor2+1
   843  0551  082C               	movf	?___ftadd+2,w
   844  0552  00CF               	movwf	_valor2+2
   845                           
   846                           ;main.c: 63: valor1 = valor1+48;
   847  0553  3000               	movlw	0
   848  0554  00AA               	movwf	___ftadd@f1
   849  0555  3040               	movlw	64
   850  0556  00AB               	movwf	___ftadd@f1+1
   851  0557  3042               	movlw	66
   852  0558  00AC               	movwf	___ftadd@f1+2
   853  0559  085A               	movf	_valor1,w
   854  055A  00AD               	movwf	___ftadd@f2
   855  055B  085B               	movf	_valor1+1,w
   856  055C  00AE               	movwf	___ftadd@f2+1
   857  055D  085C               	movf	_valor1+2,w
   858  055E  00AF               	movwf	___ftadd@f2+2
   859  055F  120A  118A  2331  120A  118A  	fcall	___ftadd
   860  0564  1283               	bcf	3,5	;RP0=0, select bank0
   861  0565  1303               	bcf	3,6	;RP1=0, select bank0
   862  0566  082A               	movf	?___ftadd,w
   863  0567  00DA               	movwf	_valor1
   864  0568  082B               	movf	?___ftadd+1,w
   865  0569  00DB               	movwf	_valor1+1
   866  056A  082C               	movf	?___ftadd+2,w
   867  056B  00DC               	movwf	_valor1+2
   868                           
   869                           ;main.c: 64: valor4 = modf(decimal, &valor3);
   870  056C  0844               	movf	_decimal,w
   871  056D  00B7               	movwf	modf@value
   872  056E  0845               	movf	_decimal+1,w
   873  056F  00B8               	movwf	modf@value+1
   874  0570  0846               	movf	_decimal+2,w
   875  0571  00B9               	movwf	modf@value+2
   876  0572  305D               	movlw	_valor3& (0+255)
   877  0573  00BB               	movwf	??_main
   878  0574  083B               	movf	??_main,w
   879  0575  00BA               	movwf	modf@iptr
   880  0576  120A  158A  27B0  120A  118A  	fcall	_modf
   881  057B  1283               	bcf	3,5	;RP0=0, select bank0
   882  057C  1303               	bcf	3,6	;RP1=0, select bank0
   883  057D  0837               	movf	?_modf,w
   884  057E  00D0               	movwf	_valor4
   885  057F  0838               	movf	?_modf+1,w
   886  0580  00D1               	movwf	_valor4+1
   887  0581  0839               	movf	?_modf+2,w
   888  0582  00D2               	movwf	_valor4+2
   889                           
   890                           ;main.c: 65: valor4 = (valor4*10)+48;
   891  0583  3000               	movlw	0
   892  0584  00AA               	movwf	___ftadd@f1
   893  0585  3040               	movlw	64
   894  0586  00AB               	movwf	___ftadd@f1+1
   895  0587  3042               	movlw	66
   896  0588  00AC               	movwf	___ftadd@f1+2
   897  0589  3000               	movlw	0
   898  058A  00F8               	movwf	___ftmul@f1
   899  058B  3020               	movlw	32
   900  058C  00F9               	movwf	___ftmul@f1+1
   901  058D  3041               	movlw	65
   902  058E  00FA               	movwf	___ftmul@f1+2
   903  058F  0850               	movf	_valor4,w
   904  0590  00FB               	movwf	___ftmul@f2
   905  0591  0851               	movf	_valor4+1,w
   906  0592  00FC               	movwf	___ftmul@f2+1
   907  0593  0852               	movf	_valor4+2,w
   908  0594  00FD               	movwf	___ftmul@f2+2
   909  0595  120A  118A  2260  120A  118A  	fcall	___ftmul
   910  059A  0878               	movf	?___ftmul,w
   911  059B  1283               	bcf	3,5	;RP0=0, select bank0
   912  059C  1303               	bcf	3,6	;RP1=0, select bank0
   913  059D  00AD               	movwf	___ftadd@f2
   914  059E  0879               	movf	?___ftmul+1,w
   915  059F  00AE               	movwf	___ftadd@f2+1
   916  05A0  087A               	movf	?___ftmul+2,w
   917  05A1  00AF               	movwf	___ftadd@f2+2
   918  05A2  120A  118A  2331  120A  118A  	fcall	___ftadd
   919  05A7  1283               	bcf	3,5	;RP0=0, select bank0
   920  05A8  1303               	bcf	3,6	;RP1=0, select bank0
   921  05A9  082A               	movf	?___ftadd,w
   922  05AA  00D0               	movwf	_valor4
   923  05AB  082B               	movf	?___ftadd+1,w
   924  05AC  00D1               	movwf	_valor4+1
   925  05AD  082C               	movf	?___ftadd+2,w
   926  05AE  00D2               	movwf	_valor4+2
   927                           
   928                           ;main.c: 66: valor3 = valor3+48;
   929  05AF  3000               	movlw	0
   930  05B0  00AA               	movwf	___ftadd@f1
   931  05B1  3040               	movlw	64
   932  05B2  00AB               	movwf	___ftadd@f1+1
   933  05B3  3042               	movlw	66
   934  05B4  00AC               	movwf	___ftadd@f1+2
   935  05B5  085D               	movf	_valor3,w
   936  05B6  00AD               	movwf	___ftadd@f2
   937  05B7  085E               	movf	_valor3+1,w
   938  05B8  00AE               	movwf	___ftadd@f2+1
   939  05B9  085F               	movf	_valor3+2,w
   940  05BA  00AF               	movwf	___ftadd@f2+2
   941  05BB  120A  118A  2331  120A  118A  	fcall	___ftadd
   942  05C0  1283               	bcf	3,5	;RP0=0, select bank0
   943  05C1  1303               	bcf	3,6	;RP1=0, select bank0
   944  05C2  082A               	movf	?___ftadd,w
   945  05C3  00DD               	movwf	_valor3
   946  05C4  082B               	movf	?___ftadd+1,w
   947  05C5  00DE               	movwf	_valor3+1
   948  05C6  082C               	movf	?___ftadd+2,w
   949  05C7  00DF               	movwf	_valor3+2
   950                           
   951                           ;main.c: 67: Lcd_Clear();
   952  05C8  120A  158A  26E2  120A  118A  	fcall	_Lcd_Clear
   953                           
   954                           ;main.c: 68: Lcd_Set_Cursor(2,1);
   955  05CD  01F4               	clrf	Lcd_Set_Cursor@b
   956  05CE  0AF4               	incf	Lcd_Set_Cursor@b,f
   957  05CF  3002               	movlw	2
   958  05D0  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
   959                           
   960                           ;main.c: 69: Lcd_Write_String("Total=");
   961  05D5  302D               	movlw	(STR_3-__stringbase)& (0+255)
   962  05D6  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
   963                           
   964                           ;main.c: 70: _delay((unsigned long)((10)*(8000000/4000.0)));
   965  05DB  301A               	movlw	26
   966  05DC  1283               	bcf	3,5	;RP0=0, select bank0
   967  05DD  1303               	bcf	3,6	;RP1=0, select bank0
   968  05DE  00BC               	movwf	??_main+1
   969  05DF  30F8               	movlw	248
   970  05E0  00BB               	movwf	??_main
   971  05E1                     u1657:	
   972  05E1  0BBB               	decfsz	??_main,f
   973  05E2  2DE1               	goto	u1657
   974  05E3  0BBC               	decfsz	??_main+1,f
   975  05E4  2DE1               	goto	u1657
   976  05E5  0000               	nop
   977                           
   978                           ;main.c: 71: Lcd_Write_Char(valor1);
   979  05E6  1283               	bcf	3,5	;RP0=0, select bank0
   980  05E7  1303               	bcf	3,6	;RP1=0, select bank0
   981  05E8  085A               	movf	_valor1,w
   982  05E9  00F0               	movwf	___fttol@f1
   983  05EA  085B               	movf	_valor1+1,w
   984  05EB  00F1               	movwf	___fttol@f1+1
   985  05EC  085C               	movf	_valor1+2,w
   986  05ED  00F2               	movwf	___fttol@f1+2
   987  05EE  120A  118A  211E  120A  118A  	fcall	___fttol
   988  05F3  0870               	movf	?___fttol,w
   989  05F4  120A  158A  2777  120A  118A  	fcall	_Lcd_Write_Char
   990                           
   991                           ;main.c: 72: _delay((unsigned long)((10)*(8000000/4000.0)));
   992  05F9  301A               	movlw	26
   993  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   994  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   995  05FC  00BC               	movwf	??_main+1
   996  05FD  30F8               	movlw	248
   997  05FE  00BB               	movwf	??_main
   998  05FF                     u1667:	
   999  05FF  0BBB               	decfsz	??_main,f
  1000  0600  2DFF               	goto	u1667
  1001  0601  0BBC               	decfsz	??_main+1,f
  1002  0602  2DFF               	goto	u1667
  1003  0603  0000               	nop
  1004                           
  1005                           ;main.c: 73: Lcd_Write_Char(valor2);
  1006  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0606  084D               	movf	_valor2,w
  1009  0607  00F0               	movwf	___fttol@f1
  1010  0608  084E               	movf	_valor2+1,w
  1011  0609  00F1               	movwf	___fttol@f1+1
  1012  060A  084F               	movf	_valor2+2,w
  1013  060B  00F2               	movwf	___fttol@f1+2
  1014  060C  120A  118A  211E  120A  118A  	fcall	___fttol
  1015  0611  0870               	movf	?___fttol,w
  1016  0612  120A  158A  2777  120A  118A  	fcall	_Lcd_Write_Char
  1017                           
  1018                           ;main.c: 74: _delay((unsigned long)((10)*(8000000/4000.0)));
  1019  0617  301A               	movlw	26
  1020  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1022  061A  00BC               	movwf	??_main+1
  1023  061B  30F8               	movlw	248
  1024  061C  00BB               	movwf	??_main
  1025  061D                     u1677:	
  1026  061D  0BBB               	decfsz	??_main,f
  1027  061E  2E1D               	goto	u1677
  1028  061F  0BBC               	decfsz	??_main+1,f
  1029  0620  2E1D               	goto	u1677
  1030  0621  0000               	nop
  1031                           
  1032                           ;main.c: 75: Lcd_Write_String(".");
  1033  0622  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1034  0623  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1035                           
  1036                           ;main.c: 76: _delay((unsigned long)((10)*(8000000/4000.0)));
  1037  0628  301A               	movlw	26
  1038  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1039  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1040  062B  00BC               	movwf	??_main+1
  1041  062C  30F8               	movlw	248
  1042  062D  00BB               	movwf	??_main
  1043  062E                     u1687:	
  1044  062E  0BBB               	decfsz	??_main,f
  1045  062F  2E2E               	goto	u1687
  1046  0630  0BBC               	decfsz	??_main+1,f
  1047  0631  2E2E               	goto	u1687
  1048  0632  0000               	nop
  1049                           
  1050                           ;main.c: 77: Lcd_Write_Char(valor3);
  1051  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0635  085D               	movf	_valor3,w
  1054  0636  00F0               	movwf	___fttol@f1
  1055  0637  085E               	movf	_valor3+1,w
  1056  0638  00F1               	movwf	___fttol@f1+1
  1057  0639  085F               	movf	_valor3+2,w
  1058  063A  00F2               	movwf	___fttol@f1+2
  1059  063B  120A  118A  211E  120A  118A  	fcall	___fttol
  1060  0640  0870               	movf	?___fttol,w
  1061  0641  120A  158A  2777  120A  118A  	fcall	_Lcd_Write_Char
  1062                           
  1063                           ;main.c: 78: _delay((unsigned long)((10)*(8000000/4000.0)));
  1064  0646  301A               	movlw	26
  1065  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0649  00BC               	movwf	??_main+1
  1068  064A  30F8               	movlw	248
  1069  064B  00BB               	movwf	??_main
  1070  064C                     u1697:	
  1071  064C  0BBB               	decfsz	??_main,f
  1072  064D  2E4C               	goto	u1697
  1073  064E  0BBC               	decfsz	??_main+1,f
  1074  064F  2E4C               	goto	u1697
  1075  0650  0000               	nop
  1076                           
  1077                           ;main.c: 79: Lcd_Write_Char(valor4);
  1078  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0653  0850               	movf	_valor4,w
  1081  0654  00F0               	movwf	___fttol@f1
  1082  0655  0851               	movf	_valor4+1,w
  1083  0656  00F1               	movwf	___fttol@f1+1
  1084  0657  0852               	movf	_valor4+2,w
  1085  0658  00F2               	movwf	___fttol@f1+2
  1086  0659  120A  118A  211E  120A  118A  	fcall	___fttol
  1087  065E  0870               	movf	?___fttol,w
  1088  065F  120A  158A  2777  120A  118A  	fcall	_Lcd_Write_Char
  1089                           
  1090                           ;main.c: 80: _delay((unsigned long)((10)*(8000000/4000.0)));
  1091  0664  301A               	movlw	26
  1092  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0667  00BC               	movwf	??_main+1
  1095  0668  30F8               	movlw	248
  1096  0669  00BB               	movwf	??_main
  1097  066A                     u1707:	
  1098  066A  0BBB               	decfsz	??_main,f
  1099  066B  2E6A               	goto	u1707
  1100  066C  0BBC               	decfsz	??_main+1,f
  1101  066D  2E6A               	goto	u1707
  1102  066E  0000               	nop
  1103                           
  1104                           ;main.c: 81: Lcd_Write_String(" Lts.");
  1105  066F  3034               	movlw	(STR_5-__stringbase)& (0+255)
  1106  0670  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1107                           
  1108                           ;main.c: 82: _delay((unsigned long)((3000)*(8000000/4000.0)));
  1109  0675  301F               	movlw	31
  1110  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0678  00BD               	movwf	??_main+2
  1113  0679  3071               	movlw	113
  1114  067A  00BC               	movwf	??_main+1
  1115  067B  303B               	movlw	59
  1116  067C  00BB               	movwf	??_main
  1117  067D                     u1717:	
  1118  067D  0BBB               	decfsz	??_main,f
  1119  067E  2E7D               	goto	u1717
  1120  067F  0BBC               	decfsz	??_main+1,f
  1121  0680  2E7D               	goto	u1717
  1122  0681  0BBD               	decfsz	??_main+2,f
  1123  0682  2E7D               	goto	u1717
  1124  0683  0000               	nop
  1125                           
  1126                           ;main.c: 83: Lcd_Clear();
  1127  0684  120A  158A  26E2  120A  118A  	fcall	_Lcd_Clear
  1128                           
  1129                           ;main.c: 84: Lcd_Set_Cursor(1,1);
  1130  0689  01F4               	clrf	Lcd_Set_Cursor@b
  1131  068A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1132  068B  3001               	movlw	1
  1133  068C  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1134                           
  1135                           ;main.c: 85: Lcd_Write_String("Midiendo..");
  1136  0691  3022               	movlw	(STR_6-__stringbase)& (0+255)
  1137  0692  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1138                           
  1139                           ;main.c: 86: Lcd_Set_Cursor(2,1);
  1140  0697  01F4               	clrf	Lcd_Set_Cursor@b
  1141  0698  0AF4               	incf	Lcd_Set_Cursor@b,f
  1142  0699  3002               	movlw	2
  1143  069A  120A  118A  2004  120A  118A  	fcall	_Lcd_Set_Cursor
  1144                           
  1145                           ;main.c: 87: Lcd_Write_String(".");
  1146  069F  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1147  06A0  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1148                           
  1149                           ;main.c: 88: _delay((unsigned long)((100)*(8000000/4000.0)));
  1150  06A5  3002               	movlw	2
  1151  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1152  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1153  06A8  00BD               	movwf	??_main+2
  1154  06A9  3004               	movlw	4
  1155  06AA  00BC               	movwf	??_main+1
  1156  06AB  30BA               	movlw	186
  1157  06AC  00BB               	movwf	??_main
  1158  06AD                     u1727:	
  1159  06AD  0BBB               	decfsz	??_main,f
  1160  06AE  2EAD               	goto	u1727
  1161  06AF  0BBC               	decfsz	??_main+1,f
  1162  06B0  2EAD               	goto	u1727
  1163  06B1  0BBD               	decfsz	??_main+2,f
  1164  06B2  2EAD               	goto	u1727
  1165  06B3  0000               	nop
  1166                           
  1167                           ;main.c: 89: Lcd_Write_String(".");
  1168  06B4  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1169  06B5  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1170                           
  1171                           ;main.c: 90: _delay((unsigned long)((100)*(8000000/4000.0)));
  1172  06BA  3002               	movlw	2
  1173  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1174  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1175  06BD  00BD               	movwf	??_main+2
  1176  06BE  3004               	movlw	4
  1177  06BF  00BC               	movwf	??_main+1
  1178  06C0  30BA               	movlw	186
  1179  06C1  00BB               	movwf	??_main
  1180  06C2                     u1737:	
  1181  06C2  0BBB               	decfsz	??_main,f
  1182  06C3  2EC2               	goto	u1737
  1183  06C4  0BBC               	decfsz	??_main+1,f
  1184  06C5  2EC2               	goto	u1737
  1185  06C6  0BBD               	decfsz	??_main+2,f
  1186  06C7  2EC2               	goto	u1737
  1187  06C8  0000               	nop
  1188                           
  1189                           ;main.c: 91: Lcd_Write_String(".");
  1190  06C9  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1191  06CA  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1192                           
  1193                           ;main.c: 92: _delay((unsigned long)((100)*(8000000/4000.0)));
  1194  06CF  3002               	movlw	2
  1195  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1196  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1197  06D2  00BD               	movwf	??_main+2
  1198  06D3  3004               	movlw	4
  1199  06D4  00BC               	movwf	??_main+1
  1200  06D5  30BA               	movlw	186
  1201  06D6  00BB               	movwf	??_main
  1202  06D7                     u1747:	
  1203  06D7  0BBB               	decfsz	??_main,f
  1204  06D8  2ED7               	goto	u1747
  1205  06D9  0BBC               	decfsz	??_main+1,f
  1206  06DA  2ED7               	goto	u1747
  1207  06DB  0BBD               	decfsz	??_main+2,f
  1208  06DC  2ED7               	goto	u1747
  1209  06DD  0000               	nop
  1210                           
  1211                           ;main.c: 93: Lcd_Write_String(".");
  1212  06DE  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1213  06DF  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1214                           
  1215                           ;main.c: 94: _delay((unsigned long)((100)*(8000000/4000.0)));
  1216  06E4  3002               	movlw	2
  1217  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1218  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1219  06E7  00BD               	movwf	??_main+2
  1220  06E8  3004               	movlw	4
  1221  06E9  00BC               	movwf	??_main+1
  1222  06EA  30BA               	movlw	186
  1223  06EB  00BB               	movwf	??_main
  1224  06EC                     u1757:	
  1225  06EC  0BBB               	decfsz	??_main,f
  1226  06ED  2EEC               	goto	u1757
  1227  06EE  0BBC               	decfsz	??_main+1,f
  1228  06EF  2EEC               	goto	u1757
  1229  06F0  0BBD               	decfsz	??_main+2,f
  1230  06F1  2EEC               	goto	u1757
  1231  06F2  0000               	nop
  1232                           
  1233                           ;main.c: 95: Lcd_Write_String(".");
  1234  06F3  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1235  06F4  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1236                           
  1237                           ;main.c: 96: _delay((unsigned long)((100)*(8000000/4000.0)));
  1238  06F9  3002               	movlw	2
  1239  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1240  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1241  06FC  00BD               	movwf	??_main+2
  1242  06FD  3004               	movlw	4
  1243  06FE  00BC               	movwf	??_main+1
  1244  06FF  30BA               	movlw	186
  1245  0700  00BB               	movwf	??_main
  1246  0701                     u1767:	
  1247  0701  0BBB               	decfsz	??_main,f
  1248  0702  2F01               	goto	u1767
  1249  0703  0BBC               	decfsz	??_main+1,f
  1250  0704  2F01               	goto	u1767
  1251  0705  0BBD               	decfsz	??_main+2,f
  1252  0706  2F01               	goto	u1767
  1253  0707  0000               	nop
  1254                           
  1255                           ;main.c: 97: Lcd_Write_String(".");
  1256  0708  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1257  0709  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1258                           
  1259                           ;main.c: 98: _delay((unsigned long)((100)*(8000000/4000.0)));
  1260  070E  3002               	movlw	2
  1261  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0711  00BD               	movwf	??_main+2
  1264  0712  3004               	movlw	4
  1265  0713  00BC               	movwf	??_main+1
  1266  0714  30BA               	movlw	186
  1267  0715  00BB               	movwf	??_main
  1268  0716                     u1777:	
  1269  0716  0BBB               	decfsz	??_main,f
  1270  0717  2F16               	goto	u1777
  1271  0718  0BBC               	decfsz	??_main+1,f
  1272  0719  2F16               	goto	u1777
  1273  071A  0BBD               	decfsz	??_main+2,f
  1274  071B  2F16               	goto	u1777
  1275  071C  0000               	nop
  1276                           
  1277                           ;main.c: 99: Lcd_Write_String(".");
  1278  071D  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1279  071E  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1280                           
  1281                           ;main.c: 100: _delay((unsigned long)((100)*(8000000/4000.0)));
  1282  0723  3002               	movlw	2
  1283  0724  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0725  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0726  00BD               	movwf	??_main+2
  1286  0727  3004               	movlw	4
  1287  0728  00BC               	movwf	??_main+1
  1288  0729  30BA               	movlw	186
  1289  072A  00BB               	movwf	??_main
  1290  072B                     u1787:	
  1291  072B  0BBB               	decfsz	??_main,f
  1292  072C  2F2B               	goto	u1787
  1293  072D  0BBC               	decfsz	??_main+1,f
  1294  072E  2F2B               	goto	u1787
  1295  072F  0BBD               	decfsz	??_main+2,f
  1296  0730  2F2B               	goto	u1787
  1297  0731  0000               	nop
  1298                           
  1299                           ;main.c: 101: Lcd_Write_String(".");
  1300  0732  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1301  0733  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1302                           
  1303                           ;main.c: 102: _delay((unsigned long)((100)*(8000000/4000.0)));
  1304  0738  3002               	movlw	2
  1305  0739  1283               	bcf	3,5	;RP0=0, select bank0
  1306  073A  1303               	bcf	3,6	;RP1=0, select bank0
  1307  073B  00BD               	movwf	??_main+2
  1308  073C  3004               	movlw	4
  1309  073D  00BC               	movwf	??_main+1
  1310  073E  30BA               	movlw	186
  1311  073F  00BB               	movwf	??_main
  1312  0740                     u1797:	
  1313  0740  0BBB               	decfsz	??_main,f
  1314  0741  2F40               	goto	u1797
  1315  0742  0BBC               	decfsz	??_main+1,f
  1316  0743  2F40               	goto	u1797
  1317  0744  0BBD               	decfsz	??_main+2,f
  1318  0745  2F40               	goto	u1797
  1319  0746  0000               	nop
  1320                           
  1321                           ;main.c: 103: Lcd_Write_String(".");
  1322  0747  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1323  0748  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1324                           
  1325                           ;main.c: 104: _delay((unsigned long)((100)*(8000000/4000.0)));
  1326  074D  3002               	movlw	2
  1327  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1328  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0750  00BD               	movwf	??_main+2
  1330  0751  3004               	movlw	4
  1331  0752  00BC               	movwf	??_main+1
  1332  0753  30BA               	movlw	186
  1333  0754  00BB               	movwf	??_main
  1334  0755                     u1807:	
  1335  0755  0BBB               	decfsz	??_main,f
  1336  0756  2F55               	goto	u1807
  1337  0757  0BBC               	decfsz	??_main+1,f
  1338  0758  2F55               	goto	u1807
  1339  0759  0BBD               	decfsz	??_main+2,f
  1340  075A  2F55               	goto	u1807
  1341  075B  0000               	nop
  1342                           
  1343                           ;main.c: 105: Lcd_Write_String(".");
  1344  075C  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1345  075D  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1346                           
  1347                           ;main.c: 106: _delay((unsigned long)((100)*(8000000/4000.0)));
  1348  0762  3002               	movlw	2
  1349  0763  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0764  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0765  00BD               	movwf	??_main+2
  1352  0766  3004               	movlw	4
  1353  0767  00BC               	movwf	??_main+1
  1354  0768  30BA               	movlw	186
  1355  0769  00BB               	movwf	??_main
  1356  076A                     u1817:	
  1357  076A  0BBB               	decfsz	??_main,f
  1358  076B  2F6A               	goto	u1817
  1359  076C  0BBC               	decfsz	??_main+1,f
  1360  076D  2F6A               	goto	u1817
  1361  076E  0BBD               	decfsz	??_main+2,f
  1362  076F  2F6A               	goto	u1817
  1363  0770  0000               	nop
  1364                           
  1365                           ;main.c: 107: Lcd_Write_String(".");
  1366  0771  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1367  0772  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1368                           
  1369                           ;main.c: 108: _delay((unsigned long)((100)*(8000000/4000.0)));
  1370  0777  3002               	movlw	2
  1371  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1372  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1373  077A  00BD               	movwf	??_main+2
  1374  077B  3004               	movlw	4
  1375  077C  00BC               	movwf	??_main+1
  1376  077D  30BA               	movlw	186
  1377  077E  00BB               	movwf	??_main
  1378  077F                     u1827:	
  1379  077F  0BBB               	decfsz	??_main,f
  1380  0780  2F7F               	goto	u1827
  1381  0781  0BBC               	decfsz	??_main+1,f
  1382  0782  2F7F               	goto	u1827
  1383  0783  0BBD               	decfsz	??_main+2,f
  1384  0784  2F7F               	goto	u1827
  1385  0785  0000               	nop
  1386                           
  1387                           ;main.c: 109: Lcd_Write_String(".");
  1388  0786  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1389  0787  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1390                           
  1391                           ;main.c: 110: _delay((unsigned long)((100)*(8000000/4000.0)));
  1392  078C  3002               	movlw	2
  1393  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1394  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1395  078F  00BD               	movwf	??_main+2
  1396  0790  3004               	movlw	4
  1397  0791  00BC               	movwf	??_main+1
  1398  0792  30BA               	movlw	186
  1399  0793  00BB               	movwf	??_main
  1400  0794                     u1837:	
  1401  0794  0BBB               	decfsz	??_main,f
  1402  0795  2F94               	goto	u1837
  1403  0796  0BBC               	decfsz	??_main+1,f
  1404  0797  2F94               	goto	u1837
  1405  0798  0BBD               	decfsz	??_main+2,f
  1406  0799  2F94               	goto	u1837
  1407  079A  0000               	nop
  1408                           
  1409                           ;main.c: 112: Lcd_Write_String(".");
  1410  079B  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1411  079C  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1412                           
  1413                           ;main.c: 113: _delay((unsigned long)((100)*(8000000/4000.0)));
  1414  07A1  3002               	movlw	2
  1415  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1416  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1417  07A4  00BD               	movwf	??_main+2
  1418  07A5  3004               	movlw	4
  1419  07A6  00BC               	movwf	??_main+1
  1420  07A7  30BA               	movlw	186
  1421  07A8  00BB               	movwf	??_main
  1422  07A9                     u1847:	
  1423  07A9  0BBB               	decfsz	??_main,f
  1424  07AA  2FA9               	goto	u1847
  1425  07AB  0BBC               	decfsz	??_main+1,f
  1426  07AC  2FA9               	goto	u1847
  1427  07AD  0BBD               	decfsz	??_main+2,f
  1428  07AE  2FA9               	goto	u1847
  1429  07AF  0000               	nop
  1430                           
  1431                           ;main.c: 114: Lcd_Write_String(".");
  1432  07B0  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1433  07B1  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1434                           
  1435                           ;main.c: 115: _delay((unsigned long)((100)*(8000000/4000.0)));
  1436  07B6  3002               	movlw	2
  1437  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1438  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1439  07B9  00BD               	movwf	??_main+2
  1440  07BA  3004               	movlw	4
  1441  07BB  00BC               	movwf	??_main+1
  1442  07BC  30BA               	movlw	186
  1443  07BD  00BB               	movwf	??_main
  1444  07BE                     u1857:	
  1445  07BE  0BBB               	decfsz	??_main,f
  1446  07BF  2FBE               	goto	u1857
  1447  07C0  0BBC               	decfsz	??_main+1,f
  1448  07C1  2FBE               	goto	u1857
  1449  07C2  0BBD               	decfsz	??_main+2,f
  1450  07C3  2FBE               	goto	u1857
  1451  07C4  0000               	nop
  1452                           
  1453                           ;main.c: 116: Lcd_Write_String(".");
  1454  07C5  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1455  07C6  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1456                           
  1457                           ;main.c: 117: _delay((unsigned long)((100)*(8000000/4000.0)));
  1458  07CB  3002               	movlw	2
  1459  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1460  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1461  07CE  00BD               	movwf	??_main+2
  1462  07CF  3004               	movlw	4
  1463  07D0  00BC               	movwf	??_main+1
  1464  07D1  30BA               	movlw	186
  1465  07D2  00BB               	movwf	??_main
  1466  07D3                     u1867:	
  1467  07D3  0BBB               	decfsz	??_main,f
  1468  07D4  2FD3               	goto	u1867
  1469  07D5  0BBC               	decfsz	??_main+1,f
  1470  07D6  2FD3               	goto	u1867
  1471  07D7  0BBD               	decfsz	??_main+2,f
  1472  07D8  2FD3               	goto	u1867
  1473  07D9  0000               	nop
  1474                           
  1475                           ;main.c: 118: Lcd_Write_String(".");
  1476  07DA  302B               	movlw	((STR_6+9)-__stringbase)& (0+255)
  1477  07DB  120A  158A  272C  120A  118A  	fcall	_Lcd_Write_String
  1478                           
  1479                           ;main.c: 119: _delay((unsigned long)((100)*(8000000/4000.0)));
  1480  07E0  3002               	movlw	2
  1481  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1482  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1483  07E3  00BD               	movwf	??_main+2
  1484  07E4  3004               	movlw	4
  1485  07E5  00BC               	movwf	??_main+1
  1486  07E6  30BA               	movlw	186
  1487  07E7  00BB               	movwf	??_main
  1488  07E8                     u1877:	
  1489  07E8  0BBB               	decfsz	??_main,f
  1490  07E9  2FE8               	goto	u1877
  1491  07EA  0BBC               	decfsz	??_main+1,f
  1492  07EB  2FE8               	goto	u1877
  1493  07EC  0BBD               	decfsz	??_main+2,f
  1494  07ED  2FE8               	goto	u1877
  1495  07EE  0000               	nop
  1496                           
  1497                           ;main.c: 120: Lcd_Clear();
  1498  07EF  120A  158A  26E2  120A  118A  	fcall	_Lcd_Clear
  1499  07F4  2CB9               	goto	l1458
  1500  07F5                     __end_of_main:	
  1501                           ;main.c: 121: }
  1502                           ;main.c: 122: return 0;
  1503                           ;	Return value of _main is never used
  1504                           
  1505                           
  1506                           	psect	text1
  1507  0EED                     __ptext1:	
  1508 ;; *************** function _srand *****************
  1509 ;; Defined at:
  1510 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\rand.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  x               2    0[COMMON] unsigned int 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;		None               void
  1517 ;; Registers used:
  1518 ;;		wreg
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         2       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0
  1527 ;;      Totals:         2       0       0       0       0
  1528 ;;Total ram usage:        2 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           
  1538                           ;psect for function _srand
  1539  0EED                     _srand:	
  1540                           
  1541                           ;incstack = 0
  1542                           ; Regs used in _srand: [wreg]
  1543  0EED  0870               	movf	srand@x,w
  1544  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0EF0  00E0               	movwf	_randx
  1547  0EF1  0871               	movf	srand@x+1,w
  1548  0EF2  00E1               	movwf	_randx+1
  1549  0EF3  01E2               	clrf	_randx+2
  1550  0EF4  01E3               	clrf	_randx+3
  1551  0EF5  01E4               	clrf	_randf
  1552  0EF6  0AE4               	incf	_randf,f
  1553  0EF7  0008               	return
  1554  0EF8                     __end_of_srand:	
  1555                           
  1556                           	psect	text2
  1557  0ECB                     __ptext2:	
  1558 ;; *************** function _pic_init *****************
  1559 ;; Defined at:
  1560 ;;		line 10 in file "lcd.h"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;		None               void
  1567 ;; Registers used:
  1568 ;;		status,2
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1574 ;;      Params:         0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0
  1577 ;;      Totals:         0       0       0       0       0
  1578 ;;Total ram usage:        0 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_main
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           
  1588                           ;psect for function _pic_init
  1589  0ECB                     _pic_init:	
  1590                           
  1591                           ;lcd.h: 12: TRISD = 0x00;
  1592                           
  1593                           ;incstack = 0
  1594                           ; Regs used in _pic_init: [status,2]
  1595  0ECB  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0ECC  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0ECD  0188               	clrf	8	;volatile
  1598                           
  1599                           ;lcd.h: 14: TRISAbits.TRISA0 = 1;
  1600  0ECE  1405               	bsf	5,0	;volatile
  1601                           
  1602                           ;lcd.h: 16: TRISAbits.TRISA1 = 1;
  1603  0ECF  1485               	bsf	5,1	;volatile
  1604                           
  1605                           ;lcd.h: 18: TRISAbits.TRISA2 = 1;
  1606  0ED0  1505               	bsf	5,2	;volatile
  1607  0ED1  0008               	return
  1608  0ED2                     __end_of_pic_init:	
  1609                           
  1610                           	psect	text3
  1611  0FB0                     __ptext3:	
  1612 ;; *************** function _modf *****************
  1613 ;; Defined at:
  1614 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\modf.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  value           3   23[BANK0 ] unsigned int 
  1617 ;;  iptr            1   26[BANK0 ] PTR 
  1618 ;;		 -> valor3(3), valor1(3), entero(3), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  3   23[BANK0 ] PTR 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1630 ;;      Params:         0       4       0       0       0
  1631 ;;      Locals:         0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0
  1633 ;;      Totals:         0       4       0       0       0
  1634 ;;Total ram usage:        4 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    2
  1637 ;; This function calls:
  1638 ;;		___attoft
  1639 ;;		___ftadd
  1640 ;;		___ftneg
  1641 ;;		___fttol
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _modf
  1649  0FB0                     _modf:	
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _modf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1653  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0FB2  0837               	movf	modf@value,w
  1656  0FB3  00F0               	movwf	___fttol@f1
  1657  0FB4  0838               	movf	modf@value+1,w
  1658  0FB5  00F1               	movwf	___fttol@f1+1
  1659  0FB6  0839               	movf	modf@value+2,w
  1660  0FB7  00F2               	movwf	___fttol@f1+2
  1661  0FB8  120A  118A  211E  120A  158A  	fcall	___fttol
  1662  0FBD  0872               	movf	?___fttol+2,w
  1663  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0FC0  00A2               	movwf	___attoft@c+2
  1666  0FC1  0871               	movf	?___fttol+1,w
  1667  0FC2  00A1               	movwf	___attoft@c+1
  1668  0FC3  0870               	movf	?___fttol,w
  1669  0FC4  00A0               	movwf	___attoft@c
  1670  0FC5  120A  158A  274E  120A  158A  	fcall	___attoft
  1671  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0FCC  083A               	movf	modf@iptr,w
  1674  0FCD  0084               	movwf	4
  1675  0FCE  0820               	movf	?___attoft,w
  1676  0FCF  1383               	bcf	3,7	;select IRP bank0
  1677  0FD0  0080               	movwf	0
  1678  0FD1  0A84               	incf	4,f
  1679  0FD2  0821               	movf	?___attoft+1,w
  1680  0FD3  0080               	movwf	0
  1681  0FD4  0A84               	incf	4,f
  1682  0FD5  0822               	movf	?___attoft+2,w
  1683  0FD6  0080               	movwf	0
  1684  0FD7  0837               	movf	modf@value,w
  1685  0FD8  00AA               	movwf	___ftadd@f1
  1686  0FD9  0838               	movf	modf@value+1,w
  1687  0FDA  00AB               	movwf	___ftadd@f1+1
  1688  0FDB  0839               	movf	modf@value+2,w
  1689  0FDC  00AC               	movwf	___ftadd@f1+2
  1690  0FDD  083A               	movf	modf@iptr,w
  1691  0FDE  0084               	movwf	4
  1692  0FDF  0800               	movf	0,w
  1693  0FE0  00F0               	movwf	___ftneg@f1
  1694  0FE1  0A84               	incf	4,f
  1695  0FE2  0800               	movf	0,w
  1696  0FE3  00F1               	movwf	___ftneg@f1+1
  1697  0FE4  0A84               	incf	4,f
  1698  0FE5  0800               	movf	0,w
  1699  0FE6  00F2               	movwf	___ftneg@f1+2
  1700  0FE7  120A  158A  26D2  120A  158A  	fcall	___ftneg
  1701  0FEC  0870               	movf	?___ftneg,w
  1702  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  1703  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  1704  0FEF  00AD               	movwf	___ftadd@f2
  1705  0FF0  0871               	movf	?___ftneg+1,w
  1706  0FF1  00AE               	movwf	___ftadd@f2+1
  1707  0FF2  0872               	movf	?___ftneg+2,w
  1708  0FF3  00AF               	movwf	___ftadd@f2+2
  1709  0FF4  120A  118A  2331   	fcall	___ftadd
  1710  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0FF9  082A               	movf	?___ftadd,w
  1713  0FFA  00B7               	movwf	?_modf
  1714  0FFB  082B               	movf	?___ftadd+1,w
  1715  0FFC  00B8               	movwf	?_modf+1
  1716  0FFD  082C               	movf	?___ftadd+2,w
  1717  0FFE  00B9               	movwf	?_modf+2
  1718  0FFF  0008               	return
  1719  1000                     __end_of_modf:	
  1720                           
  1721                           	psect	text4
  1722  011E                     __ptext4:	
  1723 ;; *************** function ___fttol *****************
  1724 ;; Defined at:
  1725 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  f1              3    0[COMMON] float 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  lval            4    9[COMMON] unsigned long 
  1730 ;;  exp1            1   13[COMMON] unsigned char 
  1731 ;;  sign1           1    8[COMMON] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  4    0[COMMON] long 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         4       0       0       0       0
  1742 ;;      Locals:         6       0       0       0       0
  1743 ;;      Temps:          4       0       0       0       0
  1744 ;;      Totals:        14       0       0       0       0
  1745 ;;Total ram usage:       14 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;;		_modf
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function ___fttol
  1757  011E                     ___fttol:	
  1758                           
  1759                           ;incstack = 0
  1760                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1761  011E  0870               	movf	___fttol@f1,w
  1762  011F  00F4               	movwf	??___fttol
  1763  0120  0871               	movf	___fttol@f1+1,w
  1764  0121  00F5               	movwf	??___fttol+1
  1765  0122  0872               	movf	___fttol@f1+2,w
  1766  0123  00F6               	movwf	??___fttol+2
  1767  0124  1003               	clrc
  1768  0125  0D75               	rlf	??___fttol+1,w
  1769  0126  0D76               	rlf	??___fttol+2,w
  1770  0127  00F7               	movwf	??___fttol+3
  1771  0128  0877               	movf	??___fttol+3,w
  1772  0129  00FD               	movwf	___fttol@exp1
  1773  012A  08FD               	movf	___fttol@exp1,f
  1774  012B  1D03               	skipz
  1775  012C  2936               	goto	l1238
  1776  012D  3000               	movlw	0
  1777  012E  00F3               	movwf	?___fttol+3
  1778  012F  3000               	movlw	0
  1779  0130  00F2               	movwf	?___fttol+2
  1780  0131  3000               	movlw	0
  1781  0132  00F1               	movwf	?___fttol+1
  1782  0133  3000               	movlw	0
  1783  0134  00F0               	movwf	?___fttol
  1784  0135  0008               	return
  1785  0136                     l1238:	
  1786  0136  0870               	movf	___fttol@f1,w
  1787  0137  00F4               	movwf	??___fttol
  1788  0138  0871               	movf	___fttol@f1+1,w
  1789  0139  00F5               	movwf	??___fttol+1
  1790  013A  0872               	movf	___fttol@f1+2,w
  1791  013B  00F6               	movwf	??___fttol+2
  1792  013C  3017               	movlw	23
  1793  013D                     u1235:	
  1794  013D  1003               	clrc
  1795  013E  0CF6               	rrf	??___fttol+2,f
  1796  013F  0CF5               	rrf	??___fttol+1,f
  1797  0140  0CF4               	rrf	??___fttol,f
  1798  0141  3EFF               	addlw	-1
  1799  0142  1D03               	skipz
  1800  0143  293D               	goto	u1235
  1801  0144  0874               	movf	??___fttol,w
  1802  0145  00F7               	movwf	??___fttol+3
  1803  0146  0877               	movf	??___fttol+3,w
  1804  0147  00F8               	movwf	___fttol@sign1
  1805  0148  17F1               	bsf	___fttol@f1+1,7
  1806  0149  30FF               	movlw	255
  1807  014A  05F0               	andwf	___fttol@f1,f
  1808  014B  30FF               	movlw	255
  1809  014C  05F1               	andwf	___fttol@f1+1,f
  1810  014D  3000               	movlw	0
  1811  014E  05F2               	andwf	___fttol@f1+2,f
  1812  014F  0870               	movf	___fttol@f1,w
  1813  0150  00F9               	movwf	___fttol@lval
  1814  0151  0871               	movf	___fttol@f1+1,w
  1815  0152  00FA               	movwf	___fttol@lval+1
  1816  0153  0872               	movf	___fttol@f1+2,w
  1817  0154  00FB               	movwf	___fttol@lval+2
  1818  0155  01FC               	clrf	___fttol@lval+3
  1819  0156  308E               	movlw	142
  1820  0157  02FD               	subwf	___fttol@exp1,f
  1821  0158  1FFD               	btfss	___fttol@exp1,7
  1822  0159  2978               	goto	l1258
  1823  015A  087D               	movf	___fttol@exp1,w
  1824  015B  3A80               	xorlw	128
  1825  015C  3E8F               	addlw	143
  1826  015D  1803               	skipnc
  1827  015E  2968               	goto	l1256
  1828  015F  3000               	movlw	0
  1829  0160  00F3               	movwf	?___fttol+3
  1830  0161  3000               	movlw	0
  1831  0162  00F2               	movwf	?___fttol+2
  1832  0163  3000               	movlw	0
  1833  0164  00F1               	movwf	?___fttol+1
  1834  0165  3000               	movlw	0
  1835  0166  00F0               	movwf	?___fttol
  1836  0167  0008               	return
  1837  0168                     l1256:	
  1838  0168  3001               	movlw	1
  1839  0169                     u1265:	
  1840  0169  1003               	clrc
  1841  016A  0CFC               	rrf	___fttol@lval+3,f
  1842  016B  0CFB               	rrf	___fttol@lval+2,f
  1843  016C  0CFA               	rrf	___fttol@lval+1,f
  1844  016D  0CF9               	rrf	___fttol@lval,f
  1845  016E  3EFF               	addlw	-1
  1846  016F  1D03               	skipz
  1847  0170  2969               	goto	u1265
  1848  0171  3001               	movlw	1
  1849  0172  00F4               	movwf	??___fttol
  1850  0173  0874               	movf	??___fttol,w
  1851  0174  07FD               	addwf	___fttol@exp1,f
  1852  0175  1903               	btfsc	3,2
  1853  0176  2993               	goto	l1268
  1854  0177  2968               	goto	l1256
  1855  0178                     l1258:	
  1856  0178  3018               	movlw	24
  1857  0179  027D               	subwf	___fttol@exp1,w
  1858  017A  1C03               	skipc
  1859  017B  2990               	goto	l1266
  1860  017C  3000               	movlw	0
  1861  017D  00F3               	movwf	?___fttol+3
  1862  017E  3000               	movlw	0
  1863  017F  00F2               	movwf	?___fttol+2
  1864  0180  3000               	movlw	0
  1865  0181  00F1               	movwf	?___fttol+1
  1866  0182  3000               	movlw	0
  1867  0183  00F0               	movwf	?___fttol
  1868  0184  0008               	return
  1869  0185                     l1264:	
  1870  0185  3001               	movlw	1
  1871  0186  00F4               	movwf	??___fttol
  1872  0187                     u1295:	
  1873  0187  1003               	clrc
  1874  0188  0DF9               	rlf	___fttol@lval,f
  1875  0189  0DFA               	rlf	___fttol@lval+1,f
  1876  018A  0DFB               	rlf	___fttol@lval+2,f
  1877  018B  0DFC               	rlf	___fttol@lval+3,f
  1878  018C  0BF4               	decfsz	??___fttol,f
  1879  018D  2987               	goto	u1295
  1880  018E  3001               	movlw	1
  1881  018F  02FD               	subwf	___fttol@exp1,f
  1882  0190                     l1266:	
  1883  0190  08FD               	movf	___fttol@exp1,f
  1884  0191  1D03               	skipz
  1885  0192  2985               	goto	l1264
  1886  0193                     l1268:	
  1887  0193  0878               	movf	___fttol@sign1,w
  1888  0194  1903               	btfsc	3,2
  1889  0195  29A1               	goto	l1272
  1890  0196  09F9               	comf	___fttol@lval,f
  1891  0197  09FA               	comf	___fttol@lval+1,f
  1892  0198  09FB               	comf	___fttol@lval+2,f
  1893  0199  09FC               	comf	___fttol@lval+3,f
  1894  019A  0AF9               	incf	___fttol@lval,f
  1895  019B  1903               	skipnz
  1896  019C  0AFA               	incf	___fttol@lval+1,f
  1897  019D  1903               	skipnz
  1898  019E  0AFB               	incf	___fttol@lval+2,f
  1899  019F  1903               	skipnz
  1900  01A0  0AFC               	incf	___fttol@lval+3,f
  1901  01A1                     l1272:	
  1902  01A1  087C               	movf	___fttol@lval+3,w
  1903  01A2  00F3               	movwf	?___fttol+3
  1904  01A3  087B               	movf	___fttol@lval+2,w
  1905  01A4  00F2               	movwf	?___fttol+2
  1906  01A5  087A               	movf	___fttol@lval+1,w
  1907  01A6  00F1               	movwf	?___fttol+1
  1908  01A7  0879               	movf	___fttol@lval,w
  1909  01A8  00F0               	movwf	?___fttol
  1910  01A9  0008               	return
  1911  01AA                     __end_of___fttol:	
  1912                           
  1913                           	psect	text5
  1914  0ED2                     __ptext5:	
  1915 ;; *************** function ___ftneg *****************
  1916 ;; Defined at:
  1917 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  f1              3    0[COMMON] float 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  3    0[COMMON] float 
  1924 ;; Registers used:
  1925 ;;		wreg
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         3       0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0
  1934 ;;      Totals:         3       0       0       0       0
  1935 ;;Total ram usage:        3 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_modf
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           
  1945                           ;psect for function ___ftneg
  1946  0ED2                     ___ftneg:	
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in ___ftneg: [wreg]
  1950  0ED2  0872               	movf	___ftneg@f1+2,w
  1951  0ED3  0471               	iorwf	___ftneg@f1+1,w
  1952  0ED4  0470               	iorwf	___ftneg@f1,w
  1953  0ED5  1903               	skipnz
  1954  0ED6  0008               	return
  1955  0ED7  3080               	movlw	128
  1956  0ED8  06F2               	xorwf	___ftneg@f1+2,f
  1957  0ED9  0008               	return
  1958  0EDA                     __end_of___ftneg:	
  1959                           
  1960                           	psect	text6
  1961  0331                     __ptext6:	
  1962 ;; *************** function ___ftadd *****************
  1963 ;; Defined at:
  1964 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  f1              3   10[BANK0 ] float 
  1967 ;;  f2              3   13[BANK0 ] float 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  exp1            1   22[BANK0 ] unsigned char 
  1970 ;;  exp2            1   21[BANK0 ] unsigned char 
  1971 ;;  sign            1   20[BANK0 ] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  3   10[BANK0 ] float 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, pclath, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         0       6       0       0       0
  1982 ;;      Locals:         0       3       0       0       0
  1983 ;;      Temps:          0       4       0       0       0
  1984 ;;      Totals:         0      13       0       0       0
  1985 ;;Total ram usage:       13 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    1
  1988 ;; This function calls:
  1989 ;;		___ftpack
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;;		_modf
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function ___ftadd
  1998  0331                     ___ftadd:	
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2002  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2004  0333  082A               	movf	___ftadd@f1,w
  2005  0334  00B0               	movwf	??___ftadd
  2006  0335  082B               	movf	___ftadd@f1+1,w
  2007  0336  00B1               	movwf	??___ftadd+1
  2008  0337  082C               	movf	___ftadd@f1+2,w
  2009  0338  00B2               	movwf	??___ftadd+2
  2010  0339  1003               	clrc
  2011  033A  0D31               	rlf	??___ftadd+1,w
  2012  033B  0D32               	rlf	??___ftadd+2,w
  2013  033C  00B3               	movwf	??___ftadd+3
  2014  033D  0833               	movf	??___ftadd+3,w
  2015  033E  00B6               	movwf	___ftadd@exp1
  2016  033F  082D               	movf	___ftadd@f2,w
  2017  0340  00B0               	movwf	??___ftadd
  2018  0341  082E               	movf	___ftadd@f2+1,w
  2019  0342  00B1               	movwf	??___ftadd+1
  2020  0343  082F               	movf	___ftadd@f2+2,w
  2021  0344  00B2               	movwf	??___ftadd+2
  2022  0345  1003               	clrc
  2023  0346  0D31               	rlf	??___ftadd+1,w
  2024  0347  0D32               	rlf	??___ftadd+2,w
  2025  0348  00B3               	movwf	??___ftadd+3
  2026  0349  0833               	movf	??___ftadd+3,w
  2027  034A  00B5               	movwf	___ftadd@exp2
  2028  034B  0836               	movf	___ftadd@exp1,w
  2029  034C  1903               	btfsc	3,2
  2030  034D  2B5A               	goto	l1160
  2031  034E  0835               	movf	___ftadd@exp2,w
  2032  034F  0236               	subwf	___ftadd@exp1,w
  2033  0350  1803               	skipnc
  2034  0351  2B61               	goto	l1164
  2035  0352  0336               	decf	___ftadd@exp1,w
  2036  0353  3AFF               	xorlw	255
  2037  0354  0735               	addwf	___ftadd@exp2,w
  2038  0355  00B0               	movwf	??___ftadd
  2039  0356  3019               	movlw	25
  2040  0357  0230               	subwf	??___ftadd,w
  2041  0358  1C03               	skipc
  2042  0359  2B61               	goto	l1164
  2043  035A                     l1160:	
  2044  035A  082D               	movf	___ftadd@f2,w
  2045  035B  00AA               	movwf	?___ftadd
  2046  035C  082E               	movf	___ftadd@f2+1,w
  2047  035D  00AB               	movwf	?___ftadd+1
  2048  035E  082F               	movf	___ftadd@f2+2,w
  2049  035F  00AC               	movwf	?___ftadd+2
  2050  0360  0008               	return
  2051  0361                     l1164:	
  2052  0361  0835               	movf	___ftadd@exp2,w
  2053  0362  1903               	btfsc	3,2
  2054  0363  0008               	return
  2055  0364  0836               	movf	___ftadd@exp1,w
  2056  0365  0235               	subwf	___ftadd@exp2,w
  2057  0366  1803               	skipnc
  2058  0367  2B70               	goto	l1170
  2059  0368  0335               	decf	___ftadd@exp2,w
  2060  0369  3AFF               	xorlw	255
  2061  036A  0736               	addwf	___ftadd@exp1,w
  2062  036B  00B0               	movwf	??___ftadd
  2063  036C  3019               	movlw	25
  2064  036D  0230               	subwf	??___ftadd,w
  2065  036E  1803               	btfsc	3,0
  2066  036F  0008               	return
  2067  0370                     l1170:	
  2068  0370  3006               	movlw	6
  2069  0371  00B0               	movwf	??___ftadd
  2070  0372  0830               	movf	??___ftadd,w
  2071  0373  00B4               	movwf	___ftadd@sign
  2072  0374  1BAC               	btfsc	___ftadd@f1+2,7
  2073  0375  17B4               	bsf	___ftadd@sign,7
  2074  0376  1BAF               	btfsc	___ftadd@f2+2,7
  2075  0377  1734               	bsf	___ftadd@sign,6
  2076  0378  17AB               	bsf	___ftadd@f1+1,7
  2077  0379  30FF               	movlw	255
  2078  037A  05AA               	andwf	___ftadd@f1,f
  2079  037B  30FF               	movlw	255
  2080  037C  05AB               	andwf	___ftadd@f1+1,f
  2081  037D  3000               	movlw	0
  2082  037E  05AC               	andwf	___ftadd@f1+2,f
  2083  037F  17AE               	bsf	___ftadd@f2+1,7
  2084  0380  30FF               	movlw	255
  2085  0381  05AD               	andwf	___ftadd@f2,f
  2086  0382  30FF               	movlw	255
  2087  0383  05AE               	andwf	___ftadd@f2+1,f
  2088  0384  3000               	movlw	0
  2089  0385  05AF               	andwf	___ftadd@f2+2,f
  2090  0386  0835               	movf	___ftadd@exp2,w
  2091  0387  0236               	subwf	___ftadd@exp1,w
  2092  0388  1803               	skipnc
  2093  0389  2BB0               	goto	l1192
  2094  038A                     l1182:	
  2095  038A  3001               	movlw	1
  2096  038B                     u1065:	
  2097  038B  1003               	clrc
  2098  038C  0DAD               	rlf	___ftadd@f2,f
  2099  038D  0DAE               	rlf	___ftadd@f2+1,f
  2100  038E  0DAF               	rlf	___ftadd@f2+2,f
  2101  038F  3EFF               	addlw	-1
  2102  0390  1D03               	skipz
  2103  0391  2B8B               	goto	u1065
  2104  0392  3001               	movlw	1
  2105  0393  02B5               	subwf	___ftadd@exp2,f
  2106  0394  0835               	movf	___ftadd@exp2,w
  2107  0395  0636               	xorwf	___ftadd@exp1,w
  2108  0396  1903               	skipnz
  2109  0397  2BAB               	goto	l1190
  2110  0398  3001               	movlw	1
  2111  0399  02B4               	subwf	___ftadd@sign,f
  2112  039A  0834               	movf	___ftadd@sign,w
  2113  039B  3907               	andlw	7
  2114  039C  1903               	btfsc	3,2
  2115  039D  2BAB               	goto	l1190
  2116  039E  2B8A               	goto	l1182
  2117  039F                     l1188:	
  2118  039F  3001               	movlw	1
  2119  03A0                     u1095:	
  2120  03A0  1003               	clrc
  2121  03A1  0CAC               	rrf	___ftadd@f1+2,f
  2122  03A2  0CAB               	rrf	___ftadd@f1+1,f
  2123  03A3  0CAA               	rrf	___ftadd@f1,f
  2124  03A4  3EFF               	addlw	-1
  2125  03A5  1D03               	skipz
  2126  03A6  2BA0               	goto	u1095
  2127  03A7  3001               	movlw	1
  2128  03A8  00B0               	movwf	??___ftadd
  2129  03A9  0830               	movf	??___ftadd,w
  2130  03AA  07B6               	addwf	___ftadd@exp1,f
  2131  03AB                     l1190:	
  2132  03AB  0836               	movf	___ftadd@exp1,w
  2133  03AC  0635               	xorwf	___ftadd@exp2,w
  2134  03AD  1903               	btfsc	3,2
  2135  03AE  2BD9               	goto	l371
  2136  03AF  2B9F               	goto	l1188
  2137  03B0                     l1192:	
  2138  03B0  0836               	movf	___ftadd@exp1,w
  2139  03B1  0235               	subwf	___ftadd@exp2,w
  2140  03B2  1803               	skipnc
  2141  03B3  2BD9               	goto	l371
  2142  03B4                     l1194:	
  2143  03B4  3001               	movlw	1
  2144  03B5                     u1125:	
  2145  03B5  1003               	clrc
  2146  03B6  0DAA               	rlf	___ftadd@f1,f
  2147  03B7  0DAB               	rlf	___ftadd@f1+1,f
  2148  03B8  0DAC               	rlf	___ftadd@f1+2,f
  2149  03B9  3EFF               	addlw	-1
  2150  03BA  1D03               	skipz
  2151  03BB  2BB5               	goto	u1125
  2152  03BC  3001               	movlw	1
  2153  03BD  02B6               	subwf	___ftadd@exp1,f
  2154  03BE  0835               	movf	___ftadd@exp2,w
  2155  03BF  0636               	xorwf	___ftadd@exp1,w
  2156  03C0  1903               	skipnz
  2157  03C1  2BD5               	goto	l1202
  2158  03C2  3001               	movlw	1
  2159  03C3  02B4               	subwf	___ftadd@sign,f
  2160  03C4  0834               	movf	___ftadd@sign,w
  2161  03C5  3907               	andlw	7
  2162  03C6  1903               	btfsc	3,2
  2163  03C7  2BD5               	goto	l1202
  2164  03C8  2BB4               	goto	l1194
  2165  03C9                     l1200:	
  2166  03C9  3001               	movlw	1
  2167  03CA                     u1155:	
  2168  03CA  1003               	clrc
  2169  03CB  0CAF               	rrf	___ftadd@f2+2,f
  2170  03CC  0CAE               	rrf	___ftadd@f2+1,f
  2171  03CD  0CAD               	rrf	___ftadd@f2,f
  2172  03CE  3EFF               	addlw	-1
  2173  03CF  1D03               	skipz
  2174  03D0  2BCA               	goto	u1155
  2175  03D1  3001               	movlw	1
  2176  03D2  00B0               	movwf	??___ftadd
  2177  03D3  0830               	movf	??___ftadd,w
  2178  03D4  07B5               	addwf	___ftadd@exp2,f
  2179  03D5                     l1202:	
  2180  03D5  0836               	movf	___ftadd@exp1,w
  2181  03D6  0635               	xorwf	___ftadd@exp2,w
  2182  03D7  1D03               	skipz
  2183  03D8  2BC9               	goto	l1200
  2184  03D9                     l371:	
  2185  03D9  1FB4               	btfss	___ftadd@sign,7
  2186  03DA  2BEB               	goto	l1206
  2187  03DB  30FF               	movlw	255
  2188  03DC  06AA               	xorwf	___ftadd@f1,f
  2189  03DD  30FF               	movlw	255
  2190  03DE  06AB               	xorwf	___ftadd@f1+1,f
  2191  03DF  30FF               	movlw	255
  2192  03E0  06AC               	xorwf	___ftadd@f1+2,f
  2193  03E1  3001               	movlw	1
  2194  03E2  07AA               	addwf	___ftadd@f1,f
  2195  03E3  3000               	movlw	0
  2196  03E4  1803               	skipnc
  2197  03E5  3001               	movlw	1
  2198  03E6  07AB               	addwf	___ftadd@f1+1,f
  2199  03E7  3000               	movlw	0
  2200  03E8  1803               	skipnc
  2201  03E9  3001               	movlw	1
  2202  03EA  07AC               	addwf	___ftadd@f1+2,f
  2203  03EB                     l1206:	
  2204  03EB  1F34               	btfss	___ftadd@sign,6
  2205  03EC  2BFD               	goto	l1210
  2206  03ED  30FF               	movlw	255
  2207  03EE  06AD               	xorwf	___ftadd@f2,f
  2208  03EF  30FF               	movlw	255
  2209  03F0  06AE               	xorwf	___ftadd@f2+1,f
  2210  03F1  30FF               	movlw	255
  2211  03F2  06AF               	xorwf	___ftadd@f2+2,f
  2212  03F3  3001               	movlw	1
  2213  03F4  07AD               	addwf	___ftadd@f2,f
  2214  03F5  3000               	movlw	0
  2215  03F6  1803               	skipnc
  2216  03F7  3001               	movlw	1
  2217  03F8  07AE               	addwf	___ftadd@f2+1,f
  2218  03F9  3000               	movlw	0
  2219  03FA  1803               	skipnc
  2220  03FB  3001               	movlw	1
  2221  03FC  07AF               	addwf	___ftadd@f2+2,f
  2222  03FD                     l1210:	
  2223  03FD  01B4               	clrf	___ftadd@sign
  2224  03FE  082A               	movf	___ftadd@f1,w
  2225  03FF  07AD               	addwf	___ftadd@f2,f
  2226  0400  082B               	movf	___ftadd@f1+1,w
  2227  0401  1103               	clrz
  2228  0402  1803               	skipnc
  2229  0403  0A2B               	incf	___ftadd@f1+1,w
  2230  0404  1D03               	btfss	3,2
  2231  0405  07AE               	addwf	___ftadd@f2+1,f
  2232  0406  082C               	movf	___ftadd@f1+2,w
  2233  0407  1103               	clrz
  2234  0408  1803               	skipnc
  2235  0409  0A2C               	incf	___ftadd@f1+2,w
  2236  040A  1D03               	btfss	3,2
  2237  040B  07AF               	addwf	___ftadd@f2+2,f
  2238  040C  1FAF               	btfss	___ftadd@f2+2,7
  2239  040D  2C20               	goto	l1220
  2240  040E  30FF               	movlw	255
  2241  040F  06AD               	xorwf	___ftadd@f2,f
  2242  0410  30FF               	movlw	255
  2243  0411  06AE               	xorwf	___ftadd@f2+1,f
  2244  0412  30FF               	movlw	255
  2245  0413  06AF               	xorwf	___ftadd@f2+2,f
  2246  0414  3001               	movlw	1
  2247  0415  07AD               	addwf	___ftadd@f2,f
  2248  0416  3000               	movlw	0
  2249  0417  1803               	skipnc
  2250  0418  3001               	movlw	1
  2251  0419  07AE               	addwf	___ftadd@f2+1,f
  2252  041A  3000               	movlw	0
  2253  041B  1803               	skipnc
  2254  041C  3001               	movlw	1
  2255  041D  07AF               	addwf	___ftadd@f2+2,f
  2256  041E  01B4               	clrf	___ftadd@sign
  2257  041F  0AB4               	incf	___ftadd@sign,f
  2258  0420                     l1220:	
  2259  0420  082D               	movf	___ftadd@f2,w
  2260  0421  00F0               	movwf	___ftpack@arg
  2261  0422  082E               	movf	___ftadd@f2+1,w
  2262  0423  00F1               	movwf	___ftpack@arg+1
  2263  0424  082F               	movf	___ftadd@f2+2,w
  2264  0425  00F2               	movwf	___ftpack@arg+2
  2265  0426  0836               	movf	___ftadd@exp1,w
  2266  0427  00B0               	movwf	??___ftadd
  2267  0428  0830               	movf	??___ftadd,w
  2268  0429  00F3               	movwf	___ftpack@exp
  2269  042A  0834               	movf	___ftadd@sign,w
  2270  042B  00B1               	movwf	??___ftadd+1
  2271  042C  0831               	movf	??___ftadd+1,w
  2272  042D  00F4               	movwf	___ftpack@sign
  2273  042E  120A  118A  20B6   	fcall	___ftpack
  2274  0431  0870               	movf	?___ftpack,w
  2275  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0434  00AA               	movwf	?___ftadd
  2278  0435  0871               	movf	?___ftpack+1,w
  2279  0436  00AB               	movwf	?___ftadd+1
  2280  0437  0872               	movf	?___ftpack+2,w
  2281  0438  00AC               	movwf	?___ftadd+2
  2282  0439  0008               	return
  2283  043A                     __end_of___ftadd:	
  2284                           
  2285                           	psect	text7
  2286  0F4E                     __ptext7:	
  2287 ;; *************** function ___attoft *****************
  2288 ;; Defined at:
  2289 ;;		line 37 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\attoft.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  c               3    0[BANK0 ] m
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  sign            1    5[BANK0 ] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  3    0[BANK0 ] float 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0, pclath, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2303 ;;      Params:         0       3       0       0       0
  2304 ;;      Locals:         0       1       0       0       0
  2305 ;;      Temps:          0       2       0       0       0
  2306 ;;      Totals:         0       6       0       0       0
  2307 ;;Total ram usage:        6 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    1
  2310 ;; This function calls:
  2311 ;;		___ftpack
  2312 ;; This function is called by:
  2313 ;;		_modf
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function ___attoft
  2319  0F4E                     ___attoft:	
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in ___attoft: [wreg+status,2+status,0+pclath+cstack]
  2323  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  2324  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  2325  0F50  01A5               	clrf	___attoft@sign
  2326  0F51  1FA2               	btfss	___attoft@c+2,7
  2327  0F52  2F5D               	goto	l1148
  2328  0F53  09A0               	comf	___attoft@c,f
  2329  0F54  09A1               	comf	___attoft@c+1,f
  2330  0F55  09A2               	comf	___attoft@c+2,f
  2331  0F56  0AA0               	incf	___attoft@c,f
  2332  0F57  1903               	skipnz
  2333  0F58  0AA1               	incf	___attoft@c+1,f
  2334  0F59  1903               	skipnz
  2335  0F5A  0AA2               	incf	___attoft@c+2,f
  2336  0F5B  01A5               	clrf	___attoft@sign
  2337  0F5C  0AA5               	incf	___attoft@sign,f
  2338  0F5D                     l1148:	
  2339  0F5D  0820               	movf	___attoft@c,w
  2340  0F5E  00F0               	movwf	___ftpack@arg
  2341  0F5F  0821               	movf	___attoft@c+1,w
  2342  0F60  00F1               	movwf	___ftpack@arg+1
  2343  0F61  0822               	movf	___attoft@c+2,w
  2344  0F62  00F2               	movwf	___ftpack@arg+2
  2345  0F63  308E               	movlw	142
  2346  0F64  00A3               	movwf	??___attoft
  2347  0F65  0823               	movf	??___attoft,w
  2348  0F66  00F3               	movwf	___ftpack@exp
  2349  0F67  0825               	movf	___attoft@sign,w
  2350  0F68  00A4               	movwf	??___attoft+1
  2351  0F69  0824               	movf	??___attoft+1,w
  2352  0F6A  00F4               	movwf	___ftpack@sign
  2353  0F6B  120A  118A  20B6   	fcall	___ftpack
  2354  0F6E  0870               	movf	?___ftpack,w
  2355  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0F71  00A0               	movwf	?___attoft
  2358  0F72  0871               	movf	?___ftpack+1,w
  2359  0F73  00A1               	movwf	?___attoft+1
  2360  0F74  0872               	movf	?___ftpack+2,w
  2361  0F75  00A2               	movwf	?___attoft+2
  2362  0F76  0008               	return
  2363  0F77                     __end_of___attoft:	
  2364                           
  2365                           	psect	text8
  2366  0260                     __ptext8:	
  2367 ;; *************** function ___ftmul *****************
  2368 ;; Defined at:
  2369 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  f1              3    8[COMMON] float 
  2372 ;;  f2              3   11[COMMON] float 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2375 ;;  sign            1    9[BANK0 ] unsigned char 
  2376 ;;  cntr            1    8[BANK0 ] unsigned char 
  2377 ;;  exp             1    4[BANK0 ] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  3    8[COMMON] float 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0, pclath, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2387 ;;      Params:         6       0       0       0       0
  2388 ;;      Locals:         0       6       0       0       0
  2389 ;;      Temps:          0       4       0       0       0
  2390 ;;      Totals:         6      10       0       0       0
  2391 ;;Total ram usage:       16 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    1
  2394 ;; This function calls:
  2395 ;;		___ftpack
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function ___ftmul
  2403  0260                     ___ftmul:	
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2407  0260  0878               	movf	___ftmul@f1,w
  2408  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0263  00A0               	movwf	??___ftmul
  2411  0264  0879               	movf	___ftmul@f1+1,w
  2412  0265  00A1               	movwf	??___ftmul+1
  2413  0266  087A               	movf	___ftmul@f1+2,w
  2414  0267  00A2               	movwf	??___ftmul+2
  2415  0268  1003               	clrc
  2416  0269  0D21               	rlf	??___ftmul+1,w
  2417  026A  0D22               	rlf	??___ftmul+2,w
  2418  026B  00A3               	movwf	??___ftmul+3
  2419  026C  0823               	movf	??___ftmul+3,w
  2420  026D  00A4               	movwf	___ftmul@exp
  2421  026E  08A4               	movf	___ftmul@exp,f
  2422  026F  1D03               	skipz
  2423  0270  2A78               	goto	l1384
  2424  0271  3000               	movlw	0
  2425  0272  00F8               	movwf	?___ftmul
  2426  0273  3000               	movlw	0
  2427  0274  00F9               	movwf	?___ftmul+1
  2428  0275  3000               	movlw	0
  2429  0276  00FA               	movwf	?___ftmul+2
  2430  0277  0008               	return
  2431  0278                     l1384:	
  2432  0278  087B               	movf	___ftmul@f2,w
  2433  0279  00A0               	movwf	??___ftmul
  2434  027A  087C               	movf	___ftmul@f2+1,w
  2435  027B  00A1               	movwf	??___ftmul+1
  2436  027C  087D               	movf	___ftmul@f2+2,w
  2437  027D  00A2               	movwf	??___ftmul+2
  2438  027E  1003               	clrc
  2439  027F  0D21               	rlf	??___ftmul+1,w
  2440  0280  0D22               	rlf	??___ftmul+2,w
  2441  0281  00A3               	movwf	??___ftmul+3
  2442  0282  0823               	movf	??___ftmul+3,w
  2443  0283  00A9               	movwf	___ftmul@sign
  2444  0284  08A9               	movf	___ftmul@sign,f
  2445  0285  1D03               	skipz
  2446  0286  2A8E               	goto	l1390
  2447  0287  3000               	movlw	0
  2448  0288  00F8               	movwf	?___ftmul
  2449  0289  3000               	movlw	0
  2450  028A  00F9               	movwf	?___ftmul+1
  2451  028B  3000               	movlw	0
  2452  028C  00FA               	movwf	?___ftmul+2
  2453  028D  0008               	return
  2454  028E                     l1390:	
  2455  028E  0829               	movf	___ftmul@sign,w
  2456  028F  3E7B               	addlw	123
  2457  0290  00A0               	movwf	??___ftmul
  2458  0291  0820               	movf	??___ftmul,w
  2459  0292  07A4               	addwf	___ftmul@exp,f
  2460  0293  0878               	movf	___ftmul@f1,w
  2461  0294  00A0               	movwf	??___ftmul
  2462  0295  0879               	movf	___ftmul@f1+1,w
  2463  0296  00A1               	movwf	??___ftmul+1
  2464  0297  087A               	movf	___ftmul@f1+2,w
  2465  0298  00A2               	movwf	??___ftmul+2
  2466  0299  3010               	movlw	16
  2467  029A                     u1475:	
  2468  029A  1003               	clrc
  2469  029B  0CA2               	rrf	??___ftmul+2,f
  2470  029C  0CA1               	rrf	??___ftmul+1,f
  2471  029D  0CA0               	rrf	??___ftmul,f
  2472  029E  3EFF               	addlw	-1
  2473  029F  1D03               	skipz
  2474  02A0  2A9A               	goto	u1475
  2475  02A1  0820               	movf	??___ftmul,w
  2476  02A2  00A3               	movwf	??___ftmul+3
  2477  02A3  0823               	movf	??___ftmul+3,w
  2478  02A4  00A9               	movwf	___ftmul@sign
  2479  02A5  087B               	movf	___ftmul@f2,w
  2480  02A6  00A0               	movwf	??___ftmul
  2481  02A7  087C               	movf	___ftmul@f2+1,w
  2482  02A8  00A1               	movwf	??___ftmul+1
  2483  02A9  087D               	movf	___ftmul@f2+2,w
  2484  02AA  00A2               	movwf	??___ftmul+2
  2485  02AB  3010               	movlw	16
  2486  02AC                     u1485:	
  2487  02AC  1003               	clrc
  2488  02AD  0CA2               	rrf	??___ftmul+2,f
  2489  02AE  0CA1               	rrf	??___ftmul+1,f
  2490  02AF  0CA0               	rrf	??___ftmul,f
  2491  02B0  3EFF               	addlw	-1
  2492  02B1  1D03               	skipz
  2493  02B2  2AAC               	goto	u1485
  2494  02B3  0820               	movf	??___ftmul,w
  2495  02B4  00A3               	movwf	??___ftmul+3
  2496  02B5  0823               	movf	??___ftmul+3,w
  2497  02B6  06A9               	xorwf	___ftmul@sign,f
  2498  02B7  3080               	movlw	128
  2499  02B8  00A0               	movwf	??___ftmul
  2500  02B9  0820               	movf	??___ftmul,w
  2501  02BA  05A9               	andwf	___ftmul@sign,f
  2502  02BB  17F9               	bsf	___ftmul@f1+1,7
  2503  02BC  17FC               	bsf	___ftmul@f2+1,7
  2504  02BD  30FF               	movlw	255
  2505  02BE  05FB               	andwf	___ftmul@f2,f
  2506  02BF  30FF               	movlw	255
  2507  02C0  05FC               	andwf	___ftmul@f2+1,f
  2508  02C1  3000               	movlw	0
  2509  02C2  05FD               	andwf	___ftmul@f2+2,f
  2510  02C3  3000               	movlw	0
  2511  02C4  00A5               	movwf	___ftmul@f3_as_product
  2512  02C5  3000               	movlw	0
  2513  02C6  00A6               	movwf	___ftmul@f3_as_product+1
  2514  02C7  3000               	movlw	0
  2515  02C8  00A7               	movwf	___ftmul@f3_as_product+2
  2516  02C9  3007               	movlw	7
  2517  02CA  00A0               	movwf	??___ftmul
  2518  02CB  0820               	movf	??___ftmul,w
  2519  02CC  00A8               	movwf	___ftmul@cntr
  2520  02CD                     l1402:	
  2521  02CD  1C78               	btfss	___ftmul@f1,0
  2522  02CE  2ADD               	goto	l1406
  2523  02CF  087B               	movf	___ftmul@f2,w
  2524  02D0  07A5               	addwf	___ftmul@f3_as_product,f
  2525  02D1  087C               	movf	___ftmul@f2+1,w
  2526  02D2  1103               	clrz
  2527  02D3  1803               	skipnc
  2528  02D4  0A7C               	incf	___ftmul@f2+1,w
  2529  02D5  1D03               	btfss	3,2
  2530  02D6  07A6               	addwf	___ftmul@f3_as_product+1,f
  2531  02D7  087D               	movf	___ftmul@f2+2,w
  2532  02D8  1103               	clrz
  2533  02D9  1803               	skipnc
  2534  02DA  0A7D               	incf	___ftmul@f2+2,w
  2535  02DB  1D03               	btfss	3,2
  2536  02DC  07A7               	addwf	___ftmul@f3_as_product+2,f
  2537  02DD                     l1406:	
  2538  02DD  3001               	movlw	1
  2539  02DE                     u1515:	
  2540  02DE  1003               	clrc
  2541  02DF  0CFA               	rrf	___ftmul@f1+2,f
  2542  02E0  0CF9               	rrf	___ftmul@f1+1,f
  2543  02E1  0CF8               	rrf	___ftmul@f1,f
  2544  02E2  3EFF               	addlw	-1
  2545  02E3  1D03               	skipz
  2546  02E4  2ADE               	goto	u1515
  2547  02E5  3001               	movlw	1
  2548  02E6                     u1525:	
  2549  02E6  1003               	clrc
  2550  02E7  0DFB               	rlf	___ftmul@f2,f
  2551  02E8  0DFC               	rlf	___ftmul@f2+1,f
  2552  02E9  0DFD               	rlf	___ftmul@f2+2,f
  2553  02EA  3EFF               	addlw	-1
  2554  02EB  1D03               	skipz
  2555  02EC  2AE6               	goto	u1525
  2556  02ED  3001               	movlw	1
  2557  02EE  02A8               	subwf	___ftmul@cntr,f
  2558  02EF  1D03               	btfss	3,2
  2559  02F0  2ACD               	goto	l1402
  2560  02F1  3009               	movlw	9
  2561  02F2  00A0               	movwf	??___ftmul
  2562  02F3  0820               	movf	??___ftmul,w
  2563  02F4  00A8               	movwf	___ftmul@cntr
  2564  02F5                     l1414:	
  2565  02F5  1C78               	btfss	___ftmul@f1,0
  2566  02F6  2B05               	goto	l1418
  2567  02F7  087B               	movf	___ftmul@f2,w
  2568  02F8  07A5               	addwf	___ftmul@f3_as_product,f
  2569  02F9  087C               	movf	___ftmul@f2+1,w
  2570  02FA  1103               	clrz
  2571  02FB  1803               	skipnc
  2572  02FC  0A7C               	incf	___ftmul@f2+1,w
  2573  02FD  1D03               	btfss	3,2
  2574  02FE  07A6               	addwf	___ftmul@f3_as_product+1,f
  2575  02FF  087D               	movf	___ftmul@f2+2,w
  2576  0300  1103               	clrz
  2577  0301  1803               	skipnc
  2578  0302  0A7D               	incf	___ftmul@f2+2,w
  2579  0303  1D03               	btfss	3,2
  2580  0304  07A7               	addwf	___ftmul@f3_as_product+2,f
  2581  0305                     l1418:	
  2582  0305  3001               	movlw	1
  2583  0306                     u1565:	
  2584  0306  1003               	clrc
  2585  0307  0CFA               	rrf	___ftmul@f1+2,f
  2586  0308  0CF9               	rrf	___ftmul@f1+1,f
  2587  0309  0CF8               	rrf	___ftmul@f1,f
  2588  030A  3EFF               	addlw	-1
  2589  030B  1D03               	skipz
  2590  030C  2B06               	goto	u1565
  2591  030D  3001               	movlw	1
  2592  030E                     u1575:	
  2593  030E  1003               	clrc
  2594  030F  0CA7               	rrf	___ftmul@f3_as_product+2,f
  2595  0310  0CA6               	rrf	___ftmul@f3_as_product+1,f
  2596  0311  0CA5               	rrf	___ftmul@f3_as_product,f
  2597  0312  3EFF               	addlw	-1
  2598  0313  1D03               	skipz
  2599  0314  2B0E               	goto	u1575
  2600  0315  3001               	movlw	1
  2601  0316  02A8               	subwf	___ftmul@cntr,f
  2602  0317  1D03               	btfss	3,2
  2603  0318  2AF5               	goto	l1414
  2604  0319  0825               	movf	___ftmul@f3_as_product,w
  2605  031A  00F0               	movwf	___ftpack@arg
  2606  031B  0826               	movf	___ftmul@f3_as_product+1,w
  2607  031C  00F1               	movwf	___ftpack@arg+1
  2608  031D  0827               	movf	___ftmul@f3_as_product+2,w
  2609  031E  00F2               	movwf	___ftpack@arg+2
  2610  031F  0824               	movf	___ftmul@exp,w
  2611  0320  00A0               	movwf	??___ftmul
  2612  0321  0820               	movf	??___ftmul,w
  2613  0322  00F3               	movwf	___ftpack@exp
  2614  0323  0829               	movf	___ftmul@sign,w
  2615  0324  00A1               	movwf	??___ftmul+1
  2616  0325  0821               	movf	??___ftmul+1,w
  2617  0326  00F4               	movwf	___ftpack@sign
  2618  0327  120A  118A  20B6   	fcall	___ftpack
  2619  032A  0870               	movf	?___ftpack,w
  2620  032B  00F8               	movwf	?___ftmul
  2621  032C  0871               	movf	?___ftpack+1,w
  2622  032D  00F9               	movwf	?___ftmul+1
  2623  032E  0872               	movf	?___ftpack+2,w
  2624  032F  00FA               	movwf	?___ftmul+2
  2625  0330  0008               	return
  2626  0331                     __end_of___ftmul:	
  2627                           
  2628                           	psect	text9
  2629  01AA                     __ptext9:	
  2630 ;; *************** function ___ftdiv *****************
  2631 ;; Defined at:
  2632 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  f2              3    8[COMMON] float 
  2635 ;;  f1              3   11[COMMON] float 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  f3              3    5[BANK0 ] float 
  2638 ;;  sign            1    9[BANK0 ] unsigned char 
  2639 ;;  exp             1    8[BANK0 ] unsigned char 
  2640 ;;  cntr            1    4[BANK0 ] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  3    8[COMMON] float 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0, pclath, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2650 ;;      Params:         6       0       0       0       0
  2651 ;;      Locals:         0       6       0       0       0
  2652 ;;      Temps:          0       4       0       0       0
  2653 ;;      Totals:         6      10       0       0       0
  2654 ;;Total ram usage:       16 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    1
  2657 ;; This function calls:
  2658 ;;		___ftpack
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function ___ftdiv
  2666  01AA                     ___ftdiv:	
  2667                           
  2668                           ;incstack = 0
  2669                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2670  01AA  087B               	movf	___ftdiv@f1,w
  2671  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2672  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2673  01AD  00A0               	movwf	??___ftdiv
  2674  01AE  087C               	movf	___ftdiv@f1+1,w
  2675  01AF  00A1               	movwf	??___ftdiv+1
  2676  01B0  087D               	movf	___ftdiv@f1+2,w
  2677  01B1  00A2               	movwf	??___ftdiv+2
  2678  01B2  1003               	clrc
  2679  01B3  0D21               	rlf	??___ftdiv+1,w
  2680  01B4  0D22               	rlf	??___ftdiv+2,w
  2681  01B5  00A3               	movwf	??___ftdiv+3
  2682  01B6  0823               	movf	??___ftdiv+3,w
  2683  01B7  00A8               	movwf	___ftdiv@exp
  2684  01B8  08A8               	movf	___ftdiv@exp,f
  2685  01B9  1D03               	skipz
  2686  01BA  29C2               	goto	l1342
  2687  01BB  3000               	movlw	0
  2688  01BC  00F8               	movwf	?___ftdiv
  2689  01BD  3000               	movlw	0
  2690  01BE  00F9               	movwf	?___ftdiv+1
  2691  01BF  3000               	movlw	0
  2692  01C0  00FA               	movwf	?___ftdiv+2
  2693  01C1  0008               	return
  2694  01C2                     l1342:	
  2695  01C2  0878               	movf	___ftdiv@f2,w
  2696  01C3  00A0               	movwf	??___ftdiv
  2697  01C4  0879               	movf	___ftdiv@f2+1,w
  2698  01C5  00A1               	movwf	??___ftdiv+1
  2699  01C6  087A               	movf	___ftdiv@f2+2,w
  2700  01C7  00A2               	movwf	??___ftdiv+2
  2701  01C8  1003               	clrc
  2702  01C9  0D21               	rlf	??___ftdiv+1,w
  2703  01CA  0D22               	rlf	??___ftdiv+2,w
  2704  01CB  00A3               	movwf	??___ftdiv+3
  2705  01CC  0823               	movf	??___ftdiv+3,w
  2706  01CD  00A9               	movwf	___ftdiv@sign
  2707  01CE  08A9               	movf	___ftdiv@sign,f
  2708  01CF  1D03               	skipz
  2709  01D0  29D8               	goto	l1348
  2710  01D1  3000               	movlw	0
  2711  01D2  00F8               	movwf	?___ftdiv
  2712  01D3  3000               	movlw	0
  2713  01D4  00F9               	movwf	?___ftdiv+1
  2714  01D5  3000               	movlw	0
  2715  01D6  00FA               	movwf	?___ftdiv+2
  2716  01D7  0008               	return
  2717  01D8                     l1348:	
  2718  01D8  3000               	movlw	0
  2719  01D9  00A5               	movwf	___ftdiv@f3
  2720  01DA  3000               	movlw	0
  2721  01DB  00A6               	movwf	___ftdiv@f3+1
  2722  01DC  3000               	movlw	0
  2723  01DD  00A7               	movwf	___ftdiv@f3+2
  2724  01DE  3089               	movlw	137
  2725  01DF  0729               	addwf	___ftdiv@sign,w
  2726  01E0  00A0               	movwf	??___ftdiv
  2727  01E1  0820               	movf	??___ftdiv,w
  2728  01E2  02A8               	subwf	___ftdiv@exp,f
  2729  01E3  087B               	movf	___ftdiv@f1,w
  2730  01E4  00A0               	movwf	??___ftdiv
  2731  01E5  087C               	movf	___ftdiv@f1+1,w
  2732  01E6  00A1               	movwf	??___ftdiv+1
  2733  01E7  087D               	movf	___ftdiv@f1+2,w
  2734  01E8  00A2               	movwf	??___ftdiv+2
  2735  01E9  3010               	movlw	16
  2736  01EA                     u1395:	
  2737  01EA  1003               	clrc
  2738  01EB  0CA2               	rrf	??___ftdiv+2,f
  2739  01EC  0CA1               	rrf	??___ftdiv+1,f
  2740  01ED  0CA0               	rrf	??___ftdiv,f
  2741  01EE  3EFF               	addlw	-1
  2742  01EF  1D03               	skipz
  2743  01F0  29EA               	goto	u1395
  2744  01F1  0820               	movf	??___ftdiv,w
  2745  01F2  00A3               	movwf	??___ftdiv+3
  2746  01F3  0823               	movf	??___ftdiv+3,w
  2747  01F4  00A9               	movwf	___ftdiv@sign
  2748  01F5  0878               	movf	___ftdiv@f2,w
  2749  01F6  00A0               	movwf	??___ftdiv
  2750  01F7  0879               	movf	___ftdiv@f2+1,w
  2751  01F8  00A1               	movwf	??___ftdiv+1
  2752  01F9  087A               	movf	___ftdiv@f2+2,w
  2753  01FA  00A2               	movwf	??___ftdiv+2
  2754  01FB  3010               	movlw	16
  2755  01FC                     u1405:	
  2756  01FC  1003               	clrc
  2757  01FD  0CA2               	rrf	??___ftdiv+2,f
  2758  01FE  0CA1               	rrf	??___ftdiv+1,f
  2759  01FF  0CA0               	rrf	??___ftdiv,f
  2760  0200  3EFF               	addlw	-1
  2761  0201  1D03               	skipz
  2762  0202  29FC               	goto	u1405
  2763  0203  0820               	movf	??___ftdiv,w
  2764  0204  00A3               	movwf	??___ftdiv+3
  2765  0205  0823               	movf	??___ftdiv+3,w
  2766  0206  06A9               	xorwf	___ftdiv@sign,f
  2767  0207  3080               	movlw	128
  2768  0208  00A0               	movwf	??___ftdiv
  2769  0209  0820               	movf	??___ftdiv,w
  2770  020A  05A9               	andwf	___ftdiv@sign,f
  2771  020B  17FC               	bsf	___ftdiv@f1+1,7
  2772  020C  30FF               	movlw	255
  2773  020D  05FB               	andwf	___ftdiv@f1,f
  2774  020E  30FF               	movlw	255
  2775  020F  05FC               	andwf	___ftdiv@f1+1,f
  2776  0210  3000               	movlw	0
  2777  0211  05FD               	andwf	___ftdiv@f1+2,f
  2778  0212  17F9               	bsf	___ftdiv@f2+1,7
  2779  0213  30FF               	movlw	255
  2780  0214  05F8               	andwf	___ftdiv@f2,f
  2781  0215  30FF               	movlw	255
  2782  0216  05F9               	andwf	___ftdiv@f2+1,f
  2783  0217  3000               	movlw	0
  2784  0218  05FA               	andwf	___ftdiv@f2+2,f
  2785  0219  3018               	movlw	24
  2786  021A  00A0               	movwf	??___ftdiv
  2787  021B  0820               	movf	??___ftdiv,w
  2788  021C  00A4               	movwf	___ftdiv@cntr
  2789  021D                     l1362:	
  2790  021D  3001               	movlw	1
  2791  021E                     u1415:	
  2792  021E  1003               	clrc
  2793  021F  0DA5               	rlf	___ftdiv@f3,f
  2794  0220  0DA6               	rlf	___ftdiv@f3+1,f
  2795  0221  0DA7               	rlf	___ftdiv@f3+2,f
  2796  0222  3EFF               	addlw	-1
  2797  0223  1D03               	skipz
  2798  0224  2A1E               	goto	u1415
  2799  0225  087A               	movf	___ftdiv@f2+2,w
  2800  0226  027D               	subwf	___ftdiv@f1+2,w
  2801  0227  1D03               	skipz
  2802  0228  2A2F               	goto	u1425
  2803  0229  0879               	movf	___ftdiv@f2+1,w
  2804  022A  027C               	subwf	___ftdiv@f1+1,w
  2805  022B  1D03               	skipz
  2806  022C  2A2F               	goto	u1425
  2807  022D  0878               	movf	___ftdiv@f2,w
  2808  022E  027B               	subwf	___ftdiv@f1,w
  2809  022F                     u1425:	
  2810  022F  1C03               	skipc
  2811  0230  2A3C               	goto	l1370
  2812  0231  0878               	movf	___ftdiv@f2,w
  2813  0232  02FB               	subwf	___ftdiv@f1,f
  2814  0233  0879               	movf	___ftdiv@f2+1,w
  2815  0234  1C03               	skipc
  2816  0235  0F79               	incfsz	___ftdiv@f2+1,w
  2817  0236  02FC               	subwf	___ftdiv@f1+1,f
  2818  0237  087A               	movf	___ftdiv@f2+2,w
  2819  0238  1C03               	skipc
  2820  0239  0A7A               	incf	___ftdiv@f2+2,w
  2821  023A  02FD               	subwf	___ftdiv@f1+2,f
  2822  023B  1425               	bsf	___ftdiv@f3,0
  2823  023C                     l1370:	
  2824  023C  3001               	movlw	1
  2825  023D                     u1435:	
  2826  023D  1003               	clrc
  2827  023E  0DFB               	rlf	___ftdiv@f1,f
  2828  023F  0DFC               	rlf	___ftdiv@f1+1,f
  2829  0240  0DFD               	rlf	___ftdiv@f1+2,f
  2830  0241  3EFF               	addlw	-1
  2831  0242  1D03               	skipz
  2832  0243  2A3D               	goto	u1435
  2833  0244  3001               	movlw	1
  2834  0245  02A4               	subwf	___ftdiv@cntr,f
  2835  0246  1D03               	btfss	3,2
  2836  0247  2A1D               	goto	l1362
  2837  0248  0825               	movf	___ftdiv@f3,w
  2838  0249  00F0               	movwf	___ftpack@arg
  2839  024A  0826               	movf	___ftdiv@f3+1,w
  2840  024B  00F1               	movwf	___ftpack@arg+1
  2841  024C  0827               	movf	___ftdiv@f3+2,w
  2842  024D  00F2               	movwf	___ftpack@arg+2
  2843  024E  0828               	movf	___ftdiv@exp,w
  2844  024F  00A0               	movwf	??___ftdiv
  2845  0250  0820               	movf	??___ftdiv,w
  2846  0251  00F3               	movwf	___ftpack@exp
  2847  0252  0829               	movf	___ftdiv@sign,w
  2848  0253  00A1               	movwf	??___ftdiv+1
  2849  0254  0821               	movf	??___ftdiv+1,w
  2850  0255  00F4               	movwf	___ftpack@sign
  2851  0256  120A  118A  20B6   	fcall	___ftpack
  2852  0259  0870               	movf	?___ftpack,w
  2853  025A  00F8               	movwf	?___ftdiv
  2854  025B  0871               	movf	?___ftpack+1,w
  2855  025C  00F9               	movwf	?___ftdiv+1
  2856  025D  0872               	movf	?___ftpack+2,w
  2857  025E  00FA               	movwf	?___ftdiv+2
  2858  025F  0008               	return
  2859  0260                     __end_of___ftdiv:	
  2860                           
  2861                           	psect	text10
  2862  00B6                     __ptext10:	
  2863 ;; *************** function ___ftpack *****************
  2864 ;; Defined at:
  2865 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  arg             3    0[COMMON] unsigned um
  2868 ;;  exp             1    3[COMMON] unsigned char 
  2869 ;;  sign            1    4[COMMON] unsigned char 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  3    0[COMMON] float 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         5       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0
  2883 ;;      Temps:          3       0       0       0       0
  2884 ;;      Totals:         8       0       0       0       0
  2885 ;;Total ram usage:        8 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		___attoft
  2891 ;;		___ftadd
  2892 ;;		___ftdiv
  2893 ;;		___ftmul
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function ___ftpack
  2899  00B6                     ___ftpack:	
  2900                           
  2901                           ;incstack = 0
  2902                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2903  00B6  0873               	movf	___ftpack@exp,w
  2904  00B7  1903               	btfsc	3,2
  2905  00B8  28BE               	goto	l1086
  2906  00B9  0872               	movf	___ftpack@arg+2,w
  2907  00BA  0471               	iorwf	___ftpack@arg+1,w
  2908  00BB  0470               	iorwf	___ftpack@arg,w
  2909  00BC  1D03               	skipz
  2910  00BD  28D1               	goto	l1092
  2911  00BE                     l1086:	
  2912  00BE  3000               	movlw	0
  2913  00BF  00F0               	movwf	?___ftpack
  2914  00C0  3000               	movlw	0
  2915  00C1  00F1               	movwf	?___ftpack+1
  2916  00C2  3000               	movlw	0
  2917  00C3  00F2               	movwf	?___ftpack+2
  2918  00C4  0008               	return
  2919  00C5                     l1090:	
  2920  00C5  3001               	movlw	1
  2921  00C6  00F5               	movwf	??___ftpack
  2922  00C7  0875               	movf	??___ftpack,w
  2923  00C8  07F3               	addwf	___ftpack@exp,f
  2924  00C9  3001               	movlw	1
  2925  00CA                     u865:	
  2926  00CA  1003               	clrc
  2927  00CB  0CF2               	rrf	___ftpack@arg+2,f
  2928  00CC  0CF1               	rrf	___ftpack@arg+1,f
  2929  00CD  0CF0               	rrf	___ftpack@arg,f
  2930  00CE  3EFF               	addlw	-1
  2931  00CF  1D03               	skipz
  2932  00D0  28CA               	goto	u865
  2933  00D1                     l1092:	
  2934  00D1  30FE               	movlw	254
  2935  00D2  0572               	andwf	___ftpack@arg+2,w
  2936  00D3  1903               	btfsc	3,2
  2937  00D4  28EC               	goto	l342
  2938  00D5  28C5               	goto	l1090
  2939  00D6                     l1094:	
  2940  00D6  3001               	movlw	1
  2941  00D7  00F5               	movwf	??___ftpack
  2942  00D8  0875               	movf	??___ftpack,w
  2943  00D9  07F3               	addwf	___ftpack@exp,f
  2944  00DA  3001               	movlw	1
  2945  00DB  07F0               	addwf	___ftpack@arg,f
  2946  00DC  3000               	movlw	0
  2947  00DD  1803               	skipnc
  2948  00DE  3001               	movlw	1
  2949  00DF  07F1               	addwf	___ftpack@arg+1,f
  2950  00E0  3000               	movlw	0
  2951  00E1  1803               	skipnc
  2952  00E2  3001               	movlw	1
  2953  00E3  07F2               	addwf	___ftpack@arg+2,f
  2954  00E4  3001               	movlw	1
  2955  00E5                     u885:	
  2956  00E5  1003               	clrc
  2957  00E6  0CF2               	rrf	___ftpack@arg+2,f
  2958  00E7  0CF1               	rrf	___ftpack@arg+1,f
  2959  00E8  0CF0               	rrf	___ftpack@arg,f
  2960  00E9  3EFF               	addlw	-1
  2961  00EA  1D03               	skipz
  2962  00EB  28E5               	goto	u885
  2963  00EC                     l342:	
  2964  00EC  30FF               	movlw	255
  2965  00ED  0572               	andwf	___ftpack@arg+2,w
  2966  00EE  1903               	btfsc	3,2
  2967  00EF  28FB               	goto	l1102
  2968  00F0  28D6               	goto	l1094
  2969  00F1                     l1100:	
  2970  00F1  3001               	movlw	1
  2971  00F2  02F3               	subwf	___ftpack@exp,f
  2972  00F3  3001               	movlw	1
  2973  00F4                     u905:	
  2974  00F4  1003               	clrc
  2975  00F5  0DF0               	rlf	___ftpack@arg,f
  2976  00F6  0DF1               	rlf	___ftpack@arg+1,f
  2977  00F7  0DF2               	rlf	___ftpack@arg+2,f
  2978  00F8  3EFF               	addlw	-1
  2979  00F9  1D03               	skipz
  2980  00FA  28F4               	goto	u905
  2981  00FB                     l1102:	
  2982  00FB  1FF1               	btfss	___ftpack@arg+1,7
  2983  00FC  28F1               	goto	l1100
  2984  00FD  1873               	btfsc	___ftpack@exp,0
  2985  00FE  2905               	goto	l348
  2986  00FF  30FF               	movlw	255
  2987  0100  05F0               	andwf	___ftpack@arg,f
  2988  0101  307F               	movlw	127
  2989  0102  05F1               	andwf	___ftpack@arg+1,f
  2990  0103  30FF               	movlw	255
  2991  0104  05F2               	andwf	___ftpack@arg+2,f
  2992  0105                     l348:	
  2993  0105  1003               	clrc
  2994  0106  0CF3               	rrf	___ftpack@exp,f
  2995  0107  0873               	movf	___ftpack@exp,w
  2996  0108  00F5               	movwf	??___ftpack
  2997  0109  01F6               	clrf	??___ftpack+1
  2998  010A  01F7               	clrf	??___ftpack+2
  2999  010B  3010               	movlw	16
  3000  010C                     u935:	
  3001  010C  1003               	clrc
  3002  010D  0DF5               	rlf	??___ftpack,f
  3003  010E  0DF6               	rlf	??___ftpack+1,f
  3004  010F  0DF7               	rlf	??___ftpack+2,f
  3005  0110  3EFF               	addlw	-1
  3006  0111  1D03               	skipz
  3007  0112  290C               	goto	u935
  3008  0113  0875               	movf	??___ftpack,w
  3009  0114  04F0               	iorwf	___ftpack@arg,f
  3010  0115  0876               	movf	??___ftpack+1,w
  3011  0116  04F1               	iorwf	___ftpack@arg+1,f
  3012  0117  0877               	movf	??___ftpack+2,w
  3013  0118  04F2               	iorwf	___ftpack@arg+2,f
  3014  0119  0874               	movf	___ftpack@sign,w
  3015  011A  1903               	btfsc	3,2
  3016  011B  0008               	return
  3017  011C  17F2               	bsf	___ftpack@arg+2,7
  3018  011D  0008               	return
  3019  011E                     __end_of___ftpack:	
  3020                           
  3021                           	psect	text11
  3022  0F2C                     __ptext11:	
  3023 ;; *************** function _Lcd_Write_String *****************
  3024 ;; Defined at:
  3025 ;;		line 116 in file "lcd.h"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  a               1    wreg     PTR unsigned char 
  3028 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  3029 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  3030 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  3031 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  3032 ;;		 -> STR_6(11), STR_5(6), STR_4(2), STR_3(7), 
  3033 ;;		 -> STR_2(15), STR_1(18), 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  a               1    7[COMMON] PTR unsigned char 
  3036 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  3037 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  3038 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  3039 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  3040 ;;		 -> STR_6(11), STR_5(6), STR_4(2), STR_3(7), 
  3041 ;;		 -> STR_2(15), STR_1(18), 
  3042 ;;  i               2    5[COMMON] int 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;		None               void
  3045 ;; Registers used:
  3046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3052 ;;      Params:         0       0       0       0       0
  3053 ;;      Locals:         3       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0
  3055 ;;      Totals:         3       0       0       0       0
  3056 ;;Total ram usage:        3 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    2
  3059 ;; This function calls:
  3060 ;;		_Lcd_Write_Char
  3061 ;; This function is called by:
  3062 ;;		_main
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _Lcd_Write_String
  3068  0F2C                     _Lcd_Write_String:	
  3069                           
  3070                           ;incstack = 0
  3071                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3072                           ;Lcd_Write_String@a stored from wreg
  3073  0F2C  00F7               	movwf	Lcd_Write_String@a
  3074                           
  3075                           ;lcd.h: 119: int i;
  3076                           ;lcd.h: 120: for(i=0;a[i]!='\0';i++)
  3077  0F2D  01F5               	clrf	Lcd_Write_String@i
  3078  0F2E  01F6               	clrf	Lcd_Write_String@i+1
  3079  0F2F                     l1326:	
  3080  0F2F  0875               	movf	Lcd_Write_String@i,w
  3081  0F30  0777               	addwf	Lcd_Write_String@a,w
  3082  0F31  0084               	movwf	4
  3083  0F32  120A  158A  2000  120A  158A  	fcall	stringdir
  3084  0F37  3800               	iorlw	0
  3085  0F38  1903               	btfsc	3,2
  3086  0F39  0008               	return
  3087                           
  3088                           ;lcd.h: 121: Lcd_Write_Char(a[i]);
  3089  0F3A  0875               	movf	Lcd_Write_String@i,w
  3090  0F3B  0777               	addwf	Lcd_Write_String@a,w
  3091  0F3C  0084               	movwf	4
  3092  0F3D  120A  158A  2000  120A  158A  	fcall	stringdir
  3093  0F42  120A  158A  2777  120A  158A  	fcall	_Lcd_Write_Char
  3094  0F47  3001               	movlw	1
  3095  0F48  07F5               	addwf	Lcd_Write_String@i,f
  3096  0F49  1803               	skipnc
  3097  0F4A  0AF6               	incf	Lcd_Write_String@i+1,f
  3098  0F4B  3000               	movlw	0
  3099  0F4C  07F6               	addwf	Lcd_Write_String@i+1,f
  3100  0F4D  2F2F               	goto	l1326
  3101  0F4E                     __end_of_Lcd_Write_String:	
  3102                           
  3103                           	psect	text12
  3104  0F77                     __ptext12:	
  3105 ;; *************** function _Lcd_Write_Char *****************
  3106 ;; Defined at:
  3107 ;;		line 99 in file "lcd.h"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  a               1    wreg     unsigned char 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  a               1    4[COMMON] unsigned char 
  3112 ;;  y               1    3[COMMON] unsigned char 
  3113 ;;  temp            1    2[COMMON] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;		None               void
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, pclath, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         0       0       0       0       0
  3124 ;;      Locals:         3       0       0       0       0
  3125 ;;      Temps:          1       0       0       0       0
  3126 ;;      Totals:         4       0       0       0       0
  3127 ;;Total ram usage:        4 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    1
  3130 ;; This function calls:
  3131 ;;		_Lcd_Port
  3132 ;; This function is called by:
  3133 ;;		_Lcd_Write_String
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           
  3139                           ;psect for function _Lcd_Write_Char
  3140  0F77                     _Lcd_Write_Char:	
  3141                           
  3142                           ;incstack = 0
  3143                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3144                           ;Lcd_Write_Char@a stored from wreg
  3145  0F77  00F4               	movwf	Lcd_Write_Char@a
  3146                           
  3147                           ;lcd.h: 102: char temp,y;
  3148                           ;lcd.h: 103: temp = a&0x0F;
  3149  0F78  0874               	movf	Lcd_Write_Char@a,w
  3150  0F79  390F               	andlw	15
  3151  0F7A  00F1               	movwf	??_Lcd_Write_Char
  3152  0F7B  0871               	movf	??_Lcd_Write_Char,w
  3153  0F7C  00F2               	movwf	Lcd_Write_Char@temp
  3154                           
  3155                           ;lcd.h: 104: y = a&0xF0;
  3156  0F7D  0874               	movf	Lcd_Write_Char@a,w
  3157  0F7E  39F0               	andlw	240
  3158  0F7F  00F1               	movwf	??_Lcd_Write_Char
  3159  0F80  0871               	movf	??_Lcd_Write_Char,w
  3160  0F81  00F3               	movwf	Lcd_Write_Char@y
  3161                           
  3162                           ;lcd.h: 105: RD1 = 1;
  3163  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0F84  1488               	bsf	8,1	;volatile
  3166                           
  3167                           ;lcd.h: 106: Lcd_Port(y>>4);
  3168  0F85  0873               	movf	Lcd_Write_Char@y,w
  3169  0F86  00F1               	movwf	??_Lcd_Write_Char
  3170  0F87  3004               	movlw	4
  3171  0F88                     u955:	
  3172  0F88  1003               	clrc
  3173  0F89  0CF1               	rrf	??_Lcd_Write_Char,f
  3174  0F8A  3EFF               	addlw	-1
  3175  0F8B  1D03               	skipz
  3176  0F8C  2F88               	goto	u955
  3177  0F8D  0871               	movf	??_Lcd_Write_Char,w
  3178  0F8E  120A  158A  26F8  120A  158A  	fcall	_Lcd_Port
  3179                           
  3180                           ;lcd.h: 107: RD0 = 1;
  3181  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0F95  1408               	bsf	8,0	;volatile
  3184                           
  3185                           ;lcd.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3186  0F96  301A               	movlw	26
  3187  0F97  00F1               	movwf	??_Lcd_Write_Char
  3188  0F98                     u1887:	
  3189  0F98  0BF1               	decfsz	??_Lcd_Write_Char,f
  3190  0F99  2F98               	goto	u1887
  3191  0F9A  0000               	nop
  3192                           
  3193                           ;lcd.h: 109: RD0 = 0;
  3194  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  3196  0F9D  1008               	bcf	8,0	;volatile
  3197                           
  3198                           ;lcd.h: 110: Lcd_Port(temp);
  3199  0F9E  0872               	movf	Lcd_Write_Char@temp,w
  3200  0F9F  120A  158A  26F8  120A  158A  	fcall	_Lcd_Port
  3201                           
  3202                           ;lcd.h: 111: RD0 = 1;
  3203  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0FA6  1408               	bsf	8,0	;volatile
  3206                           
  3207                           ;lcd.h: 112: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3208  0FA7  301A               	movlw	26
  3209  0FA8  00F1               	movwf	??_Lcd_Write_Char
  3210  0FA9                     u1897:	
  3211  0FA9  0BF1               	decfsz	??_Lcd_Write_Char,f
  3212  0FAA  2FA9               	goto	u1897
  3213  0FAB  0000               	nop
  3214                           
  3215                           ;lcd.h: 113: RD0 = 0;
  3216  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0FAE  1008               	bcf	8,0	;volatile
  3219  0FAF  0008               	return
  3220  0FB0                     __end_of_Lcd_Write_Char:	
  3221                           
  3222                           	psect	text13
  3223  0004                     __ptext13:	
  3224 ;; *************** function _Lcd_Set_Cursor *****************
  3225 ;; Defined at:
  3226 ;;		line 58 in file "lcd.h"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  a               1    wreg     unsigned char 
  3229 ;;  b               1    4[COMMON] unsigned char 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  a               1    7[COMMON] unsigned char 
  3232 ;;  temp            2   12[COMMON] int 
  3233 ;;  y               2   10[COMMON] int 
  3234 ;;  z               2    8[COMMON] int 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;		None               void
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         1       0       0       0       0
  3245 ;;      Locals:         7       0       0       0       0
  3246 ;;      Temps:          2       0       0       0       0
  3247 ;;      Totals:        10       0       0       0       0
  3248 ;;Total ram usage:       10 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    2
  3251 ;; This function calls:
  3252 ;;		_Lcd_Cmd
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           
  3259                           ;psect for function _Lcd_Set_Cursor
  3260  0004                     _Lcd_Set_Cursor:	
  3261                           
  3262                           ;incstack = 0
  3263                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3264                           ;Lcd_Set_Cursor@a stored from wreg
  3265  0004  00F7               	movwf	Lcd_Set_Cursor@a
  3266                           
  3267                           ;lcd.h: 60: int temp,z,y;
  3268                           ;lcd.h: 61: if(a == 1)
  3269  0005  0877               	movf	Lcd_Set_Cursor@a,w
  3270  0006  3A01               	xorlw	1
  3271  0007  1D03               	skipz
  3272  0008  2830               	goto	l1298
  3273                           
  3274                           ;lcd.h: 62: {
  3275                           ;lcd.h: 63: temp = 0x80 + b - 1;
  3276  0009  0874               	movf	Lcd_Set_Cursor@b,w
  3277  000A  3E7F               	addlw	127
  3278  000B  00FC               	movwf	Lcd_Set_Cursor@temp
  3279  000C  3000               	movlw	0
  3280  000D  1803               	skipnc
  3281  000E  3001               	movlw	1
  3282  000F  00FD               	movwf	Lcd_Set_Cursor@temp+1
  3283                           
  3284                           ;lcd.h: 64: z = temp>>4;
  3285  0010  087D               	movf	Lcd_Set_Cursor@temp+1,w
  3286  0011  00F6               	movwf	??_Lcd_Set_Cursor+1
  3287  0012  087C               	movf	Lcd_Set_Cursor@temp,w
  3288  0013  00F5               	movwf	??_Lcd_Set_Cursor
  3289  0014  3004               	movlw	4
  3290  0015  00FF               	movwf	127
  3291  0016                     u1335:	
  3292  0016  0D76               	rlf	??_Lcd_Set_Cursor+1,w
  3293  0017  0CF6               	rrf	??_Lcd_Set_Cursor+1,f
  3294  0018  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3295  0019  0BFF               	decfsz	127,f
  3296  001A  2816               	goto	u1335
  3297  001B  0875               	movf	??_Lcd_Set_Cursor,w
  3298  001C  00F8               	movwf	Lcd_Set_Cursor@z
  3299  001D  0876               	movf	??_Lcd_Set_Cursor+1,w
  3300  001E  00F9               	movwf	Lcd_Set_Cursor@z+1
  3301                           
  3302                           ;lcd.h: 65: y = temp & 0x0F;
  3303  001F  300F               	movlw	15
  3304  0020  057C               	andwf	Lcd_Set_Cursor@temp,w
  3305  0021  00FA               	movwf	Lcd_Set_Cursor@y
  3306  0022  3000               	movlw	0
  3307  0023  057D               	andwf	Lcd_Set_Cursor@temp+1,w
  3308  0024  00FB               	movwf	Lcd_Set_Cursor@y+1
  3309                           
  3310                           ;lcd.h: 66: Lcd_Cmd(z);
  3311  0025  0878               	movf	Lcd_Set_Cursor@z,w
  3312  0026  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3313                           
  3314                           ;lcd.h: 67: Lcd_Cmd(y);
  3315  002B  087A               	movf	Lcd_Set_Cursor@y,w
  3316  002C  120A  158A  2712   	fcall	_Lcd_Cmd
  3317                           
  3318                           ;lcd.h: 68: }
  3319  002F  0008               	return
  3320  0030                     l1298:	
  3321                           
  3322                           ;lcd.h: 69: else if(a == 2)
  3323  0030  0877               	movf	Lcd_Set_Cursor@a,w
  3324  0031  3A02               	xorlw	2
  3325  0032  1D03               	skipz
  3326  0033  0008               	return
  3327                           
  3328                           ;lcd.h: 70: {
  3329                           ;lcd.h: 71: temp = 0xC0 + b - 1;
  3330  0034  0874               	movf	Lcd_Set_Cursor@b,w
  3331  0035  3EBF               	addlw	191
  3332  0036  00FC               	movwf	Lcd_Set_Cursor@temp
  3333  0037  3000               	movlw	0
  3334  0038  1803               	skipnc
  3335  0039  3001               	movlw	1
  3336  003A  00FD               	movwf	Lcd_Set_Cursor@temp+1
  3337                           
  3338                           ;lcd.h: 72: z = temp>>4;
  3339  003B  087D               	movf	Lcd_Set_Cursor@temp+1,w
  3340  003C  00F6               	movwf	??_Lcd_Set_Cursor+1
  3341  003D  087C               	movf	Lcd_Set_Cursor@temp,w
  3342  003E  00F5               	movwf	??_Lcd_Set_Cursor
  3343  003F  3004               	movlw	4
  3344  0040  00FF               	movwf	127
  3345  0041                     u1355:	
  3346  0041  0D76               	rlf	??_Lcd_Set_Cursor+1,w
  3347  0042  0CF6               	rrf	??_Lcd_Set_Cursor+1,f
  3348  0043  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3349  0044  0BFF               	decfsz	127,f
  3350  0045  2841               	goto	u1355
  3351  0046  0875               	movf	??_Lcd_Set_Cursor,w
  3352  0047  00F8               	movwf	Lcd_Set_Cursor@z
  3353  0048  0876               	movf	??_Lcd_Set_Cursor+1,w
  3354  0049  00F9               	movwf	Lcd_Set_Cursor@z+1
  3355                           
  3356                           ;lcd.h: 73: y = temp & 0x0F;
  3357  004A  300F               	movlw	15
  3358  004B  057C               	andwf	Lcd_Set_Cursor@temp,w
  3359  004C  00FA               	movwf	Lcd_Set_Cursor@y
  3360  004D  3000               	movlw	0
  3361  004E  057D               	andwf	Lcd_Set_Cursor@temp+1,w
  3362  004F  00FB               	movwf	Lcd_Set_Cursor@y+1
  3363                           
  3364                           ;lcd.h: 74: Lcd_Cmd(z);
  3365  0050  0878               	movf	Lcd_Set_Cursor@z,w
  3366  0051  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3367                           
  3368                           ;lcd.h: 75: Lcd_Cmd(y);
  3369  0056  087A               	movf	Lcd_Set_Cursor@y,w
  3370  0057  120A  158A  2712   	fcall	_Lcd_Cmd
  3371  005A  0008               	return
  3372  005B                     __end_of_Lcd_Set_Cursor:	
  3373                           
  3374                           	psect	text14
  3375  005B                     __ptext14:	
  3376 ;; *************** function _Lcd_Init *****************
  3377 ;; Defined at:
  3378 ;;		line 79 in file "lcd.h"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;		None               void
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0
  3394 ;;      Temps:          2       0       0       0       0
  3395 ;;      Totals:         2       0       0       0       0
  3396 ;;Total ram usage:        2 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    2
  3399 ;; This function calls:
  3400 ;;		_Lcd_Cmd
  3401 ;;		_Lcd_Port
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           
  3408                           ;psect for function _Lcd_Init
  3409  005B                     _Lcd_Init:	
  3410                           
  3411                           ;lcd.h: 82: Lcd_Port(0x00);
  3412                           
  3413                           ;incstack = 0
  3414                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3415  005B  3000               	movlw	0
  3416  005C  120A  158A  26F8  120A  118A  	fcall	_Lcd_Port
  3417                           
  3418                           ;lcd.h: 83: _delay((unsigned long)((20)*(8000000/4000.0)));
  3419  0061  3034               	movlw	52
  3420  0062  00F5               	movwf	??_Lcd_Init+1
  3421  0063  30F1               	movlw	241
  3422  0064  00F4               	movwf	??_Lcd_Init
  3423  0065                     u1907:	
  3424  0065  0BF4               	decfsz	??_Lcd_Init,f
  3425  0066  2865               	goto	u1907
  3426  0067  0BF5               	decfsz	??_Lcd_Init+1,f
  3427  0068  2865               	goto	u1907
  3428  0069  286A               	nop2
  3429                           
  3430                           ;lcd.h: 84: Lcd_Cmd(0x03);
  3431  006A  3003               	movlw	3
  3432  006B  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3433                           
  3434                           ;lcd.h: 85: _delay((unsigned long)((5)*(8000000/4000.0)));
  3435  0070  300D               	movlw	13
  3436  0071  00F5               	movwf	??_Lcd_Init+1
  3437  0072  30FB               	movlw	251
  3438  0073  00F4               	movwf	??_Lcd_Init
  3439  0074                     u1917:	
  3440  0074  0BF4               	decfsz	??_Lcd_Init,f
  3441  0075  2874               	goto	u1917
  3442  0076  0BF5               	decfsz	??_Lcd_Init+1,f
  3443  0077  2874               	goto	u1917
  3444  0078  2879               	nop2
  3445                           
  3446                           ;lcd.h: 86: Lcd_Cmd(0x03);
  3447  0079  3003               	movlw	3
  3448  007A  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3449                           
  3450                           ;lcd.h: 87: _delay((unsigned long)((11)*(8000000/4000.0)));
  3451  007F  301D               	movlw	29
  3452  0080  00F5               	movwf	??_Lcd_Init+1
  3453  0081  3091               	movlw	145
  3454  0082  00F4               	movwf	??_Lcd_Init
  3455  0083                     u1927:	
  3456  0083  0BF4               	decfsz	??_Lcd_Init,f
  3457  0084  2883               	goto	u1927
  3458  0085  0BF5               	decfsz	??_Lcd_Init+1,f
  3459  0086  2883               	goto	u1927
  3460                           
  3461                           ;lcd.h: 88: Lcd_Cmd(0x03);
  3462  0087  3003               	movlw	3
  3463  0088  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3464                           
  3465                           ;lcd.h: 90: Lcd_Cmd(0x02);
  3466  008D  3002               	movlw	2
  3467  008E  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3468                           
  3469                           ;lcd.h: 91: Lcd_Cmd(0x02);
  3470  0093  3002               	movlw	2
  3471  0094  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3472                           
  3473                           ;lcd.h: 92: Lcd_Cmd(0x08);
  3474  0099  3008               	movlw	8
  3475  009A  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3476                           
  3477                           ;lcd.h: 93: Lcd_Cmd(0x00);
  3478  009F  3000               	movlw	0
  3479  00A0  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3480                           
  3481                           ;lcd.h: 94: Lcd_Cmd(0x0C);
  3482  00A5  300C               	movlw	12
  3483  00A6  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3484                           
  3485                           ;lcd.h: 95: Lcd_Cmd(0x00);
  3486  00AB  3000               	movlw	0
  3487  00AC  120A  158A  2712  120A  118A  	fcall	_Lcd_Cmd
  3488                           
  3489                           ;lcd.h: 96: Lcd_Cmd(0x06);
  3490  00B1  3006               	movlw	6
  3491  00B2  120A  158A  2712   	fcall	_Lcd_Cmd
  3492  00B5  0008               	return
  3493  00B6                     __end_of_Lcd_Init:	
  3494                           
  3495                           	psect	text15
  3496  0EE2                     __ptext15:	
  3497 ;; *************** function _Lcd_Clear *****************
  3498 ;; Defined at:
  3499 ;;		line 52 in file "lcd.h"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  2   41[COMMON] int 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0, pclath, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3513 ;;      Params:         0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    2
  3520 ;; This function calls:
  3521 ;;		_Lcd_Cmd
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _Lcd_Clear
  3529  0EE2                     _Lcd_Clear:	
  3530                           
  3531                           ;lcd.h: 54: Lcd_Cmd(0);
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3535  0EE2  3000               	movlw	0
  3536  0EE3  120A  158A  2712  120A  158A  	fcall	_Lcd_Cmd
  3537                           
  3538                           ;lcd.h: 55: Lcd_Cmd(1);
  3539  0EE8  3001               	movlw	1
  3540  0EE9  120A  158A  2712   	fcall	_Lcd_Cmd
  3541  0EEC  0008               	return
  3542  0EED                     __end_of_Lcd_Clear:	
  3543                           
  3544                           	psect	text16
  3545  0F12                     __ptext16:	
  3546 ;; *************** function _Lcd_Cmd *****************
  3547 ;; Defined at:
  3548 ;;		line 43 in file "lcd.h"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  a               1    wreg     unsigned char 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  a               1    3[COMMON] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;		None               void
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, pclath, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       0       0       0       0
  3563 ;;      Locals:         1       0       0       0       0
  3564 ;;      Temps:          2       0       0       0       0
  3565 ;;      Totals:         3       0       0       0       0
  3566 ;;Total ram usage:        3 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    1
  3569 ;; This function calls:
  3570 ;;		_Lcd_Port
  3571 ;; This function is called by:
  3572 ;;		_Lcd_Clear
  3573 ;;		_Lcd_Set_Cursor
  3574 ;;		_Lcd_Init
  3575 ;;		_Lcd_Shift_Right
  3576 ;;		_Lcd_Shift_Left
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _Lcd_Cmd
  3582  0F12                     _Lcd_Cmd:	
  3583                           
  3584                           ;incstack = 0
  3585                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3586                           ;Lcd_Cmd@a stored from wreg
  3587  0F12  00F3               	movwf	Lcd_Cmd@a
  3588                           
  3589                           ;lcd.h: 45: RD1 = 0;
  3590  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  3592  0F15  1088               	bcf	8,1	;volatile
  3593                           
  3594                           ;lcd.h: 46: Lcd_Port(a);
  3595  0F16  0873               	movf	Lcd_Cmd@a,w
  3596  0F17  120A  158A  26F8  120A  158A  	fcall	_Lcd_Port
  3597                           
  3598                           ;lcd.h: 47: RD0 = 1;
  3599  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  3600  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  3601  0F1E  1408               	bsf	8,0	;volatile
  3602                           
  3603                           ;lcd.h: 48: _delay((unsigned long)((4)*(8000000/4000.0)));
  3604  0F1F  300B               	movlw	11
  3605  0F20  00F2               	movwf	??_Lcd_Cmd+1
  3606  0F21  3062               	movlw	98
  3607  0F22  00F1               	movwf	??_Lcd_Cmd
  3608  0F23                     u1937:	
  3609  0F23  0BF1               	decfsz	??_Lcd_Cmd,f
  3610  0F24  2F23               	goto	u1937
  3611  0F25  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3612  0F26  2F23               	goto	u1937
  3613  0F27  0000               	nop
  3614                           
  3615                           ;lcd.h: 49: RD0 = 0;
  3616  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0F2A  1008               	bcf	8,0	;volatile
  3619  0F2B  0008               	return
  3620  0F2C                     __end_of_Lcd_Cmd:	
  3621                           
  3622                           	psect	text17
  3623  0EF8                     __ptext17:	
  3624 ;; *************** function _Lcd_Port *****************
  3625 ;; Defined at:
  3626 ;;		line 21 in file "lcd.h"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  a               1    wreg     unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  a               1    0[COMMON] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;		None               void
  3633 ;; Registers used:
  3634 ;;		wreg
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3640 ;;      Params:         0       0       0       0       0
  3641 ;;      Locals:         1       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0
  3643 ;;      Totals:         1       0       0       0       0
  3644 ;;Total ram usage:        1 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_Lcd_Cmd
  3650 ;;		_Lcd_Init
  3651 ;;		_Lcd_Write_Char
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           
  3656                           ;psect for function _Lcd_Port
  3657  0EF8                     _Lcd_Port:	
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _Lcd_Port: [wreg]
  3661                           ;Lcd_Port@a stored from wreg
  3662  0EF8  00F0               	movwf	Lcd_Port@a
  3663                           
  3664                           ;lcd.h: 23: if(a & 1)
  3665  0EF9  1C70               	btfss	Lcd_Port@a,0
  3666  0EFA  2EFF               	goto	l28
  3667                           
  3668                           ;lcd.h: 24: RD4 = 1;
  3669  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  3671  0EFD  1608               	bsf	8,4	;volatile
  3672  0EFE  2F02               	goto	l29
  3673  0EFF                     l28:	
  3674                           
  3675                           ;lcd.h: 25: else
  3676                           ;lcd.h: 26: RD4 = 0;
  3677  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3678  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3679  0F01  1208               	bcf	8,4	;volatile
  3680  0F02                     l29:	
  3681                           
  3682                           ;lcd.h: 28: if(a & 2)
  3683  0F02  1CF0               	btfss	Lcd_Port@a,1
  3684  0F03  2F06               	goto	l30
  3685                           
  3686                           ;lcd.h: 29: RD5 = 1;
  3687  0F04  1688               	bsf	8,5	;volatile
  3688  0F05  2F07               	goto	l31
  3689  0F06                     l30:	
  3690                           
  3691                           ;lcd.h: 30: else
  3692                           ;lcd.h: 31: RD5 = 0;
  3693  0F06  1288               	bcf	8,5	;volatile
  3694  0F07                     l31:	
  3695                           
  3696                           ;lcd.h: 33: if(a & 4)
  3697  0F07  1D70               	btfss	Lcd_Port@a,2
  3698  0F08  2F0B               	goto	l32
  3699                           
  3700                           ;lcd.h: 34: RD6 = 1;
  3701  0F09  1708               	bsf	8,6	;volatile
  3702  0F0A  2F0C               	goto	l33
  3703  0F0B                     l32:	
  3704                           
  3705                           ;lcd.h: 35: else
  3706                           ;lcd.h: 36: RD6 = 0;
  3707  0F0B  1308               	bcf	8,6	;volatile
  3708  0F0C                     l33:	
  3709                           
  3710                           ;lcd.h: 38: if(a & 8)
  3711  0F0C  1DF0               	btfss	Lcd_Port@a,3
  3712  0F0D  2F10               	goto	l34
  3713                           
  3714                           ;lcd.h: 39: RD7 = 1;
  3715  0F0E  1788               	bsf	8,7	;volatile
  3716  0F0F  0008               	return
  3717  0F10                     l34:	
  3718                           
  3719                           ;lcd.h: 40: else
  3720                           ;lcd.h: 41: RD7 = 0;
  3721  0F10  1388               	bcf	8,7	;volatile
  3722  0F11  0008               	return
  3723  0F12                     __end_of_Lcd_Port:	
  3724  007E                     btemp	set	126	;btemp
  3725  007E                     wtemp	set	126
  3726  007E                     wtemp0	set	126
  3727  0080                     wtemp1	set	128
  3728  0082                     wtemp2	set	130
  3729  0084                     wtemp3	set	132
  3730  0086                     wtemp4	set	134
  3731  0088                     wtemp5	set	136
  3732  007F                     wtemp6	set	127
  3733  007E                     ttemp	set	126
  3734  007E                     ttemp0	set	126
  3735  0081                     ttemp1	set	129
  3736  0084                     ttemp2	set	132
  3737  0087                     ttemp3	set	135
  3738  007F                     ttemp4	set	127
  3739  007E                     ltemp	set	126
  3740  007E                     ltemp0	set	126
  3741  0082                     ltemp1	set	130
  3742  0086                     ltemp2	set	134
  3743  0080                     ltemp3	set	128


Data Sizes:
    Strings     57
    Constant    0
    Data        0
    BSS         31
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    modf@iptr	PTR  size(1) Largest target is 3
		 -> valor3(BANK0[3]), valor1(BANK0[3]), entero(BANK0[3]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[11]), STR_5(CODE[6]), STR_4(CODE[2]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___ftdiv
    _main->___ftmul
    _main->___fttol
    _modf->___fttol
    ___ftadd->___ftmul
    ___attoft->___fttol
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_modf
    _modf->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   16146
                                             27 BANK0      6     6      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                               _modf
                           _pic_init
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2     115
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _modf                                                 4     0      4    5985
                                             23 BANK0      4     0      4
                           ___attoft
                            ___ftadd
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     517
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3135
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___attoft                                             6     3      3    1829
                                              0 BANK0      6     3      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2329
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2071
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1685
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     862
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                      10     9      1     645
                                              4 COMMON    10     9      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftpack
   ___ftmul
     ___ftpack
   ___fttol
   _modf
     ___attoft
       ___ftpack
       ___fttol (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___fttol
   _pic_init
   _srand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      53       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      45       5       86.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      53      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Aug 07 11:22:36 2015

                        pc 0002                __CFG_CP$OFF 0000                         l30 0F06  
                       l31 0F07                         l32 0F0B                         l33 0F0C  
                       l34 0F10                         l28 0EFF                         l29 0F02  
                       fsr 0004               ___ftadd@exp1 0036               ___ftadd@exp2 0035  
             ___ftadd@sign 0034                        l342 00EC                        l371 03D9  
                      l348 0105                        _RD0 0040                        _RD1 0041  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047               __CFG_CPD$OFF 0000                        u905 00F4  
                      u935 010C                        u865 00CA                        u955 0F88  
                      u885 00E5                        fsr0 0004                        indf 0000  
             __CFG_FOSC$HS 0000               ___ftdiv@cntr 0024               ___ftdiv@sign 0029  
                     l1100 00F1                       l1102 00FB                       l1200 03C9  
                     l1210 03FD                       l1202 03D5                       l1220 0420  
                     l1206 03EB                       l1160 035A                       l1090 00C5  
                     l1402 02CD                       l1170 0370                       l1092 00D1  
                     l1148 0F5D                       l1164 0361                       l1326 0F2F  
                     l1094 00D6                       l1086 00BE                       l1342 01C2  
                     l1414 02F5                       l1406 02DD                       l1190 03AB  
                     l1182 038A                       l1238 0136                       l1192 03B0  
                     l1272 01A1                       l1264 0185                       l1256 0168  
                     l1370 023C                       l1362 021D                       l1418 0305  
                     l1194 03B4                       l1266 0190                       l1258 0178  
                     l1348 01D8                       l1188 039F                       l1268 0193  
                     l1390 028E                       l1384 0278                       l1298 0030  
                     l1458 04B9                       STR_1 0806                       STR_2 0818  
                     STR_3 0832                       STR_4 0830                       STR_5 0839  
                     STR_6 0827                       STR_7 0830                       STR_8 0830  
                     STR_9 0830                       u1125 03B5                       u1065 038B  
                     u1155 03CA                       u1235 013D                       u1405 01FC  
                     u1335 0016                       u1415 021E                       u1095 03A0  
                     u1425 022F                       u1265 0169                       u1355 0041  
                     u1435 023D                       u1515 02DE                       u1525 02E6  
                     u1295 0187                       u1607 046B                       u1617 047C  
                     u1395 01EA                       u1475 029A                       u1707 066A  
                     u1627 048F                       u1565 0306                       u1485 02AC  
                     u1717 067D                       u1637 04A2                       u1575 030E  
                     u1807 0755                       u1727 06AD                       u1647 04B4  
                     u1817 076A                       u1737 06C2                       u1657 05E1  
                     u1907 0065                       u1827 077F                       u1747 06D7  
                     u1667 05FF                       u1917 0074                       u1837 0794  
                     u1757 06EC                       u1677 061D                       u1597 0458  
                     u1927 0083                       u1847 07A9                       u1767 0701  
                     u1687 062E                       u1937 0F23                       u1857 07BE  
                     u1777 0716                       u1697 064C                       u1867 07D3  
                     u1787 072B                       u1877 07E8                       u1797 0740  
                     u1887 0F98                       u1897 0FA9               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0070                       _main 043A               ___ftpack@arg 0070  
                     _modf 0FB0               ___ftpack@exp 0073                       btemp 007E  
            __CFG_BOREN$ON 0000                       ltemp 007E                       start 0000  
                     ttemp 007E         ??_Lcd_Write_String 0075                       wtemp 007E  
          __end_of_Lcd_Cmd 0F2C               ___ftmul@cntr 0028               ___ftmul@sign 0029  
             ___fttol@exp1 007D               ___fttol@lval 0079              ___attoft@sign 0025  
                    ?_main 0070                      ?_modf 0037            __end_of___ftadd 043A  
                    STR_10 0830                      STR_11 0830                      STR_20 0830  
                    STR_12 0830                      STR_21 0830                      STR_13 0830  
                    STR_22 0830                      STR_14 0830                      STR_15 0830  
                    STR_16 0830                      STR_17 0830              __CFG_WDTE$OFF 0000  
                    STR_18 0830                      STR_19 0830            __end_of___ftdiv 0260  
          __end_of___ftneg 0EDA            __end_of___ftmul 0331            __end_of___fttol 01AA  
  __size_of_Lcd_Set_Cursor 0057                      _TRISD 0088                      _randf 0064  
                    _randx 0060              ___ftpack@sign 0074                      _srand 0EED  
                    main@a 003E                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F           __end_of_Lcd_Init 00B6           __end_of_Lcd_Port 0F12  
          __initialization 07F5               __end_of_main 07F5               __end_of_modf 1000  
                   ??_main 003B              ___fttol@sign1 0078                     ??_modf 007E  
       __size_of_Lcd_Clear 000B           __end_of___attoft 0F77                     ?_srand 0070  
         __end_of___ftpack 011E                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039  
           __CFG_PWRTE$OFF 0000                     _Litros 0041                  ??___ftadd 0030  
                ??___ftdiv 0020                  ??___ftneg 0073                  ??___ftmul 0020  
                ??___fttol 0074                     _entero 0057                     _estado 0055  
         __end_of_pic_init 0ED2                     _valor1 005A                     _valor2 004D  
                   _valor3 005D                     _valor4 0050      ___ftmul@f3_as_product 0025  
                   srand@x 0070            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 007A            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
               ___ftadd@f1 002A                 ___ftadd@f2 002D          __end_of_Lcd_Clear 0EED  
               ___ftdiv@f1 007B                 ___ftdiv@f2 0078                 ___ftdiv@f3 0025  
               ___attoft@c 0020                 ___ftneg@f1 0070                 ___ftmul@f1 0078  
               ___ftmul@f2 007B                 ___fttol@f1 0070             __pcstackCOMMON 0070  
            __end_of_srand 0EF8             _Lcd_Set_Cursor 0004                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_srand 0072                 __pbssBANK0 0041  
               __pmaintext 043A                  ?___attoft 0020  __size_of_Lcd_Write_String 0022  
                ?___ftpack 0070     __end_of_Lcd_Set_Cursor 005B                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0800             _Lcd_Write_Char 0F77  
                  _Lcd_Cmd 0F12                  ?_pic_init 0070                    ___ftadd 0331  
                  ___ftdiv 01AA                    ___ftneg 0ED2                    ___ftmul 0260  
                  ___fttol 011E                _TiempoPulso 0053                    _decimal 0044  
               ??___attoft 0023                 ??___ftpack 0075            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0EED                    __ptext2 0ECB                    __ptext3 0FB0  
                  __ptext4 011E                    __ptext5 0ED2                    __ptext6 0331  
                  __ptext7 0F4E                    __ptext8 0260                    __ptext9 01AA  
                  _enteros 004A                    clrloop0 0EDB     __end_of_Lcd_Write_Char 0FB0  
     end_of_initialization 07FC                 ??_pic_init 0070                  Lcd_Port@a 0070  
                _TRISAbits 0085            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075                ___ftdiv@exp 0028                ___ftmul@exp 0024  
                _Lcd_Clear 0EE2           _Lcd_Write_String 0F2C        start_initialization 07F5  
        __size_of_Lcd_Init 005B          __size_of_Lcd_Port 001A                 ?_Lcd_Clear 0070  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073          __size_of___attoft 0029  
        __size_of___ftpack 0068                  ___latbits 0002              __pcstackBANK0 0020  
      __end_of__stringdata 083F                   ?_Lcd_Cmd 0070                  _decimales 0047  
                __pnvBANK0 0060          __size_of_pic_init 0007           ??_Lcd_Set_Cursor 0075  
                 ?___ftadd 002A                   ?___ftdiv 0078                   ?___ftneg 0070  
                 ?___ftmul 0078                   ?___fttol 0070                  __pstrings 0800  
           __size_of_srand 000B                  clear_ram0 0EDA                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0805                __stringdata 0806  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 005B                   _Lcd_Port 0EF8  
 __end_of_Lcd_Write_String 0F4E           __size_of_Lcd_Cmd 001A                  modf@value 0037  
         __size_of___ftadd 0109           __size_of___ftdiv 00B6           __size_of___ftneg 0008  
         __size_of___ftmul 00D1           __size_of___fttol 008C                   ___attoft 0F4E  
                 ___ftpack 00B6         __end_of__stringtab 0806                   __ptext10 00B6  
                 __ptext11 0F2C                   __ptext12 0F77                   __ptext13 0004  
                 __ptext14 005B                   __ptext15 0EE2                   __ptext16 0F12  
                 __ptext17 0EF8              __size_of_main 03BB              __size_of_modf 0050  
                 _pic_init 0ECB                   modf@iptr 003A         Lcd_Write_Char@temp 0072  
                stringcode 0800         Lcd_Set_Cursor@temp 007C                   stringdir 0800  
                 stringtab 0800  
