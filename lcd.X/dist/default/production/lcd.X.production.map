Microchip MPLAB XC8 Compiler V1.32 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.32\dat\en_msgs.txt -cs \
  -h+dist/default/production\lcd.X.production.sym \
  --cmf=dist/default/production\lcd.X.production.cmf -z -Q16F877A \
  -oC:\Users\ricardo\AppData\Local\Temp\shgc.6 \
  -Mdist/default/production/lcd.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACONST=00h-0FFhx32 -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -AENTRY=00h-0FFhx32 -ASTRING=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\ricardo\AppData\Local\Temp\shgc.obj \
  dist/default/production\lcd.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ricardo\AppData\Local\Temp\shgc.obj
                end_init                              0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\lcd.X.production.obj
                cinit                               7F5      7F5        B      FEA       0
                text17                              EF8      EF8       1A     1DF0       0
                text16                              F12      F12       1A     1E24       0
                text15                              EE2      EE2        B     1DC4       0
                text14                               5B       5B       5B       B6       0
                text13                                4        4       57        8       0
                text12                              F77      F77       39     1EEE       0
                text11                              F2C      F2C       22     1E58       0
                text10                               B6       B6       68      16C       0
                text9                               1AA      1AA       B6      354       0
                text8                               260      260       D1      4C0       0
                text7                               F4E      F4E       29     1E9C       0
                text6                               331      331      109      662       0
                text5                               ED2      ED2        8     1DA4       0
                text4                               11E      11E       8C      23C       0
                text3                               FB0      FB0       50     1F60       0
                text2                               ECB      ECB        7     1D96       0
                text1                               EED      EED        B     1DDA       0
                maintext                            43A      43A      3BB      874       0
                cstackBANK0                          20       20       21       20       1
                cstackCOMMON                         70       70        E       70       1
                clrtext                             EDA      EDA        8     1DB4       0
                bssBANK0                             41       41       1F       20       1
                strings                             800      800       3F     1000       0
                nvBANK0                              60       60        5       20       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CONST          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7F5      7F5        B         0
                text17                              EF8      EF8       1A         0
                text16                              F12      F12       1A         0
                text15                              EE2      EE2        B         0
                text14                               5B       5B       5B         0
                text13                                4        4       57         0
                text12                              F77      F77       39         0
                text11                              F2C      F2C       22         0
                text10                               B6       B6       68         0
                text9                               1AA      1AA       B6         0
                text8                               260      260       D1         0
                text7                               F4E      F4E       29         0
                text6                               331      331      109         0
                text5                               ED2      ED2        8         0
                text4                               11E      11E       8C         0
                text3                               FB0      FB0       50         0
                text2                               ECB      ECB        7         0
                text1                               EED      EED        B         0
                maintext                            43A      43A      3BB         0
                clrtext                             EDA      EDA        8         0

        CLASS   STRCODE        

        CLASS   ENTRY          

        CLASS   STRING         
                strings                             800      800       3F         0

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       21         1
                bssBANK0                             41       41       1F         1
                nvBANK0                              60       60        5         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                text13                         000004  000057  00005B         8       0  CODE        2
                cstackBANK0                    000020  000045  000065        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text14                         00005B  00005B  0000B6        B6       0  CODE        2
                text10                         0000B6  000068  00011E       16C       0  CODE        2
                text4                          00011E  00008C  0001AA       23C       0  CODE        2
                text9                          0001AA  0000B6  000260       354       0  CODE        2
                text8                          000260  0000D1  000331       4C0       0  CODE        2
                text6                          000331  000109  00043A       662       0  CODE        2
                maintext                       00043A  0003BB  0007F5       874       0  CODE        2
                cinit                          0007F5  00000B  000800       FEA       0  CODE        2
                strings                        000800  00003F  00083F      1000       0  STRING      2
                text2                          000ECB  000007  000ED2      1D96       0  CODE        2
                text5                          000ED2  000008  000EDA      1DA4       0  CODE        2
                clrtext                        000EDA  000008  000EE2      1DB4       0  CODE        2
                text15                         000EE2  00000B  000EED      1DC4       0  CODE        2
                text1                          000EED  00000B  000EF8      1DDA       0  CODE        2
                text17                         000EF8  00001A  000F12      1DF0       0  CODE        2
                text16                         000F12  00001A  000F2C      1E24       0  CODE        2
                text11                         000F2C  000022  000F4E      1E58       0  CODE        2
                text7                          000F4E  000029  000F77      1E9C       0  CODE        2
                text12                         000F77  000039  000FB0      1EEE       0  CODE        2
                text3                          000FB0  000050  001000      1F60       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0065-006F              B           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         083F-0ECA            68C
                         1000-1FFF            800
        CONST            0003-0003              1           2
                         083F-0ECA            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         083F-0ECA            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0065-006F              B           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         083F-0ECA            68C
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         083F-0ECA            100
                         1000-1FFF            100

                                  Symbol Table

?___attoft                 cstackBANK0  0020
?___ftadd                  cstackBANK0  002A
?___ftdiv                  cstackCOMMON 0078
?___ftmul                  cstackCOMMON 0078
?___ftneg                  cstackCOMMON 0070
?___ftpack                 cstackCOMMON 0070
?___fttol                  cstackCOMMON 0070
?_modf                     cstackBANK0  0037
Lcd_Cmd@a                  cstackCOMMON 0073
Lcd_Port@a                 cstackCOMMON 0070
Lcd_Set_Cursor@a           cstackCOMMON 0077
Lcd_Set_Cursor@b           cstackCOMMON 0074
Lcd_Set_Cursor@temp        cstackCOMMON 007C
Lcd_Set_Cursor@y           cstackCOMMON 007A
Lcd_Set_Cursor@z           cstackCOMMON 0078
Lcd_Write_Char@a           cstackCOMMON 0074
Lcd_Write_Char@temp        cstackCOMMON 0072
Lcd_Write_Char@y           cstackCOMMON 0073
Lcd_Write_String@a         cstackCOMMON 0077
Lcd_Write_String@i         cstackCOMMON 0075
_Lcd_Clear                 text15       0EE2
_Lcd_Cmd                   text16       0F12
_Lcd_Init                  text14       005B
_Lcd_Port                  text17       0EF8
_Lcd_Set_Cursor            text13       0004
_Lcd_Write_Char            text12       0F77
_Lcd_Write_String          text11       0F2C
_Litros                    bssBANK0     0041
_RD0                       (abs)        0040
_RD1                       (abs)        0041
_RD4                       (abs)        0044
_RD5                       (abs)        0045
_RD6                       (abs)        0046
_RD7                       (abs)        0047
_TRISAbits                 (abs)        0085
_TRISD                     (abs)        0088
_TiempoPulso               bssBANK0     0053
__CFG_BOREN$ON             (abs)        0000
__CFG_CP$OFF               (abs)        0000
__CFG_CPD$OFF              (abs)        0000
__CFG_FOSC$HS              (abs)        0000
__CFG_PWRTE$OFF            (abs)        0000
__CFG_WDTE$OFF             (abs)        0000
__CFG_WRT$OFF              (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__Hcinit                   cinit        0800
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2008
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0003
__Hfunctab                 functab      0000
__Hidloc                   idloc        0000
__Hinit                    init         0000
__Hintentry                intentry     0000
__Hmaintext                maintext     0000
__HnvBANK0                 nvBANK0      0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0000
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2008
__Hspace_1                 (abs)        007E
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__Lcinit                   cinit        07F5
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0000
__Lfunctab                 functab      0000
__Lidloc                   idloc        0000
__Linit                    init         0000
__Lintentry                intentry     0000
__Lmaintext                maintext     0000
__LnvBANK0                 nvBANK0      0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2008
__S1                       (abs)        007E
__S2                       (abs)        0000
__S3                       (abs)        0000
___attoft                  text7        0F4E
___attoft@c                cstackBANK0  0020
___attoft@sign             cstackBANK0  0025
___ftadd                   text6        0331
___ftadd@exp1              cstackBANK0  0036
___ftadd@exp2              cstackBANK0  0035
___ftadd@f1                cstackBANK0  002A
___ftadd@f2                cstackBANK0  002D
___ftadd@sign              cstackBANK0  0034
___ftdiv                   text9        01AA
___ftdiv@cntr              cstackBANK0  0024
___ftdiv@exp               cstackBANK0  0028
___ftdiv@f1                cstackCOMMON 007B
___ftdiv@f2                cstackCOMMON 0078
___ftdiv@f3                cstackBANK0  0025
___ftdiv@sign              cstackBANK0  0029
___ftmul                   text8        0260
___ftmul@cntr              cstackBANK0  0028
___ftmul@exp               cstackBANK0  0024
___ftmul@f1                cstackCOMMON 0078
___ftmul@f2                cstackCOMMON 007B
___ftmul@f3_as_product     cstackBANK0  0025
___ftmul@sign              cstackBANK0  0029
___ftneg                   text5        0ED2
___ftneg@f1                cstackCOMMON 0070
___ftpack                  text10       00B6
___ftpack@arg              cstackCOMMON 0070
___ftpack@exp              cstackCOMMON 0073
___ftpack@sign             cstackCOMMON 0074
___fttol                   text4        011E
___fttol@exp1              cstackCOMMON 007D
___fttol@f1                cstackCOMMON 0070
___fttol@lval              cstackCOMMON 0079
___fttol@sign1             cstackCOMMON 0078
___int_sp                  stack        0000
___latbits                 (abs)        0002
___sp                      stack        0000
__end_of_Lcd_Clear         text15       0EED
__end_of_Lcd_Cmd           text16       0F2C
__end_of_Lcd_Init          text14       00B6
__end_of_Lcd_Port          text17       0F12
__end_of_Lcd_Set_Cursor    text13       005B
__end_of_Lcd_Write_Char    text12       0FB0
__end_of_Lcd_Write_String  text11       0F4E
__end_of___attoft          text7        0F77
__end_of___ftadd           text6        043A
__end_of___ftdiv           text9        0260
__end_of___ftmul           text8        0331
__end_of___ftneg           text5        0EDA
__end_of___ftpack          text10       011E
__end_of___fttol           text4        01AA
__end_of__initialization   cinit        07FC
__end_of__stringdata       strings      083F
__end_of__stringtab        strings      0806
__end_of_main              maintext     07F5
__end_of_modf              text3        1000
__end_of_pic_init          text2        0ED2
__end_of_srand             text1        0EF8
__initialization           cinit        07F5
__pbssBANK0                bssBANK0     0041
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pmaintext                maintext     043A
__pnvBANK0                 nvBANK0      0060
__pstrings                 strings      0800
__ptext1                   text1        0EED
__ptext10                  text10       00B6
__ptext11                  text11       0F2C
__ptext12                  text12       0F77
__ptext13                  text13       0004
__ptext14                  text14       005B
__ptext15                  text15       0EE2
__ptext16                  text16       0F12
__ptext17                  text17       0EF8
__ptext2                   text2        0ECB
__ptext3                   text3        0FB0
__ptext4                   text4        011E
__ptext5                   text5        0ED2
__ptext6                   text6        0331
__ptext7                   text7        0F4E
__ptext8                   text8        0260
__ptext9                   text9        01AA
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of___attoft         (abs)        0000
__size_of___ftadd          (abs)        0000
__size_of___ftdiv          (abs)        0000
__size_of___ftmul          (abs)        0000
__size_of___ftneg          (abs)        0000
__size_of___ftpack         (abs)        0000
__size_of___fttol          (abs)        0000
__size_of_main             (abs)        0000
__size_of_modf             (abs)        0000
__size_of_pic_init         (abs)        0000
__size_of_srand            (abs)        0000
__stringbase               strings      0805
__stringdata               strings      0806
__stringtab                strings      0800
_decimal                   bssBANK0     0044
_decimales                 bssBANK0     0047
_entero                    bssBANK0     0057
_enteros                   bssBANK0     004A
_estado                    bssBANK0     0055
_main                      maintext     043A
_modf                      text3        0FB0
_pic_init                  text2        0ECB
_randf                     nvBANK0      0064
_randx                     nvBANK0      0060
_srand                     text1        0EED
_valor1                    bssBANK0     005A
_valor2                    bssBANK0     004D
_valor3                    bssBANK0     005D
_valor4                    bssBANK0     0050
btemp                      (abs)        007E
clear_ram0                 clrtext      0EDA
end_of_initialization      cinit        07FC
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
ltemp                      (abs)        007E
ltemp0                     (abs)        007E
ltemp1                     (abs)        0082
ltemp2                     (abs)        0086
ltemp3                     (abs)        0080
main@a                     cstackBANK0  003E
modf@iptr                  cstackBANK0  003A
modf@value                 cstackBANK0  0037
reset_vec                  reset_vec    0000
srand@x                    cstackCOMMON 0070
stackhi                    (abs)        0000
stacklo                    (abs)        0000
start                      init         0000
start_initialization       cinit        07F5
ttemp                      (abs)        007E
ttemp0                     (abs)        007E
ttemp1                     (abs)        0081
ttemp2                     (abs)        0084
ttemp3                     (abs)        0087
ttemp4                     (abs)        007F
wtemp                      (abs)        007E
wtemp0                     (abs)        007E
wtemp1                     (abs)        0080
wtemp2                     (abs)        0082
wtemp3                     (abs)        0084
wtemp4                     (abs)        0086
wtemp5                     (abs)        0088
wtemp6                     (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 32 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  a               3   30[BANK0 ] float 
 Return value:  Size  Location     Type
                  2   93[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_Char
		_Lcd_Write_String
		___ftadd
		___ftdiv
		___ftmul
		___fttol
		_modf
		_pic_init
		_srand
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _srand *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\rand.c"
 Parameters:    Size  Location     Type
  x               2    0[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _pic_init *****************
 Defined at:
		line 10 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _modf *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\modf.c"
 Parameters:    Size  Location     Type
  value           3   23[BANK0 ] unsigned int 
  iptr            1   26[BANK0 ] PTR 
		 -> valor3(3), valor1(3), entero(3), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   23[BANK0 ] PTR 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___attoft
		___ftadd
		___ftneg
		___fttol
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMMON] float 
 Auto vars:     Size  Location     Type
  lval            4    9[COMMON] unsigned long 
  exp1            1   13[COMMON] unsigned char 
  sign1           1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMMON] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         6       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:        14       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_modf
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMMON] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMMON] float 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_modf
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   10[BANK0 ] float 
  f2              3   13[BANK0 ] float 
 Auto vars:     Size  Location     Type
  exp1            1   22[BANK0 ] unsigned char 
  exp2            1   21[BANK0 ] unsigned char 
  sign            1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   10[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_main
		_modf
 This function uses a non-reentrant model


 *************** function ___attoft *****************
 Defined at:
		line 37 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\attoft.c"
 Parameters:    Size  Location     Type
  c               3    0[BANK0 ] m
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    0[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_modf
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3    8[COMMON] float 
  f2              3   11[COMMON] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3    5[BANK0 ] unsigned um
  sign            1    9[BANK0 ] unsigned char 
  cntr            1    8[BANK0 ] unsigned char 
  exp             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         6       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         6      10       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 Parameters:    Size  Location     Type
  f2              3    8[COMMON] float 
  f1              3   11[COMMON] float 
 Auto vars:     Size  Location     Type
  f3              3    5[BANK0 ] float 
  sign            1    9[BANK0 ] unsigned char 
  exp             1    8[BANK0 ] unsigned char 
  cntr            1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         6       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         6      10       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMMON] unsigned um
  exp             1    3[COMMON] unsigned char 
  sign            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMMON] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         5       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___attoft
		___ftadd
		___ftdiv
		___ftmul
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 116 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
		 -> STR_6(11), STR_5(6), STR_4(2), STR_3(7), 
		 -> STR_2(15), STR_1(18), 
 Auto vars:     Size  Location     Type
  a               1    7[COMMON] PTR unsigned char 
		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
		 -> STR_6(11), STR_5(6), STR_4(2), STR_3(7), 
		 -> STR_2(15), STR_1(18), 
  i               2    5[COMMON] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 99 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[COMMON] unsigned char 
  y               1    3[COMMON] unsigned char 
  temp            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 58 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    7[COMMON] unsigned char 
  temp            2   12[COMMON] int 
  y               2   10[COMMON] int 
  z               2    8[COMMON] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         7       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:        10       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 79 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 52 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   41[COMMON] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 43 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 21 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c
		___ftpack      		CODE           	00B6	0000	104

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c estimated size: 104

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c
		___ftmul       		CODE           	0260	0000	209

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c estimated size: 209

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c
		___fttol       		CODE           	011E	0000	140

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c estimated size: 140

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\rand.c
		_srand         		CODE           	0EED	0000	11

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\rand.c estimated size: 11

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c
		___ftadd       		CODE           	0331	0000	265

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c estimated size: 265

shared
		__stringtab    		STRING         	0800	0000	6
		__stringdata   		STRING         	0806	0000	57
		__initializatio		CODE           	07F5	0000	7

shared estimated size: 70

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\attoft.c
		___attoft      		CODE           	0F4E	0000	41

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\attoft.c estimated size: 41

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c
		___ftneg       		CODE           	0ED2	0000	8

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c estimated size: 8

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\modf.c
		_modf          		CODE           	0FB0	0000	80

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\modf.c estimated size: 80

lcd.h
		_Lcd_Write_Stri		CODE           	0F2C	0000	34
		_pic_init      		CODE           	0ECB	0000	7
		_Lcd_Init      		CODE           	005B	0000	91
		_Lcd_Write_Char		CODE           	0F77	0000	57
		_Lcd_Cmd       		CODE           	0F12	0000	26
		_Lcd_Set_Cursor		CODE           	0004	0000	87
		_Lcd_Clear     		CODE           	0EE2	0000	11
		_Lcd_Port      		CODE           	0EF8	0000	26

lcd.h estimated size: 339

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c
		___ftdiv       		CODE           	01AA	0000	182

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c estimated size: 182

main.c
		_main          		CODE           	043A	0000	955

main.c estimated size: 955

